---
en:
  # universal/global
  international: 繁體中文
  inverse_perpetual: Inverse Perpetual
  linear_perpetual: USDT Perpetual
  account_asset: Account Asset
  usdc_option: Option
  usdc_perpetual: Perpetual
  search: Search
  comment_abandoned: <b>Abandoned!!</b>
  httprequest: HTTP Request
  requestparameters: Request Parameters
  responseparameters: Response Parameters
  resonoferror: Reason of Error
  codequote_responseExample: Response Example
  codequote_responseExampleFormatAll: Response Example - format of all responses
  codequote_curlExample: Request Example
  codequote_Example: Code Example
  codequote_subscribe: How to Subscribe
  codequote_snapshot: Snapshot Response Example - format of the first response
  codequote_delta: Delta Response Example - format of the responses following the snapshot response
  column_parameter: Parameter
  column_required: Required
  column_type: Type
  column_comments: Comment
  row_comment_userID: UserID
  row_comment_accountID: AccountID
  row_comment_side: Side
  row_comment_side_taker: Side of taker order
  row_comment_symbol: Symbol
  row_comment_kline_list: an array of individual candles, Sort in reverse order by <code>start</code>, The default collation within the array is <code>start</code>, <code>open</code>, <code>high</code>, <code>low</code>, <code>close</code>, <code>volume</code>, <code>turnover</code>
  row_comment_mark_kline_list: an array of individual candles, Sort in reverse order by <code>start</code>, The default collation within the array is <code>start</code>, <code>open</code>, <code>high</code>, <code>low</code>, <code>close</code>
  row_comment_margin: margin
  row_comment_position_id: PositionID
  row_comment_position_idx: |
    Position idx, used to identify positions in different position modes<span>:</span> <br/>0-One-Way Mode <br/>1-Buy side of both side mode <br/> 2-Sell side of both side mode
  row_comment_position_idx_create_order: |
    Position idx, used to identify positions in different position modes. <b>Required</b> if you are under One-Way Mode<span>:</span> <br/>0-One-Way Mode <br/>1-Buy side of both side mode <br/> 2-Sell side of both side mode
  row_comment_position_idx_create_order_v3: |
    Position idx, used to identify positions in different position modes. <b>Required</b> if you are under Hedge Mode<span>:</span> <br/>0-One-Way Mode <br/>1-Buy side of both side mode <br/> 2-Sell side of both side mode
  row_comment_position_idx_create_order_inverse_futures: |
    Position idx, used to identify positions in different position modes. <b>Required</b>if you are under Hedge Mode<span>:</span> <br/>0-One-Way Mode <br/>1-Buy side of both side mode <br/> 2-Sell side of both side mode
  row_comment_position_idx_leverage: Deprecated!! Position idx
  row_comment_position_mode: Position mode
  row_comment_position_size: Position qty
  row_comment_position_value: Position value
  row_comment_entry_price: Average entry price
  row_comment_isolated: <code>true</code> means isolated margin mode; <code>false</code> means cross margin mode
  row_comment_auto_add_margin: Whether or not <a href="https://help.bybit.com/hc/en-us/articles/900000394403-Introduction-to-Auto-Margin-Replenishment-USDT-Contract-),">auto-margin replenishment</a> is enabled
  row_comment_position_margin: Position margin
  row_comment_effective_leverage: Effective leverage
  row_comment_liq_price: Liquidation price
  row_comment_bust_price: <a href="https://help.bybit.com/hc/en-us/articles/360039749813-What-is-Bankruptcy-Price-Inverse-Contract-">Bankruptcy price</a>
  row_comment_occ_closing_fee: Position closing fee occupied (your opening fee + expected maximum closing fee)
  row_comment_occ_funding_fee: |
    Pre-occupied funding fee: calculated from position qty and current funding fee
  row_comment_take_profit: Take profit price
  row_comment_stop_loss: Stop loss price
  row_comment_trailing_stop: Trailing stop (the distance from the current price)
  row_comment_position_status: |
    Position status: <code>Normal</code>, <code>Liq</code>, <code>Adl</code>
  row_comment_deleverage_indicator: Deleverage indicator level (1,2,3,4,5)
  row_comment_oc_calc_data: |
    Pre-occupied calculate parameters. <code>blq</code>: total number of the long side unsettled orders; <code>bmp</code>: the lowest price of the long side; <code>slq</code>: total number of the short side unsettled orders; <code>smp</code>: the lowest price of the short side
  row_comment_order_margin: Pre-occupied order margin
  row_comment_wallet_balance: Wallet balance
  row_comment_available_balance: Available balance = wallet balance - used margin
  row_comment_transferable_balance: Transferable balance = available balance - bonus
  row_comment_http_available_balance: |
    <p>In Isolated Margin Mode:</p>
    <pre class="table-code">
      available_balance = wallet_balance - (position_margin + occ_closing_fee + occ_funding_fee + order_margin)
    </pre>
    <p>In Cross Margin Mode:</p>
    <pre class="table-code">
      if unrealised_pnl > 0:
          available_balance = wallet_balance - (position_margin + occ_closing_fee + occ_funding_fee + order_margin)
      if unrealised_pnl < 0:
          available_balance = wallet_balance - (position_margin + occ_closing_fee + occ_funding_fee + order_margin) + unrealised_pnl
    </pre>
  row_comment_realised_pnl: Today's realised pnl
  row_comment_unrealised_pnl: unrealised pnl
  row_comment_cum_realised_pnl: Accumulated realised pnl (all-time total)
  row_comment_cross_seq: Cross sequence (internal value)
  row_comment_position_seq: Position sequence
  row_comment_cum_commission: Accumulated commission
  row_comment_trailing_active: Trailing stop active price
  row_comment_sl_trigger_by: Stop loss trigger price type
  row_comment_tp_trigger_by: Take profit trigger price type
  row_comment_leverage_result: User leverage
  row_comment_BTCUSD_leverage: BTCUSD leverage
  row_comment_EOSUSD_leverage: EOSUSD leverage
  row_comment_ETHUSD_leverage: ETHUSD leverage
  row_comment_XRPUSD_leverage: XRPUSD leverage
  row_comment_exec_fee: Transaction fee
  row_comment_exec_id: Transaction ID
  row_comment_exec_price: Transaction price
  row_comment_exec_qty: Transaction qty
  row_comment_exec_value: Transaction value
  row_comment_exec_timestamp: Transaction time
  row_comment_fee_rate: Maker or taker fee rate
  row_comment_nth_fill: The sequence of the transaction in this cross sequence data package
  row_comment_user_id: User ID
  row_comment_order_id: Order ID
  row_comment_order_price: Order price
  row_comment_order_qty: Order qty
  row_comment_trade_time: Transaction timestamp
  row_comment_trade_tims_sec: Trade timestamp in seconds
  row_comment_trade_time_ms: Trade timestamp in milliseconds
  row_comment_coin_type: Coin type
  row_comment_risk_limit: Risk limit
  row_comment_maintain_margin: Maintain margin
  row_comment_starting_margin_inverse: Starting margin. The same as the "Initial Margin %" shown <a href="https://help.bybit.com/hc/en-us/articles/360039749753-Risk-Limit-Inverse-Contract-">in the risk limit tables</a>
  row_comment_starting_margin_linear: Starting margin. The same as the "Initial Margin %" shown <a href="https://help.bybit.com/hc/en-us/articles/900000170023-Risk-Limit-USDT-Contract-">in the risk limit tables</a>
  row_comment_section: Section
  row_comment_is_lowest_risk: |
    Is lowest risk. <code>0</code>: No; <code>1</code>: Yes
  row_comment_funding_rate: <a href="https://help.bybit.com/hc/en-us/articles/360039261114-What-is-funding-rate-and-predicted-rate-">Funding rate</a>
  row_comment_funding_rate_timestamp: <a href="https://help.bybit.com/hc/en-us/articles/360039261114-What-is-funding-rate-and-predicted-rate-">Funding rate</a> timestamp
  row_comment_funding_side: Your position side at the time of settlement
  row_comment_funding_position_size: Your position size at the time of settlement
  row_comment_funding_exec_fee: Funding fee
  row_comment_funding_exec_timestamp: Funding fee execution timestamp
  row_comment_predicted_funding_rate: <a href="https://help.bybit.com/hc/en-us/articles/360039261114-What-is-funding-rate-and-predicted-rate-">Predicted funding rate</a>
  row_comment_predicted_funding_fee: Predicted funding fee
  row_comment_api_key: API key
  row_comment_type: Key type
  row_comment_position_user_id: User ID
  row_comment_position_inviter_id: Inviter ID (the UID of the account which invited this account to the platform)
  row_comment_position_ips: IP
  row_comment_note: Note
  row_comment_permissions: ApiKey permission
  row_comment_expired_at: Expire time
  row_comment_read_only: ReadOnly
  row_comment_vip_level: VIP Level
  row_comment_mkt_maker_level: Market maker level
  row_comment_affiliate_id: Affiliate Id. <code>0</code> represents that there is no binding relationship.
  row_comment_lcp_date: Date
  row_comment_lcp_self_ratio: Deprecated! Personal effective ratio
  row_comment_lcp_platform_ratio: Deprecated! Platform effective ratio
  row_comment_lcp_score: Liquidity contribution points
  row_comment_created_at: Creation time (when the <a href="#order-status-order_status-stop_order_status"><code>order_status</code></a> was <code>Created</code>)
  row_comment_created_at_position: The account creation time
  row_comment_created_at_in_exchange: Exchange time
  row_comment_updated_at: Update time
  row_comment_updated_id: Update id, is always in sequence. Occasionally, you'll receive "u"=1, which is a snapshot data due to the restart of the service. So please overwrite the locally saved orderbook
  row_comment_dv3_ts: timestamp(ms). The time that system generates the data.
  row_comment_trade_T: timestamp(ms). The time that the order is filled
  row_comment_tickers_cs: Please ignore
  row_comment_kline_timestamp: timestamp(ms). The time of the last matched order in the candle
  row_comment_margin_result: User margin
  row_comment_activeOrderType: Active order type
  row_comment_stopOrderType: Conditional order type
  row_comment_stopOrderStatus: Stop order status
  row_comment_orderStatus: Order status
  row_comment_expected_direction: Expected direction
  row_comment_op_from: Source of the request
  row_comment_remark: Remark
  row_comment_o_req_num: Used to correlate request & response
  row_comment_leaves_qty: Number of unfilled contracts from the order's size
  row_comment_leaves_value: The estimated value corresponding to the number of remaining orders
  row_comment_reject_reason: The reason the order was rejected
  row_comment_clOrdID: A unique order number of type UUID
  row_comment_create_type: Trigger scenario for single action
  row_comment_cancel_type: Trigger scenario for cancel operation
  row_comment_cross_status: The state of initiating a matchmaking request
  row_comment_ext_fields: Extension field


  # 统保下面v3接口字段定义区间开始
  row_comment_settleCoin_v3: Settle Coin. It's invalid for <code>option</code>.
  row_comment_cancelAll_baseCoin_v3: |
    <p>Base Coin</p>
    <p>- Cancel all active orders based on baseCoin when only baseCoin passed without symbol</p>
    <p>- If both symbol & baseCoin passed, baseCoin is ignored. Only active orders with that symbol will be cancelled</p>
  row_comment_cancelAll_orderFilter_v3: Conditional order or active order

  row_comment_triggerPrice_replace_v3: Modify trigger price. Do not pass this field if you don't want modify it
  row_comment_qty_replace_v3: Order quantity after modification. For orders that are not completely filled, only the remaining orders not filled can be modified. If this field is not modified, please do not pass this parameter.
  row_comment_price_replace_v3: Order price after modification. If this field is not modified, please do not pass this parameter.
  row_comment_takeProfit_replace_v3: Take-profit price after modification. If this field is not modified, please do not pass this parameter.
  row_comment_stopLoss_replace_v3: Stop-loss price after modification. If this field is not modified, please do not pass this parameter.


  row_comment_category_v3: |
    Type of derivatives product: linear or option.
  row_comment_symbol_v3: Name of Contract
  row_comment_realisedPnl_v3: The realised PNL of this settlement
  row_comment_positionIdx_v3: <p>Position idx, used to identify positions in different position modes. Required if you are under One-Way Mode:</p>
    <p>0-One-Way Mode</p>
    <p>1-Buy side of both side mode</p>
    <p>2-Sell side of both side mode</p>
  row_comment_positionIdx_um: Position mode. unified margin account is only available in One-Way mode, which is <code>0</code>
  row_comment_side_v3: Directions<span>:</span> Buy, Sell
  row_comment_qty_v3: Order quantity
  row_comment_orderType_v3: Order price type
  row_comment_triggerSide: |
    Used for the current conditional order to be triggered when the price increases or declines to stop_px. Mainly used to mark the expected direction of the current conditional order: 0 - triggered when < stop_px; 1 - triggered when > stop_px.
  row_comment_triggerSide_v3: |
    Used for the current conditional order to be triggered when the price increases or declines to triggerPrice. Mainly used to mark the expected direction of the current conditional order: 0 - triggered when < triggerPrice; 1 - triggered when > triggerPrice.
  row_comment_triggerPrice: Trigger price. If you're expecting the price to rise to trigger your conditional order, make sure triggerPrice > max(market price, basePrice) else, triggerPrice < min(market price, basePrice)
  row_comment_triggerBy_v3: |
    Trigger price type: Market price/Mark price
  row_comment_iv_v3: Implied volatility, for <b>options</b> only; parameters are passed according to the real value; for example, for 10%, 0.1 is passed
  row_comment_timeInForce_v3: Time in force
  row_comment_orderLinkId_v3: |
    User customized order ID. A max of 36 characters. A user cannot reuse an orderLinkId. Combinations of numbers, letters (upper and lower cases), dashes, and underscores are supported. Not required for futures, but required for options.
  row_comment_orderLinkId_um: |
    <p>User customized order ID. A max of 36 characters. A user cannot reuse an orderLinkId, with some exceptions. Combinations of numbers, letters (upper and lower cases), dashes, and underscores are supported. Not required for futures, but <b>required for options</b>.</p>
    <p>1. The same orderLinkId can be used for both USDC PERP and USDT PERP.</p>
    <p>2. An orderLinkId can be reused once the original order is either <code>Filled</code> or <code>Cancelled</code.</p>
  row_comment_takeProfit_v3: Take-profit price, only valid when positions are opened.
  row_comment_stopLoss_v3: Stop-loss price, only valid when positions are opened.
  account_row_comment_tp_trigger_by_v3: Type of take-profit activation price, LastPrice by default.
  account_row_comment_sl_trigger_by_v3: Type of stop-loss activation price, LastPrice by default.
  row_comment_reduceOnly_v3: Reduce-Only
  row_comment_closeOnTrigger_v3: |
    Close on trigger. To place a closing order, please set it as true, otherwise, the order might not be placed due to lack of margins
  row_comment_mmp_v3: Market maker protection, "true" means this order is a market maker protection order.
  row_comment_orderLinkId_response_v3: Strategy linked order ID
  row_comment_orderFilter_v3: |
    Conditional order or active order
  row_comment_direction_v3: |
   prev<span>:</span> prev, next<span>:</span> next.
  row_comment_limit_v3: |
    Data quantity per page<span>:</span> Max data value per page is 50, and default value at 20.
  row_comment_limit_100_50: |
    Data quantity per page<span>:</span> Max data value per page is 100, and default value at 50.
  row_comment_cursor_v3: |
    API pass-through. accountType + category + cursor +. If inconsistent, the following should be returned<span>:</span> The account type does not match the service inquiry.
  row_comment_buyLeverage_v3: 0 < leverage < leverage of the corresponding risk limit
  row_comment_sellLeverage_v3: 0 < leverage < leverage of the corresponding risk limit
  row_comment_tpSlMode_v3: TP/SL mode
  row_comment_riskId_v3: Risk limit ID
  row_comment_tpSize_v3: Quantity of take-profit orders with the TP/SL mode on selected positions.
  account_row_comment_slSize_v3: Quantity of stop-loss orders with the TP/SL mode on selected positions.
  account_row_comment_activePrice_v3: Trailing stop trigger price. Trailing stop will only be triggered when this price is touched (trailing stop will be immediately triggered by default).
  account_row_comment_slTriggerBy_v3: Type of stop-loss activation price, LastPrice by default.
  account_row_comment_tpTriggerBy_v3: Type of take-profit activation price, LastPrice by default.
  account_row_comment_trailingStop_v3: ≥ 0, if = 0, cancel trailing stop (TS)
  account_row_comment_stopLoss_v3: ≥ 0, if = 0, cancel stop-loss (SL)
  account_row_comment_takeProfit_v3: ≥ 0, if = 0, cancel take-profit (TP)
  row_comment_execType_v3: Exec type (exec_type) Trade AdlTrade Funding BustTrade. Valid for USDT Perps, Inverse Perps, and Inverse Futures only.
  row_comment_startTime_v3: Starting timestamp (unit<span>:</span> ms)
  row_comment_endTime_v3: Ending timestamp (unit<span>:</span> ms)

  row_comment_createAt_response_v3: Time of Creation

  row_comment_code_response_v3: Error code. 0 means success.
  row_comment_msg_response_v3: Error description.


  # 统保查询字段定义
  row_comment_query_effectiveLeverage_v3: Effective leverage
  row_comment_query_positionMargin_v3: Position margin
  row_comment_query_positionSeq_v3: Version number (changes in position)

  row_comment_query_orderId_v3: Order ID
  row_comment_query_side_v3: Direction
  row_comment_query_orderType_v3: Order type
  row_comment_query_stopOrderType_v3: Conditional order type
  row_comment_query_price_v3: Order price
  row_comment_query_qty_v3: Order quantity
  row_comment_query_iv_v3: Implied volatility
  row_comment_query_orderIM_v3: Initial margin of an order. For portfolio margin mode, it returns ""
  row_comment_query_timeInForce_v3: Time in force
  row_comment_query_orderStatus_v3: Order status
  row_comment_query_triggerPrice_v3: |
    If the stop_order_type is TrailingProfit, it is the activation price, otherwise, it is the trigger price.
  row_comment_query_orderLinkId_v3: Institutional customized order ID
  row_comment_query_createdTime_v3: Time of Creation
  row_comment_query_updatedTime_v3: Time of Update
  row_comment_query_takeProfit_v3: Take-profit price
  row_comment_query_stopLoss_v3: Stop-loss price
  row_comment_query_tpTriggerBy_v3: Type of take-profit activation price, LastPrice by default.
  row_comment_query_slTriggerBy_v3: Type of stop-loss activation price, LastPrice by default.
  row_comment_query_basePrice_v3: Market price when the order is placed
  row_comment_query_triggerBy_v3: Type of trigger price, latest market price by default.
  row_comment_query_reduceOnly_v3: Close position? True – close position, false – open position
  row_comment_query_closeOnTrigger_v3: Closed order? True – close order   false – open order
  row_comment_query_nextPageCursor_v3: API pass-through
  row_comment_orderStatus_v3: |
    Query list of orders in designated states. If this parameter is not passed, the orders in all states shall be enquired by default. This parameter supports multi-state inquiry. States should be separated with English commas.
  row_comment_query_leavesQty_v3: Remaining order quantity
  row_comment_query_leavesValue_v3: Estimated value of the corresponding remaining maker order quantity
  row_comment_query_cumExecQty_v3: Accumulative trading volume
  row_comment_query_cumExecValue_v3: Accumulative trading value
  row_comment_query_cumExecFee_v3: Accumulative trading fees
  row_comment_query_rejectReason_v3: Reason order is rejected
  row_comment_query_positionIdx_v3: |
    The position idx is used to mark the position with different position modes: 0 - one-way mode; 1 - hedged position buy; 2 - hedged position sell.
  row_comment_query_isIsolated_v3: |
    Position mode. False: Cross margin; True: Isolated margin. Under the unified margin mode, return as false.
  row_comment_query_riskId_v3: Risk limit ID
  row_comment_query_size_v3: Position size
  row_comment_query_entryPrice_v3: Average entry value
  row_comment_query_sessionAvgPrice_v3: Settlement price, for USDC only
  row_comment_query_leverage_v3: |
    Under the  isolated margin mode, the value should be the leverage set by the user. Under the cross margin mode, the value should be the maximum leverage under the current risk limit. For contracts only, and not for options.
  row_comment_query_markPrice_v3: Mark price
  row_comment_query_sessionUPL_v3: Session UPL, for USDC only
  row_comment_query_sessionRPL_v3: Session RPL, for USDC only
  row_comment_query_positionIM_v3: Position Initial margin. Empty String under Portfolio Margin mode
  row_comment_query_positionMM_v3: Position Maintenance margin. Empty String under Portfolio Margin mode
  row_comment_query_trailingStop_v3: Trailing stop
  row_comment_query_positionStatus_v3: Position status<span>:</span> Normal, Liquidation, and Deleveraging.
  row_comment_query_positionValue_v3: Position value
  row_comment_query_unrealisedPnl_v3: Unrealized P&L
  row_comment_query_cumRealisedPnl_v3: Accumulatively realized P&L
  row_comment_query_tpslMode_v3: TP/SL mode
  row_comment_query_set_leverage_v3: User's leverage
  row_comment_query_execFee_v3: Trading fee
  row_comment_query_execId_v3: Trading ID
  row_comment_query_execPrice_v3: Executed price
  row_comment_query_execQty_v3: Executed quantity
  row_comment_query_execType_v3: Execution type
  row_comment_query_execType_wss_contract_v3: Execution type. <code>Trade</code>, <code>Funding</code>, <code>AdlTrade</code>, <code>BustTrade</code>. <b>note：there is no feed for <code>Funding</code>
  row_comment_query_execType_wss_unified_v3: Execution type. <code>TRADE</code>, <code>FUNDING</code>, <code>ADLTRADE</code>, <code>BUSTTRADE</code>
  row_comment_query_execValue_v3: Trading value
  row_comment_query_feeRate_v3: Fee rate
  row_comment_query_lastLiquidityInd_v3: Liquidity type enum, only valid when the exec_type field type is Trade, AdlTrade, or BustTrade.
  row_comment_query_execTime_v3: |
    Time of trade (unit: ms)
  row_comment_expDate_v3: Date of Expiry<span>:</span> dd<span>/</span>mm<span>/</span>yy. All by default, parameter format<span>:</span> 25MAR22
  row_comment_closedSize_v3: The corresponding closing size of the closing order

  row_comment_deliveryTime_v3: Time and date
  row_comment_query_position_v3: The executed size of the settlement history
  row_comment_query_deliveryPrice_v3: Settlement price and margin<span>:</span> exec_price, asset tradePrice
  row_comment_query_strike_v3: Exercise price
  row_comment_query_fee_v3: Trading fee<span>:</span> The fee to collect the asset. A positive number means that the user pays a trading fee of xx, while a negative number denotes that the user earns the fee.
  row_comment_query_deliveryRpl_v3: P&L has been realized for the settlement
  row_comment_coin_v3: Currency alias. If the parameter coin is not passed, all wallet balance will be returned. Multiple parameters can be passed, which should be separated using commas, such as USDC, USDT.


  row_comment_query_accountIMRate_v3: Initial margin rate<span>:</span> Account Total Initial Margin Base Coin / Account Margin Balance Base Coin
  row_comment_query_accountMMRate_v3: Maintenance margin rate<span>:</span> Account Total Maintenance Margin Base Coin / Account Margin Balance Base Coin
  row_comment_query_totalEquity_v3: Equity of the account converted into USD<span>:</span> Account Margin Balance Base Coin + Account Option Value Base Coin
  row_comment_query_totalWalletBalance_v3: Wallet balance of the account converted into USD<span>:</span> ∑ Asset Wallet Balance Base Coin
  row_comment_query_totalMarginBalance_v3: Margin balance of the account converted into USD<span>:</span> Account Wallet Balance Base Coin + Account Perp UPL Base Coin
  row_comment_query_totalAvailableBalance_v3: Available balance of the account converted into USD<span>:</span> RM<span>:</span> Account Margin Balance Base Coin - Account Initial Margin Base Coin
  row_comment_query_totalPerpUPL_v3: Perpetual floating P&L of the account converted into USD<span>:</span> ∑ Asset Perp UPL Base Coin
  row_comment_query_totalInitialMargin_v3: Total initial margin of the account converted into USD<span>:</span> ∑ Asset Total Initial Margin Base Coin
  row_comment_query_totalMaintenanceMargin_v3: Total maintenance margin of the account converted into USD<span>:</span> ∑ Asset Total Maintenance Margin Base Coin

  row_comment_query_coin_coin_v3: Name of coin in wallet, such as BTC, ETH, USDT, and USDC.
  row_comment_query_coin_equity_v3: User assets
  row_comment_query_coin_usdValue_v3: Value converted into USD
  row_comment_query_coin_walletBalance_v3: Wallet balance
  row_comment_query_coin_marginBalance_v3: MB from other assets + the actual MB balance from the current assets

  row_comment_query_coin_availableBalance_v3: AB from other assets + the actual AB balance from the current assets (cannot be negative)
  row_comment_query_coin_marginBalanceWithoutConvert_v3: Margin balance
  row_comment_query_coin_availableBalanceWithoutConvert_v3: Available balance, Margin Balance - Total Initial Margin
  row_comment_query_coin_borrowSize_v3: Lending amount used. For USDC and USDT only. For BTC and ETH, return 0.
  row_comment_query_coin_availableToBorrow_v3: Lending amount available. For USDC and USDT only. For BTC and ETH, return 0.

  row_comment_query_coin_accruedInterest_v3: Accrued interest of an asset
  row_comment_query_coin_totalOrderIM_v3: Order margin pre-occupied. For portfolio margin mode, it returns ""
  row_comment_query_coin_totalPositionIM_v3: ∑ Initial margin of all positions + pre-occupied trading fee for closing positions. For portfolio margin mode, it returns ""
  row_comment_query_coin_totalPositionMM_v3: ∑ Maintenance margin of all positions. For portfolio margin mode, it returns ""
  row_comment_query_coin_unrealisedPnl_v3: Unrealized P&L
  row_comment_query_coin_cumRealisedPnl_v3: Accumulatively realized P&L

  row_comment_query_result_v3: User account upgrade status
  row_comment_query_msg_v3: Error information returned

  row_comment_query_ThereisUSDCbeingtransferred_v3_code: There is USDC being transferred
  row_comment_query_ThereisUSDCbeingtransferred_v3: update account failed. there are orders in the process of transferring in USDC Account. please wait until the transfer is completed

  row_comment_query_ThereisUSDTbeingtransferred_v3_code: There is USDT being transferred
  row_comment_query_ThereisUSDTbeingtransferred_v3: update account failed. there are orders in the process of transferring in USDT Account. please wait until the transfer is completed

  row_comment_query_ThereareUSDCperpetualpositionholdings_v3_code: There are USDC perpetual position holdings
  row_comment_query_ThereareUSDCperpetualpositionholdings_v3: update account failed. Please close the usdc perpetual positions in USDC Account.

  row_comment_query_ThereareUSDCoptionspositionholdings_v3_code: There are USDC options position holdings
  row_comment_query_ThereareUSDCoptionspositionholdings_v3: update account failed. Please close the USDC Options positions in USDC Account.

  row_comment_query_ThereareUSDTperpetualpositionholdings_v3_code: There are USDT perpetual position holdings
  row_comment_query_ThereareUSDTperpetualpositionholdings_v3: update account failed. Please close the usdt perpetual positions in USDC Account.

  row_comment_query_ThereareUSDCperpetualorders_v3_code: There are USDC perpetual orders
  row_comment_query_ThereareUSDCperpetualorders_v3: update account failed. Please cancel the usdc perpetual open orders in USDC Account.

  row_comment_query_ThereareUSDCoptionorders_v3_code: There are USDC Options orders
  row_comment_query_ThereareUSDCoptionorders_v3: update account failed. Please cancel the USDC Options open orders in USDC Account.

  row_comment_query_ThereareUSDTperpetualorders_v3_code: There are USDT perpetual orders
  row_comment_query_ThereareUSDTperpetualorders_v3: update account failed. Please cancel the usdt perpetual open orders in USDC Account.

  row_comment_currency_v3: Only for UDDC, USDT. If not passed, USDT&USDC interests are returned. You could pass multiple currency separated by comma, e.a USDC,USDT.
  row_comment_baseCoin_v3: For example<span>:</span> The base coin of USDC is BTC, and the base coin of USDT is the enum of the current trading coin. For example<span>:</span> The base coin of BTCUSDT is BTC. If both do not match, it shall be returned as null.
  row_comment_type_v3: All trading history (except transfer) of the category should be returned by default. Please note that to inquire about the transfer-in and transfer-out history, pass type=TRANSFER_IN and type=TRANSFER_OUT, otherwise, the transfer history cannot be accessed.

  row_comment_query_transType_v3: <a href="#transaction-log-type-type">type</a>
  row_comment_query_currency_v3: USDC, USDT, BTC, and ETH
  row_comment_query_transactionTime_v3: Timestamp (unit<span>:</span> ms)
  row_comment_query_type_v3: Type (fetch the interest enum)
  row_comment_query_symbol_v3: Name of Contract
  row_comment_query_tradePrice_v3: Trading price
  row_comment_query_funding_v3: Funding
  row_comment_query_cashFlow_v3: Cash Flow
  row_comment_query_change_v3: Change
  row_comment_query_cashBalance_v3: Balance (current coin)
  row_comment_query_tradeId_v3: Trade ID

  row_comment_transfer_id_v3: UUID, globally unique
  row_comment_amount_v3: Exchanged amount
  row_comment_from_account_type_v3: Account type<span>:</span> Futures contract account; spot account; investment earn account; option account; new<span>:</span> unified margin account.
  row_comment_to_account_type_v3: Account type<span>:</span> Futures contract account; spot account; investment earn account; option account; new<span>:</span> unified margin account
  row_comment_query_transfer_id_v3 : UUID, globally unique

  comments_v3: Comment

  row_comment_fromCoin_v3: From coin
  row_comment_toCoin_v3: To coin
  row_comment_query_totalCount_v3: Total records returned
  row_comment_query_fromCoin_v3: From coin
  row_comment_query_fromAmount_v3: From amount
  row_comment_query_toCoin_v3: To coin
  row_comment_query_toAmount_v3: To amount
  row_comment_query_exchangeRate_v3: Exchange rate
  row_comment_query_createdAt_v3: Create time
  row_comment_query_exchangeTxId_v3: Exchange transaction id

  row_comment_query_borrowCost_v3: Interests
  row_comment_query_InterestBearingBorrowSize_v3: Interest bearing loan size
  row_comment_query_costExemption_v3: Waiver of interest-bearing costs

  row_comment_query_hourlyBorrowRate_v3: Hourly interest rate
  row_comment_query_maxBorrowingAmount_v3: Max loan amount
  row_comment_query_freeBorrowingAmount_v3: The free interest of loan amount

  # 统保下面v3接口字段定义区间结束


  row_comment_from: |
    From ID. Default: return latest data
  row_comment_limit: Limit for data size per page, max size is 50. Default as showing 20 pieces of data per page
  row_comment_cursor: Page turning mark. Use return <code>cursor</code>. Sign using origin data, in request please use urlencode
  row_comment_resp_cursor: Page turning mark
  row_comment_limit_liq: Limit for data size, max size is 1000. Default size is 500
  row_comment_orderType: Active order type
  row_comment_qty: Order quantity in USD
  row_comment_price: Order price. <b>Required</b> if you make limit price order
  row_comment_stopOrderPrice: Execution price for conditional order. <b>Required</b> if you make limit price order
  row_comment_basePrice: It will be used to compare with the value of <code>stop_px</code>, to decide whether your conditional order will be triggered by crossing trigger price from upper side or lower side. Mainly used to identify the expected direction of the current conditional order.
  row_comment_stopPx: Trigger price. If you're expecting the price to rise to trigger your conditional order, make sure stop_px > max(market price, base_price) else, stop_px < min(market price, base_price)
  row_comment_timeInForce: <a href="https://www.bybit.com/en-US/help-center/bybitHC_Article?language=en_US&id=000001044">Time in force</a>
  row_comment_triggerBy: Trigger price type. Default <code>LastPrice</code>
  row_comment_linear_triggerBy: Trigger price type
  row_comment_tp_size: Take profit quantity (when in <a href="#t-switchmode">partial mode</a>)
  row_comment_sl_size: Stop loss quantity (when in <a href="#t-switchmode">partial mode</a>)
  row_comment_takeProfit: Take profit price, only take effect upon opening the position
  row_comment_stopLoss: Stop loss price, only take effect upon opening the position
  row_comment_trailingStop: Trailing stop
  row_comment_reduceOnly: <a href="https://help.bybit.com/hc/en-us/articles/360039260574-What-is-a-reduce-only-order-"> What is a reduce-only order?</a> True means your position can only reduce in size if this order is triggered
  row_comment_closeOnTrigger: <a href="https://help.bybit.com/hc/en-us/articles/360039260534-What-is-a-close-on-trigger-Order-">  What is a close on trigger order?</a> For a closing order. It can only reduce your position, not increase it. If the account has insufficient available balance when the closing order is triggered, then other active orders of similar contracts will be cancelled or reduced. It can be used to ensure your stop loss reduces your position regardless of current available margin.
  row_comment_orderLinkId: Unique user-set order ID. Maximum length of 36 characters
  row_comment_page: Page. By default, gets first page of data.
  row_comment_page_max50: Page. By default, gets first page of data. Maximum of 50 pages
  row_comment_linear_page: Page. By default, gets first page of data. If you want to get second page of data, you need to take the page_token returned by the first page as the input parameter.
  row_comment_order: Sort orders by creation date. Defaults to <code>asc</code>
  row_comment_stopOrderId: Conditional order ID. Once triggered, the conditional order creates an active order with the same ID (<code>order_id</code>)
  row_comment_pRQty: New order quantity. Do not pass this field if you don't want modify it
  row_comment_pRPrice: New order price. Do not pass this field if you don't want modify it
  row_comemnt_pRTriggerPrice: New conditional order's trigger price or TP/SL order price, also known as stop_px. Do not pass this field if you don't want modify it
  row_comemnt_replace_take_profit: New take_profit price. Do not pass this field if you don't want modify it
  row_comemnt_replace_stop_loss: New stop_loss price. Do not pass this field if you don't want modify it
  row_comment_leverage_old: Must be greater than 0 and less than the <a href="https://help.bybit.com/hc/en-us/articles/360039749753-What-is-Risk-Limit-What-effect-does-the-Risk-Limit-have-on-Margin-Inverse-Contract-">risk limit leverage</a>. If you need to switch to cross margin please see the <a href="#t-marginswitch">Cross/Isolated Margin Switch</a> endpoint
  row_comment_leverage_only: Use this parameter to set leverage while in cross margin mode.
    <br>If this field is set to <code>false</code>, when <code>leverage</code> is equal to <code>0</code> the position will use cross margin; when <code>leverage</code> is greater than <code>0</code> the position will use isolated margin.
    <br>If this field is set to <code>true</code>, you can set leverage in cross margin with <code>leverage</code>. <code>leverage</code> must be greater than <code>0</code>.
    <br>Use the <a href="#t-marginswitch">Cross/Isolated Margin Switch</a> endpoint to switch cross/isolated without modifying the cross level of leverage.
  row_comment_startDate: Start point for result
  row_comment_endDate: End point for result
  row_comment_currency: Currency type
  row_comment_coin_false: <code>currency</code> alias. Returns all wallet balances if not passed
  row_comment_coin: <code>currency</code> alias
  row_comment_walletFundType: Wallet fund type
  row_comment_withdrawStatus: Withdraw status
  row_comment_startTime: Start timestamp point for result, in seconds
  row_comment_endTime: End timestamp point for result, in seconds
  row_comment_startTime_ms: Start timestamp point for result, in milliseconds
  row_comment_endTime_ms: End timestamp point for result, in milliseconds
  row_comment_startTime_ms_week: Start timestamp point for result, in milliseconds. Timestamp must be within seven days of the current date. For earlier records, please contact customer support
  row_comment_endTime_ms_week: End timestamp point for result, in milliseconds. Timestamp must be within seven days of the current date. For earlier records, please contact customer support
  row_comment_startTime_ms_2years: Start timestamp point for result, in milliseconds. Timestamp must be within two years of the current date. For earlier records, please contact customer support
  row_comment_endTime_ms_2years: End timestamp point for result, in milliseconds. Timestamp must be within two years of the current date. For earlier records, please contact customer support
  row_comment_symbol_with_coin: Symbol. <b>Required</b> if not passing <code>coin</code>
  row_comment_tick_direction: Direction of price change
  row_comment_coin_with_symbol: <code>currency</code> alias. <b>Required</b> if not passing <code>symbol</code>
  row_comment_riskId: <a href="#t-getrisklimit">Risk ID</a>
  row_comment_closed_size: The corresponding closing size of the closing order
  row_comment_rate_limit: Limit
  row_comment_path: Path
  row_comment_consume: Consume
  row_comment_interval: Data refresh interval. Enum <span>:<span> 1 3 5 15 30 60 120 240 360 720 "D" "M" "W"
  row_comment_from_timestamp: From timestamp in seconds
  row_comment_limit_200: Limit for data size per page, max size is 200. Default as showing 200 pieces of data per page
  row_comment_limit_100: Limit for data size per page, max size is 100. Default as showing 50 pieces of data per page
  row_comment_limit_50_200: Limit for data size per page, max size is 200. Default as showing 50 pieces of data per page
  row_comment_limit_50_500: Limit for data size per page, max size is 500. Default as showing 50 pieces of data per page
  row_comment_limit_100_500: Limit for data size per page, max size is 500. Default as showing 100 pieces of data per page
  row_comment_period: Data recording period. <code>5min</code>, <code>15min</code>, <code>30min</code>, <code>1h</code>, <code>4h</code>, <code>1d</code>
  row_comment_last_exec_time: Last execution time
  row_comment_last_exec_price: Last execution price
  row_comment_orig_order_type: Original special order type
  row_comment_prior_x_req_price: Expected match price
  row_comment_xreq_type:  Request type
  row_comment_is_maker: Is maker
  row_comment_order_type: Order type
  row_comment_exec_type: Exec type
  row_comment_open: Starting price
  row_comment_high: Maximum price
  row_comment_low: Minimum price
  row_comment_close: Closing price
  row_comment_timestamp: Commission time
  row_comment_resp_price: Order price
  row_comment_resp_size: Symbol contracts
  row_comment_resp_open_time: Starting time
  row_comment_resp_volume: Trading volume
  row_comment_resp_turnover: <a href="#t-faq_turnover">Turnover</a>
  row_comment_resp_bid: buyer
  row_comment_resp_ask: seller
  row_comment_resp_bid_price: Purchase price of the first order
  row_comment_resp_bid_size: Purchase size of the first order
  row_comment_resp_ask_price: Selling price of the first order
  row_comment_resp_ask_size: Selling size of the first order
  row_comment_resp_last_price: Latest transaction price
  row_comment_resp_last_price_e4: (Deprecated) Latest transaction price 10^4
  row_comment_resp_prev_price_24h: Price of 24 hours ago
  row_comment_resp_prev_price_24h_e4: (Deprecated) Price of 24 hours ago * 10^4
  row_comment_resp_price_24h_pcnt: Percentage change of market price relative to 24h
  row_comment_resp_price_24h_pcnt_e4: Percentage change of market price relative to 24h * 10^4
  row_comment_resp_high_price_24h: The highest price in the last 24 hours
  row_comment_resp_high_price_24h_e4: (Deprecated) The highest price in the last 24 hours * 10^4
  row_comment_resp_low_price_24h: Lowest price in the last 24 hours
  row_comment_resp_low_price_24h_e4: (Deprecated) Lowest price in the last 24 hours * 10^4
  row_comment_resp_prev_price_1h: Hourly market price an hour ago
  row_comment_resp_prev_price_1h_e4: (Deprecated) Hourly market price an hour ago * 10^4
  row_comment_resp_price_1h_pcnt: Percentage change of market price relative to 1 hour ago
  row_comment_resp_price_1h_pcnt_e6: Percentage change of market price relative to 1 hour ago * 10^6
  row_comment_resp_price_24h_pcnt_e6: Percentage change of market price relative to 24 hour ago * 10^6
  row_comment_resp_mark_price: Mark price
  row_comment_resp_mark_price_e4: (Deprecated) Mark price * 10^4
  row_comment_resp_index_price: Index_price
  row_comment_resp_index_price_e4: (Deprecated) Index_price * 10^4
  row_comment_resp_open_interest: Open interest
  row_comment_resp_open_interest_e8: Open interest * 10^8
  row_comment_resp_open_value: Open position value
  row_comment_resp_open_value_e8: Open position value * 10^8
  row_comment_resp_total_turnover: Total <a href="#t-faq_turnover">turnover</a>
  row_comment_resp_total_turnover_e8: Total <a href="#t-faq_turnover">turnover</a> * 10^8
  row_comment_resp_turnover_24h: <a href="#t-faq_turnover">Turnover</a> for 24h
  row_comment_resp_turnover_24h_e8: <a href="#t-faq_turnover">Turnover</a> for 24h * 10^8
  row_comment_resp_total_volume: Total volume
  row_comment_resp_total_volume_e8: Total volume * 10^8
  row_comment_resp_volume_24h: Trading volume in the last 24 hours
  row_comment_resp_volume_24h_e8: Trading volume in the last 24 hours * 10^8
  row_comment_resp_funding_rate: <a href="https://help.bybit.com/hc/en-us/articles/360039261114-What-is-funding-rate-and-predicted-rate-">Funding rate</a>
  row_comment_resp_funding_rate_e6: <a href="https://help.bybit.com/hc/en-us/articles/360039261114-What-is-funding-rate-and-predicted-rate-">Funding rate</a> * 10^6
  row_comment_resp_predicted_funding_rate: <a href="https://help.bybit.com/hc/en-us/articles/360039261114-What-is-funding-rate-and-predicted-rate-">Predicted funding rate</a>
#  row_comment_resp_funding_rate_e6: <a href="https://help.bybit.com/hc/en-us/articles/360039261114-What-is-funding-rate-and-predicted-rate-">Funding rate</a> * 10^6
  row_comment_resp_predicted_funding_rate_e6: <a href="https://help.bybit.com/hc/en-us/articles/360039261114-What-is-funding-rate-and-predicted-rate-">Predicted funding rate</a> * 10^6
  row_comment_resp_next_funding_time: Next settlement time of capital cost
  row_comment_resp_countdown_hour: Countdown of settlement capital cost
  row_comment_resp_funding_rate_interval: funding rate time interval, unit hour
  row_comment_bid1_price_e4: (Deprecated) Best bid price * 10^4
  row_comment_ask1_price_e4: (Deprecated) Best ask price * 10^4
  row_comment_bid1_price: Best bid price
  row_comment_ask1_price: Best ask price
  row_comment_resp_delivery_fee_rate: Delivery fee rate of Futures contract
  row_comment_resp_predicted_delivery_price: Predicted delivery price of Futures contract
  row_comment_resp_delivery_time: Delivery time of Futures contract
  row_comment_resp_update_time: Update time
  row_comment_confirm: Is confirm
  row_comment_resp_trade_time_ms: Transaction time (ms)
  row_comment_resp_trade_id: Trade ID
  row_comment_time_stamp: Timestamp
  row_comment_open_interest: Number of contracts in open interest
  row_comment_value: Value of the order
  row_comment_limit_500_1000: Limit for data size per page, max size is 1000. Default as showing 500 pieces of data per page
  row_comment_buy_ratio: Long position ratio
  row_comment_sell_ratio: Short position ratio
  row_comment_tp_sl_mode: TrailingProfit or StopLoss mode <code>Full</code> or <code>Partial</code>
  row_comment_mode: Position mode,  <code>MergedSingle</code> or <code>BothSide</code>
  row_comment_taker_fee_rate: Taker fee rate
  row_comment_maker_fee_rate: Maker fee rate
  row_comment_last_liquidity_ind: Only valid while <code>exec_type</code> is <code>Trade</code>, <code>AdlTrade</code>, <code>BustTrade</code>
  row_comment_tp_order_num: The qty of take profit orders
  row_comment_sl_order_num: The qty of stop loss orders
  row_comment_tp_free_size_x: The available size to set take profit
  row_comment_sl_free_size_x: The available size to set stop loss
  row_comment_timestamp_e6: Data sent timestamp in seconds * 10^6
  row_comment_symbol_name: Symbol name alias
  row_comment_symbol_year: The year of symbol
  row_comment_contract_type: Contract type
  row_comment_quote_symbol: Quote symbol
  row_comment_isUpBorrowable: Support float profit open position or not
  row_comment_import_time_e9: Symbol import timestamp * 10^9
  row_comment_start_trading_time_e9: Enable trading timestamp for symbol * 10^9
  row_comment_time_to_settle: Rest time until settled in seconds
  row_comment_settle_time_e9: Delivery timestamp * 10^9
  row_comment_settle_fee_rate_e8: Delivery fee rate * 10^8
  row_comment_contract_status: <a href="#contract-status-status">contract_status</a>
  row_comment_resp_contract_status: Contract status
  row_comment_system_subsidy_e8: Quantity of subsidy from trading platform in BTC * 10^8
  row_comment_fair_basis_e8: Fair basis * 10^8
  row_comment_fair_basis_rate_e8: Fair basis rate * 10^8
  row_comment_basis_in_year_e8: Basis in year * 10^8
  row_comment_basis_in_year: Basis in year
  row_comment_expect_price_e4: Expected settlement price * 10^4
  row_comment_expect_price: Expected settlement price


  row_response_comment_price: Order price
  row_response_comment_qty: Order quantity in USD
  row_response_comment_basePrice: Market price at placing order
  row_response_comment_triggerBy: Trigger price type
  row_response_comment_id: Latest data ID
  row_response_comment_execprice: Execution price
  row_response_comment_time: UTC time
  row_response_comment_timestamp: timestamp,ms
  row_response_comment_blocktrade: is or not block trade
  row_response_comment_execqty: Order quantity in USD
  row_response_comment_liq_execqty: Order quantity
  row_response_comment_name: Symbol name
  row_response_comment_alias: Symbol alias
  row_response_comment_status: Symbol status
  row_response_close_on_trigger: Is close on trigger order
  row_response_comment_base_currency: Base currency
  row_response_comment_quote_currency: Quote currency
  row_response_comment_price_scale: Price scale (the number of decimal places to which a price can be submitted, although the final price may be rounded to conform to the <code>tick_size</code>)
  row_response_comment_taker_fee: Taker fee
  row_response_comment_maker_fee: Maker fee
  row_response_comment_leverage_filter: Leverage filter
  row_response_comment_min_leverage: Min leverage
  row_response_comment_public_max_leverage: Max leverage (indicates the max leverage, assuming the lowest risk limit setting)
  row_response_comment_leverage_step: Leverage step
  row_response_comment_price_filter: Price filter
  row_response_comment_min_price: Min price
  row_response_comment_max_price: Max price
  row_response_comment_tick_size: Tick size
  row_response_comment_lot_size_filter: Trading quantity info
  row_response_comment_max_trading_qty: Max trading quantity
  row_response_comment_post_only_max_trading_qty: Max trading quantity of <code>PostOnly</code> orders
  row_response_comment_min_trading_qty: Min trading quantity
  row_response_comment_qty_step: Qty step
  row_response_funding_interval: Funding fee interval
  row_response_comment_nill_time: Millisecond timestamp
  row_response_comment_trade_id: Trade ID
  row_response_comment_given_cash: Experience gold
  row_response_comment_service_cash: Service cash is used for user's service charge
  row_comment_equity: User equity (wallet_balance + unrealised_pnl)
  row_comment_used_margin: Used margin
  row_comment_position_tick_direction: Direction of price change
  row_comment_from_coin: Exchange from coin
  row_comment_to_coin: Exchange to coin
  row_comment_to_amount: Exchange to amount
  row_comment_from_fee: Exchange fee in `from_coin` unit
  row_comment_from_amount: Exchange from amount
  row_comment_exchange_rate: Exchange exchange rate
  row_comment_fund_type: Fund type
  row_comment_fund_amount: Fund amount
  row_comment_wallet_id: Wallet ID
  row_comment_tx_id: Transaction hash ID
  row_comment_address: Address
  row_comment_submited_at: Submit time
  row_response_liq_record_side: Liquidated position's side
  row_comment_max_leverage: Max leverage
  request_disable: This endpoint is no longer recommended!
  usdcOrderAllSize: Total size of order
  usdcOrderFilledSize: Filled size of order
  usdcOrderTime: Order time
  usdcExecType: Execution type
  usdcVersion: version
  usdcUserId: uid
  usdcPlayMode: Please ignore
  usdcPlayType: |
    Place order type. enums: <code>price</code> <code>iv</code>



  row_parameter_tp_trigger_by: <a href="#trigger-price-type-trigger_by">tp_trigger_by</a>
  row_parameter_sl_trigger_by: <a href="#trigger-price-type-trigger_by">sl_trigger_by</a>
  row_parameter_symbol: <a href="#symbol-symbol">symbol</a>
  row_parameter_side: <a href="#side-side">side</a>
  row_parameter_tp_sl_mode:  <a href="#tp-sl-mode-tp_sl_mode">tp_sl_mode</a>
  row_parameter_order_type: <a href="#order-type-order_type">order_type</a>
  row_parameter_copytrading_order_type: <a href="#order-type-order_type">orderType</a>
  row_parameter_quantity: <a href="#quantity-qty">qty</a>
  row_parameter_price: <a href="#price-price">price</a>
  row_parameter_time_in_force: <a href="#time-in-force-time_in_force">time_in_force</a>
  row_parameter_order_status: <a href="#order-status-order_status-stop_order_status">order_status</a>
  row_parameter_trigger_price: <a href="#trigger-price-type-trigger_by">trigger_by</a>
  row_parameter_order: <a href="#order-order">order</a>
  row_parameter_exec_type: <a href="#exec-type-exec_type">exec_type</a>
  row_parameter_last_liquidity_ind: <a href="#liquidity-type-last_liquidity_ind">last_liquidity_ind</a>
  row_parameter_tick_direction: <a href="#tick-direction-type-tick_direction">tick_direction</a>
  row_parameter_stop_order_type: <a href="#stop-order-type-stop_order_type">stop_order_type</a>
  row_parameter_symbol_status: <a href="#contract-status-status">status</a>
  row_parameter_withdraw_status: <a href="#withdraw-status-status">status</a>
  row_parameter_copytrading_order_type_query: <a href="#copytrading-order-type-copy_trading_order_type">CopyTrading order type</a>

  # copytrading order type enum
  copy_trading_order_type_active: "- active orders"
  copy_trading_order_type_tpslconditional: "- take profit or stop loss conditional orders"
  copy_trading_order_type_openfilled: "- filled orders"

  # Spot enum parameter table links
  row_parameter_type: <a href="#order-type-type-ordertypes">type</a>
  row_parameter_timeInForce: <a href="#time-in-force-timeinforce">timeInForce</a>
  spot_row_parameter_orderStatus: <a href="#order-status-status">status</a>
  row_parameter_ltStatus: <a href="#lt-status-status">status</a>
  row_parameter_ltOrderStatus: <a href="#lt-order-status-orderstatus">orderStatus</a>
  row_parameter_ltOrderType: <a href="#lt-order-type-ordertype">orderType</a>
  spotServerTime: Bybit server time


  stop_order_trigger_price: If <code>stop_order_type</code> is <code>TrailingProfit</code>, this field is the trailing stop active price.
  errorcode_meaning: Meaning
  resp_field_leverage: In Isolated Margin mode, the value is set by the user. In Cross Margin mode, the value is the max leverage at current risk level
  resp_field_effective_leverage: Effective Leverage.
    In Isolated Margin mode, its value equals `leverage`;
    In Cross Margin mode, The formula to calculate<span>:</span>

    <code>effective_leverage = position size / mark_price / (wallet_balance + unrealised_pnl)</code>
  row_comment_slow_update: The update is not immediate - slowest update is 1 minute

  resp_field_position_list: |
    When <code>symbol</code> is not passed, the response uses a different structure:
  resp_field_order_list: |
    When only <code>symbol</code> is passed, the response uses a different structure:
  resp_field_position_list_valid: represents whether the current data is valid
  resp_field_position_list_data: the data can only be used when <code>is_valid</code> is <b>true</b>
  row_comment_from_id: Start ID. By default, returns the latest IDs
  row_comment_direction: |
    Search direction. <code>Prev</code>: searches in ascending order from start ID, <code>Next</code>: searches in descending order from start ID. Defaults to <code>Next</code>
  row_comment_cursor_direction: |
    Search direction. <code>prev</code>: prev page, <code>next</code>: next page. Defaults to <code>next</code>

  # introduction in index.html.md
  introduction: Group And Resources
  intro_para:
    <p><a href="https://www.bybit.com/">Bybit</a> API and WebSocket documentation provides guidance to help you access Bybit's endpoints, their expected outputs, and common errors.</p>
    <p>For further assistance or feedback, please join the <a href="https://t.me/BybitAPI">API Telegram chat</a>! API discussion group on Telegram.</p>

  resources: API Resources and Support Channels
  intro_para_resources:
    <ul class="bybit-community">
    <li><img src="/images/favicon.ico" height="14", width="14"> <a href="https://www.bybit.com/en-US/help-center/?language=en_US"><strong>Help Center</strong></a> - <strong>Learn more about exchange mechanisms here!</strong>
    <li><img src="/images/github_logo_icon.png" height="14", width="14"> <a href="https://pypi.org/project/pybit/"><strong>pybit</strong></a> - <strong>Official Python SDK</strong>
    <li><img src="/images/github_logo_icon.png" height="14", width="14"> <a href="https://www.npmjs.com/package/bybit-api"><strong>bybit-api</strong></a> - <strong>Community NodeJS SDK</strong>
    <li><img src="/images/github_logo_icon.png" height="14", width="14"> <a href="https://github.com/bybit-exchange/QuickStartWithPostman"><strong>QuickStartWithPostman</strong></a> - <strong>Postman API Collection</strong>
    <li><img src="/images/telegram_logo_icon.png" height="14", width="14"></a> <a href="https://t.me/BybitAPI"><strong>API Discussion Group</strong></a> - <strong>get English help here!</strong>
    <li><img src="/images/telegram_logo_icon.png" height="14", width="14"> <a href="https://t.me/BybitChineseAPI"><strong>API Discussion Group (Chinese)</strong></a> - <strong>get Chinese help here!</strong>
    <li><img src="/images/telegram_logo_icon.png" height="14", width="14"> <a href="https://t.me/Bybit_API_Announcements"><strong>Bybit API Announcement </strong></a> - <strong>subscribe for changes to the API!</strong>
    <li><img src="/images/survey_ico.png" height="14", width="14"> <a href="https://forms.gle/ZfCKRTVen1VExj478"><strong>Bybit Open API Survey </strong></a> - <strong>The survey should take no more than 5 minutes to complete.</strong>
    </ul>

  shared_endpoint_desc: Please see the shared endpoint.

  # Changelog
  # if some missing values - they already have values elsewhere
  changelog: Changelog
  changelog_new: new
  changelog_update: update
  changelog_delete: abandoned
  changelog_bugfix: bugfix
  changelog_rollback: rollback
  ## 2020-04-10
  bugfix_20200410: Change market api curl example URL
  # just fix chinese part doc, so english changelog is empty
  bugfix1_20200409: refine chinese doc
  ## 2020-03-31
  bugfix1_20200331: Fix incorrect balance of <code>USDT</code>
  ## 2020-03-26
  trailing_stop_20200326: Add trigger price <code>new_trailing_active</code> for trailing stop order.
  ## 2020-03-16
  position_20200316: Add field <code>effective_leverage</code> in response
  bugfix1_20200316: Fix value of field <code>equity</code> of <code>USDT</code>
  ## 2020-02-26
  update_20200226: Remove <code>trailing_stop</code> field from parameters of place order endpoint. Currently, this field is useless.
  ## 2020-02-10
  replaceActive1_20200210: Add <code>order_id</code> in response
  replaceCond1_20200210: Add <code>stop_order_id</code> in response
  replaceCond2_20200210: Add a new request parameter <code>stop_order_id</code> to replace <code>order_id</code> for consistency
  bugfix1_20200210: Fix value of <code>rate_limit_reset_ms</code> in V2 private endpoints' response from <code>microseconds</code> to <code>millisecond</code>, be consistent with V1 endpoint
  ## 2019-12-27 20191227
  ## 2019-12-18 20191218
  ## 2019-12-13 20191213
  ## 2019-12-02 20191202
  ## 2019-11-19 20191119
  ## 2019-11-07 20191107
  my_20191107: My position
  ## 2019-11-04 20191104
  cancelOrder_20191104: Cancel order
  cancelOrder__20191104: Support cancel order by <code>order_link_id</code>
  cancelCond__20191104: Support cancel conditional order by <code>order_link_id</code>
  get__20191104: Add extra info
  get___20191104: Update <code>ips</code> field to return content
  update_20191104: Update REST API rate limit
  update__20191104: The rate limit is accurate to milliseconds
  update___20191104: Refine the rate limit of the endpoints
  update____20191104: |
    Add new response fields: <code>rate_limit_reset_ms</code>, <code>rate_limit</code>
  ## 2019-10-22 20191022
  position__20191022: Add extra info, eg. wallet_balance
  trade__20191022: Fix issue of sometimes push same trade multi times
  trade___20191022: Support pushing multi trades in single message
  trade___20200302: Add new field <code>trade_time_ms</code>
  apikey_20200309: Add <code>inviter_id</code> in response
  usertraderecords_20200309: Symbol is require

  # FAQ
  faq: FAQ
  ## <code>reduce_only</code> and <code>close_on_trigger</code> - what's the difference?
  faq_reduce_only: <code>reduce_only</code> and <code>close_on_trigger</code> - what's the difference?
  faq_reduce_only_para: |
    <ul>
    <li>To close your position, submit <a href="#t-placeactive">an order</a> and specify <b><code>reduce_only</code> to <code>true</code></b>. <code>close_on_trigger</code> is not strictly applicable here, but you can also set it to <code>true</code> if it's required.</li>
    <li><code>reduce_only</code> is the one that really matters for closing position, and we will improve the interface in the future.</li>
    <li>Be careful when you specify <code>close_on_trigger</code> to <code>true</code> as it could cause conflict when <code>reduce_only</code> is <code>false</code>.</li>
    </ul>

  ## Why aren't all my orders showing on the website?
  faq_website_orders: Why aren't all my orders showing on the website?
  faq_website_orders_para: |
    <ul>
      <li>Users who have bots which place large numbers of laddered orders will be restricted by the frontend interface, which only shows a maximum of 50 orders on-screen.</li>
      <li>Don't worry, your orders are still in the system and can be queried by the API, but the frontend cannot show more than 50.</li>
    </ul>

  ## Calculating order size based on available wallet balance
  faq_calculating_order_size: Calculating order size based on available wallet balance
  faq_calculating_order_size_para: |
    <ul>
      <li><code>price * available_balance * leverage * perc * (1 - (0.0006 * 2))</code></li>
      <li>Unfortunately this is not a perfectly accurate formula; the real calculation is complex and may be published in the docs at a later date.</li>
      <ul>
        <li><code>price</code> - last price (or your entry price) - can be found with the <a href="#t-latestsymbolinfo">Latest Symbol Info endpoint</a>.</li>
        <li><code>available_balance</code> - can be found with the <a href="#t-myposition">My Position endpoint</a>.</li>
        <li><code>leverage</code> - up to the respective maximum leverage for the market and your risk limit (eg 2, 10, 50).</li>
        <li><code>perc</code> - 0.1 for 10%, 0.25 for 25%, etc.</li>
        <li><code>1 - (0.0006 * 2)</code> - used to calculate the maximum order cost (always assumes entry &amp; exit orders use taker fee regardless actual fee).</li>
      </ul>
    </ul>

  ## Can I exchange assets with the API?
  faq_exchange_assets: Can I exchange assets with the API?
  faq_exchange_assets_para: |
    <ul>
      <li>There is no endpoint to exchange assets. This can only be done on the <a href="https://testnet.bybit.com/app/assets/assets-exchange">website</a>.</li>
      <li>However, it is possible to access your <a href="#t-assetexchangerecords">Asset Exchange Records</a> with the API.</li>
    </ul>

  ## Where are Bybit's servers located?
  faq_server_location: Where are Bybit's servers located?
  faq_server_location_para: |
    AWS Singapore, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-availability-zones">Availability Zone ID</a> apse1-az3.

  ## How do I get funds for testnet?
  faq_testnet_funds: How do I get funds for testnet?
  faq_testnet_funds_para: |
    To get testnet funds, please contact the website's customer support using the yellow support button <a href="https://testnet.bybit.com">shown in the bottom-right corner</a>.

  ## Why are my Closed PNL prices inaccurate?
  faq_closed_pnl_price: Why are my Closed PNL prices inaccurate?
  faq_closed_pnl_price_para: |
    <ul>
      <li>The <code>entry_price</code> and <code>exit_price</code> returned by Closed PNL endpoints are not the actual execution prices of the orders.
      <li>It is based on the total costs of the order
      <ul>
        <li>(whether or not the position was only opened/closed by one order executed at one price - it is more complicated if multiple orders opened/closed a position.)</li>
      </ul>
      <li>For instance, the <code>entry_price</code> and <code>exit_price</code> reported by this endpoint are influenced by the fee paid/received on the orders.</li>
    </ul>

  ## Why are values returned to too many decimal places? (float precision issue)
  faq_float_precision: Why are values returned to too many decimal places? (float precision issue)
  faq_float_precision_para: |
    <ul>
      <li>For example, you received <code>11.969999</code> but you expected <code>11.97</code>.
      <li>Some values are returned to too many decimal places, or a fraction too high or low, due to a float precision problem.</li>
      <li>For now, we recommend rounding the received value to the correct decimal place. This can be done with reference to the <a href="#t-querysymbol">Query Symbol</a> endpoint.</li>
      <li><b>This issue <strike>will be</strike> has been fixed in the latest major version of the API: v3.</b> You can see the documentation for the v3 websocket <a href="https://bybit-exchange.github.io/docs/derivativesV3/contract/#t-websocket">here</a>.</li>
    </ul>

  faq_data_resilience: How can I ensure I am using up-to-date data?
  faq_data_resilience_para: |
    <ul>
      <li>It is possible, although unlikely, that the REST API or (even less likely) the websocket could return/push old data.</li>
      <li>For the greatest level of data resilience, we recommend clients to:
        <ul>
          <li>firstly, rely on the websocket, which will not only ensure you get the latest data as fast as possible, but will also ensure you get <i>complete</i> data</li>
          <li>secondly, query the REST API to fill in any discrepencies in data - or between websocket disconnections.</li>
        </ul>
      <li>The best practice is to save all of this data locally in your own database or cache.</li>
      <li>This frees up your rate limits for other requests and also ensures a level of redundancy against the exchange in case of data delays.</li>
    </ul

  faq_turnover: What is the difference between turnover and volume?
  faq_turnover_para: |
    <ul>
      <li>Turnover: is in the opposite currency to the quantity's currency</li>
      <li>Volume: is in the same currency as the quantity's currency</li>
    </ul>


  # api_auth
  # t(:authentication)
  authentication: Authentication
  auth_aside_key: Please visit Bybit's <a href="https://testnet.bybit.com/app/user/api-management"> <b>testnet</b></a> or <a href="https://www.bybit.com/app/user/api-management"> <b>mainnet</b></a> to generate an API key
  auth_aside_env: |
    REST Base Endpoint:
     <ul>
      <p>
        <li>Testnet:<br/>
          <span id="testnet">https://api-testnet.bybit.com</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
        </li>
      </p>
      <p>
        <li>Mainnet(both endpoints are available):<br/>
          <span id="mainnet_1">https://api.bybit.com</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_1"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
          <br/>
          <span id="mainnet_2">https://api.bytick.com</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_2"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
        </li>
      </p>
     </ul>
  spot_auth_aside_env: |
    REST Base Endpoint:
     <ul>
      <p>
        <li>Testnet:<br/>
          <span id="testnet">https://api-testnet.bybit.com</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
        </li>
      </p>
      <p>
        <li>Mainnet (please choose one based on your network status):<br/>
          <span id="mainnet_1">https://api.bybit.com</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_1"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
          <br/>
          <span id="mainnet_2">https://api.bytick.com</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_2"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
        </li>
      </p>
     </ul>
  auth_para_domains: |
    Domains:
    <ul>
      <li>
        <span id=testnet><a href="https://api-testnet.bybit.com">https://api-testnet.bybit.com</a></span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
      </li>
      <li>
        <span id=mainnet><a href="https://api.bybit.com">https://api.bybit.com</a></span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
      </li>
    </ul>
  auth_para_privatepublic:
    <p>All requests made to private endpoints must be authenticated. Requests made to public endpoints do not require additional authentication.</p>

  ## Parameters for Authenticated Endpoints
  authenticationparameters: Parameters for Authenticated Endpoints
  auth_para_cdn_request_id: To assist in diagnosing advanced network problems, you may consider adding <code>cdn-request-id</code> to your request headers. Its value should be unique for each request.
  auth_para_params: |
    The following parameters must be used for authentication:
    <ul>
      <li><b>api_key</b></li>
      <li><b>timestamp</b> - UTC timestamp in <b>milliseconds</b></li>
      <li><b>sign</b> - a signature derived from the request's parameters</li>
    </ul>
  auth_aside_timestamp: |
    Please make sure that the timestamp parameter adheres to the following rule: server_time - recv_window <= timestamp < server_time + 1000; server_time stands for Bybit server time, which can be queried via the <a href="#t-servertime">Server Time</a> endpoint.
  auth_para_recv: |
    <p>We also provide <code>recv_window</code> (unit in millisecond and default value is 5,000) to specify how long an HTTP request is valid. It is also used to prevent replay attacks.</p>
    <p>A smaller <code>recv_window</code> is more secure, but your request may fail if the transmission time is greater than your <code>recv_window</code>.</p>
    <p>Please make sure that your <code>timestamp</code> is in sync with our server time. You can use the <a href=#t-servertime>Server Time</a> endpoint.</p>
  spot_auth_aside_timestamp: |
    Please make sure that the timestamp parameter adheres to the following rule: serverTime - recvWindow <= timestamp < serverTime + 1000; serverTime stands for Bybit server time, which can be queried via the <a href="#t-servertime">Server Time</a> endpoint.

  spot_auth_para_recv: |
    <p>We also provide <code>recvWindow</code> (unit in millisecond and default value is 5,000) to specify how long an HTTP request is valid. It is also used to prevent replay attacks.</p>
    <p>A smaller <code>recvWindow</code> is more secure, but your request may fail if the transmission time is greater than your <code>recvWindow</code>.</p>
    <p>Please make sure that your <code>timestamp</code> is in sync with our server time. You can use the <a href=#t-servertime>Server Time</a> endpoint.</p>
  ## Constructing the Request
  constructingtherequest: Create A Request
  auth_codequote_construct1a:
    An example for adjusting leverage
  auth_codequote_construct_asset_v3:
    An example for get withdraw records
  auth_codequote_construct1a_v3: |
    An example for how to generate string for signature
  auth_codequote_construct1b:
    Note how the parameters are ordered in <b>alphabetical</b> order, with api_key first followed by leverage, then symbol, then timestamp.
  auth_codequote_construct2: |
    Different requests need different message formats. Message format for <b>GET</b> requests:
  auth_codequote_construct2_v3: |
    Different requests need different message formats. Message format for <b>GET</b> requests:
  auth_codequote_construct_asset_v3_1: |
    Different requests need different message formats. Message format for <b>GET</b> requests:
  auth_codequote_construct3: |
    Message format for <b>POST</b> requests:
  auth_codequote_account_asset_v3_2: |
    Message format for <b>POST</b> requests:
  auth_para_construct1:
    <p>1. Concatenate all the public parameters in the <a href="https://en.wikipedia.org/wiki/Query_string">query string</a> format. The parameters must be ordered in <b>alphabetical</b> order. This will be used to generate the <code>sign</code>.</p>
  auth_para_dv3_construct1: |
    <p>1. timestamp + api-key + [recv_window] + [queryString(order not needed) | jsonBodyString]</p>
  auth_para_construct2:
    <p>2. Use the HMAC_SHA256 algorithm to sign the query string in step 1, and convert it to a hex string to obtain the sign parameter.</p>
  auth_para_dv3_construct2:
    <p>2. Use the HMAC_SHA256 algorithm to sign the string in step 1, and convert it to a hex string to obtain the sign parameter.</p>
  auth_para_construct3:
    <p>3. Append the sign parameter to the end of the parameters string, and send the HTTP request. Note that the message format for GET and POST requests is different. Please refer to the examples.</p>
  auth_para_construct3_dv3:
    <p>3. Append the sign parameter to request header, and send the HTTP request. Note that the message format for GET and POST requests is different. Please refer to the examples.</p>
  auth_aside_signature:
    Example signature algorithms can be found <a href="https://github.com/bybit-exchange/api-usage-examples">here</a>.
  spot_auth_aside_signature:
    Examples of signing algorithms can be found <a href="https://github.com/bybit-exchange/api-usage-examples">here</a>.
  spot_auth_codequote_construct1a:
    An example for balance query
  spot_auth_codequote_construct1b:
    Note how the parameters are ordered in <b>alphabetical</b> order, with api_key first followed by timestamp.

  # Market Data Endpoints
  marketdata: Market Data Endpoints
  market_para_auth: The following market data endpoints do not require authentication.
  market_para_auth_v3: <ul><li>The following market data endpoints do not distinguish between <b>regular accounts</b> and <b>unified margin accounts</b>.</li><li>The following market data endpoints do not require authentication.</li></ul>


  ### Orderbook
  orderbook: Order Book
  dv_orderbook: Get Order Book
  market_para_orderbook: Get the orderbook. Each side has a depth of 25.<br>
  market_para_orderbook_500: Get the orderbook. Each side has a depth of 500.<br>
  market_aside_orderbook: The response is in the snapshot format.
  ### Query Kline
  querykline: Query Kline
  dv_querykline: Get Kline
  market_para_querykline: Get kline.
  ### Query Index Price Kline
  queryindexpricekline: Query Index Price Kline
  dv_indexpricekline: Get Index Price Kline
  ### Query Premium Index Kline
  querypremiumindexkline: Query Premium Index Kline
  linear_market_para_querykline: |
    <p>Get kline.</p>
    <p>For mark price klines, see the <a href="#t-markpricekline">Mark Price Kline</a> endpoint.</p>
  ### Latest Information for Symbol
  latestsymbolinfo: Latest Information for Symbol
  spot_latestsymbolinfo: Latest Information for Symbol
  market_para_symbol: Get the latest information for symbol.
  ### Public Trading Records
  publictradingrecords: Public Trading Records
  dv_publictradingrecords: Get Public Trading History
  market_para_records: Get recent trades. You can find a complete history of trades on Bybit <a href="https://public.bybit.com">here</a>.
  ### Get the Last Funding Rate
  fundingRate: Get the Last Funding Rate
  market_para_fundingRate: The funding rate is generated every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC. For example, if a request is sent at 12:00 UTC, the funding rate generated earlier that day at 08:00 UTC will be sent.
  fundingRate_notice: Historical funding rates are not available through the API. However, you can obtain a CSV of this data by using the "Export" button <a href="https://www.bybit.com/data/basic/inverse/funding-history?symbol=BTCUSD">here</a>.
  ### Query Symbol
  querysymbol: Query Symbol
  market_para_querySymbol: Get symbol info.
  spot_querysymbol: Query Symbol
  ### Query Liquidated Orders
  query_liqrecords: Liquidated Orders
  market_para_query_liqrecords: Retrieve the liquidated orders, The query range is the last seven days of data.

  ### Advanced data
  advanceddata: Advanced Data
  market_para_advanceddata: Get Advanced Data.
  #### Market Funding Rate
  marketfundingrate: Get Funding Rate
  market_para_marketfundingrate: Get Bybit's recent funding rates.
  #### Market Open Interest
  marketopeninterest: Open Interest
  dv_marketopeninterest: Get Open Interest
  market_para_marketopeninterest: Gets the total amount of unsettled contracts. In other words, the total number of contracts held in open positions.
  #### Market Account Ratio
  marketaccountratio: Long-Short Ratio
  market_para_marketaccountratio: Gets the Bybit user accounts' long-short ratio.
  #### Market Account Ratio
  marketeliteratio: Top Trader Account Long-Empty Ratio
  market_para_marketeliteratio: Gets the Bybit top trader account long-empty ratio
  #### Market Big Deal
  marketbigdeal: Latest Big Deal
  market_para_marketbigdeal: |
    <p>Obtain filled orders worth more than 500,000 USD within the last 24h.</p>
    <p>This endpoint may return orders which are over the maximum order qty for the symbol you call. For instance, the maximum order qty for BTCUSD is 1 million contracts, but in the event of the liquidation of a position larger than 1 million this endpoint returns this "impossible" order size.</p>


  # Abandoned Endpoints
  abandonedendpoints: Abandoned Endpoints

  # Account Data Endpoints
  accountdata: Account Data Endpoints
  account_para: The following account data endpoints require authentication.
  ## Active Orders
  activeorders: Active Orders
  account_para_placeActive: |
    <p>Market price: A traditional market price order which will be filled at the best available price. <code>price</code> is not required for this type of order.
    <b>To protect market order from excessive slippage, Bybit converts a market order into a limit order with a spread. A market buy order is converted into a limit order at a higher than best ask price; a market sell order is converted into a limit order at a lower than best bid price.
       The converted limit price and executed price are both available in trade history.</b>.</p>
    <p>Limit price: You can set an execution price for your order. The system will fill your order once the last traded price reaches your execution price.</p>
    <p><b>Take profit/Stop loss: You may only set a TP/SL conditional order upon opening the position. Once you hold a position, any new active order requests which contain TP/SL data will be accepted but the TP/SL data will be ignored. <code>tp_trigger_by</code>/<code>sl_trigger_by</code> default to LastPrice. Passing values to the <code>take_profit</code> or <code>stop_loss</code> parameters in this endpoint will create conditional orders managed by the system, which will be be automatically cancelled if the position is closed.</b></p>
    <p>Order quantity: This parameter indicates the quantity of perpetual contracts you want to buy or sell. For the minimum unit of qty increase or decrease, please refer to the <code>lot_size_filter</code> field in the <a href="#t-querysymbol">Query Symbol</a> endpoint. Note: <b>The allowed max trade quantity of <code>PostOnly</code> is 5 times bigger than normal orders</b>.</p>
    <p>Order price: If it is a conditional order, this parameter is required. When there is no position, the price should be higher than 10% of the market price and less than 1 million. For the minimum unit of price movement, please refer to the price_filter field in the <a href="#t-querysymbol">Query Symbol</a> endpoint. This must modulo by 0.5 (20 and 21.5 are accepted, but 16.1 or 16.15 are not).</p>
    <p>Custom order ID: You may customise order IDs for active orders. We will link it to the system order ID, and return the unique system order ID to you after the active order is created successfully. You may use this order ID or your custom order ID to cancel your active order. The customised order ID should be unique, with a maximum length of 36 characters.</p>
    <p><b>Each account can hold up to 500 active orders yet to be filled entirely simultaneously. This is per instrument, so it's possible to have, for example, 300 active orders on the BTCUSD instrument and 280 active orders on the ETHUSD instrument.</b></p>


  account_para_placeActive_v3: |
    <p><p><b>Interface:</b></p>
    <p>Market active orders: A traditional market order, which will be filled at the current optimal price. Only when the market order is selected,
    can the price be null! To protect the market order from serious slippage, Bybit will convert the market order into a limit order with the buy order price higher than the optimal selling price, and the sell order price lower than the optimal buying price. Both the limit price and the executed price can be queried through the user's transaction history interface.</p>
    <p>Limit active orders: You can set an executed price for your order. When the market price touches the price you set, the system will fill the order for you.</p>
    <p></b>TP/SL: You can only set TP/SL conditional orders while opening positions. Once you have held positions, the TP/SL linked when you submit active orders will not take effect.</b></p>
    <p>Order quantity: The quantity of perpetual contracts you are going to buy/sell. For the order quantity, Bybit only supports positive integers at present.</p>
    <p>Order price: If you are going to place a limit order, this parameter is required. When you have no position, the long order price should be higher than 10% of the market price and lower than 1 million. When you have positions, the price should be higher than the liquidation price. For the minimum unit of the price change, please refer to the priceFilter field in the <a href="#t-dv_instrhead">instrumentInfo</a> interface response.</p>
    <p>Custom conditional order ID: You can customize the active order ID. We can link this ID to the order ID in the system. Once the active order is successfully created, we will send the unique order ID in the system to you. Then, you can use this order ID to cancel active orders. Meanwhile, your customized order ID should be no longer than 36 characters and should be unique.</p>
    <p>Each account can hold a maximum of 500 active orders simultaneously. This is contract-specific, so the following situation is allowed: The same account can hold 300 BTCUSD active orders and 280 ETHUSD active orders at the same time.</p>
    <p>When the upper limit of orders is reached, you can still place orders with parameters of reduceOnly or closeOnTrigger.</p></p>

  account_para_replaceActive_v3: |
    <p><p><b>Interface:</b></p>
    <p>You can modify the information of your active orders through this interface.</p>
    <p>Please note that only orders not filled or not completely filled can be modified.</p></p>

  account_para_cancelActive_v3: |
    <p><p><b>Interface:</b></p>
    <p>For all active orders canceled,order_id or order_link_id is required. </p>
    <p>order_id - Once you have successfully created an active order, the system will send you the unique 36-character order ID.</p>
    <p>You can cancel active orders not filled or not completely filled. You cannot cancel active orders that are completely filled.</p></p>

  account_para_queryActive_v3: |
    <p><p><b>Interface:</b></p>
    <p>Query unfilled orders in real-time.</p>
    <p>When either of the two parameters,orderId or orderLinkId, is passed, data of the order will be returned. However,when neither of them is passed, at most 500 unfilled orders will be returned.</p>
    <p>They will be ranked by the createdTime from newest to oldest.</p></p>

  account_para_getActive_v3: |
    <p><p><b>Interface:</b></p>
    <p>Access my open order list.</p>
    <p>As order creation/cancellation is asynchronous, the data returned from the interface may be delayed. To access order information in real-time, call the <a href="#t-dv_queryorderrealtime">interface</a> enquiring information on open orders in real-time.</p></p>

  usdcBatchOrdersDescV3: |
    <p><p><b>instruction: </b></p>
    <p>This API provides the batch order mode under the unified margin account.</p>
    <p>Make sure you have sufficient funds in your account when placing an order. Once an order is placed, according to the funds required by the order, the funds in your account will be frozen in the corresponding amount during the life cycle of the order, and the amount of funds frozen depends on the parameters specified in the order.</p>
    <p>The same request can only contain orders of the same contract, and options and futures cannot be placed at the same time. Only Limit / Market order is supported, conditional order is not supported.</p>
    <p>If both futures and options orders are in one request, then according to the category type, only the orders whose symbol matches the category will be operated.</p>
    <p>The maximum number of orders included in each request is 10 orders. The returned data list is divided into two lists. The list created by the order and the created information are returned. The orders of the two lists are completely consistent.</p></p>

  usdcBatchReplaceOrdersDescV3: |
    <p><p><b>instruction: </b></p>
    <p>This interface can modify the open order information in batches. Currently, it is not supported to modify the conditional order information.</p>
    <p>Please note that only unfilled or partial filled orders can be modified.</p>
    <p>If both futures and options orders are in one request, only the orders matching the category will be operated according to the category type</p>

  usdcBatchCancelOrdersDescV3: |
    <p><b>instruction: </b></p>
    <p>This API provides batch cancellation under the unified margin account. Order cancellation of futures and options cannot be canceled in one request at the same time. If both futures and options orders are in one request, only the orders matching the category will be operated according to the category type.</p>

  account_para_cancelAllActive_v3: |
    <p><b>instruction: </b></p>
    <p>This API provides the cancellation of all open orders under the unified margin account. Order cancellation of futures and options cannot be canceled in one request at the same time. If both futures and options orders are in one request, only the orders matching the category will be operated according to the category type.</p>
  account_para_cancelAllActive_v3_notice: |
    When category=<code>linear</code>，one of <code>baseCoin</code>, <code>settleCoin</code>, <code>symbol</code> must be passed.
  account_para_myPosition_v3: |
    <p><p><b>Interface:</b></p>
    <p>Accessing personal list of positions. Users can access their position holding information through this interface, such as the number of position holdings and wallet balance.</p></p>

  linear_account_para_setLeverage_v3: |
    <p><p><b>Interface:</b></p>
    <p>Leverage setting.</p></p>

  linear_private_switchmode_v3: |
    <p><b>Interface:</b></p>
    <p>Switching the TP/SL mode to the cross margin mode or selected positions.</p>
    <p>When you set the TP/SL mode on the selected positions, the quantity of take-profit or stop-loss orders can be smaller than the position size. Please use Trading-Stop endpoint to set the TP/SL size.</p>

  linear_private_setrisklimit_v3: |
    <p><b>Interface:</b></p>
    <p>For risk limit, click <a href="https://www.bybit.com/en-US/help-center/HelpCenterKnowledge/bybitHC_Article?language=en_US&id=000001164">here</a> to learn more.</p></p>

  account_para_tradingStop_v3: |
    <p><b>Interface:</b></p>
    <p>Set position TP/SL and trailing stop.</p>
    <p>Pass the following parameters, then the system will create conditional orders. If the position is closed, the system will cancel these orders, and adjust the position size.</p></p>

  wallet_para_tradeRecords_v3: |
    <p><b>Interface:</b></p>
    <p>Access the user's filled history, ranked by time in descending order.</p>
    <p>There might be multiple filled histories for an order.</p></p>

  wallet_para_delivery_record_v3: |
    <p><b>Interface:</b></p>
    <p>Query the settlement history, ranked by time in descending order.</p></p>

  wallet_para_settlement_record_v3: |
    <p><b>Interface:</b></p>
    <p>Query session settlement records</p>
    <p>Only for USDC Perpetual</p></p>

  wallet_para_walletBalance_v3: |
    <p><b>Interface:</b></p>
    <p>Query wallet balance</p></p>

  wallet_para_upgradeUnifiedMarginAccount_v3: |
    <p><p><b>Interface:</b></p>
    <p>Upgrading unified margin account</p></p>

  wallet_para_tradingHistory_v3: |
    <p><b>Interface:</b></p>
    <p>Query trading history</p></p>

  wallet_para_transfers_v3: |
    <p><b>Interface:</b></p>
    <p>Fund transfer between accounts</p></p>

  wallet_para_assetexchangerecords_v3: |
    <br><Exchange Order></br>

  wallet_para_interestBillStatement_v3: |
    <br><Waiting for API team to translate><br>

  wallet_para_queryLoanInterest_v3: |
    <br><Waiting for API team to translate><br>

  websocketpositionV3: |
    <p><p><b>instruction:</b></p>
    <p>Pushing the incremental volume only</p>
    <p>Accessing personal position list. Current user's position holding information can be accessed through this interface, such as the quantity of position holdings and wallet balance.</p>
    <p><b>Topic: </b></p>
    <p>user.position.unifiedAccount</p></p>

  websocketexecutionV3: |
    <p><p><b>Notice:</b></p>
    <p>Accessing the user's filled history ranked by time in ascending order.</p>
    <p><b>Topic: </b></p>
    <p>user.execution.unifiedAccount</p></p>

  websocketOrderV3: |
    <p><p><b>Notice:</b></p>
    <p>Pushing incremental orders only. Merged with conditional orders into one topic.</p>
    <p><b>Topic: </b></p>
    <p>user.order.unifiedAccount</p></p>

  websocketwalletV3: |
    <p><b>Topic: </b></p>
    <p>user.wallet.unifiedAccount</p></p>

  udscGeeksDescV3: |
    <p><b>Topic: </b></p>
    <p>user.greeks.unifiedAccount</p></p>

  udscInfoDescV3: |
    <p><b>Topic: </b></p>
    <p>user.info.unifiedAccount</p></p>

  ### Get Active Order
  getactive: Get Active Order
  a_getactive: Get Active Order
  account_para_getActive: |
    <p>Get my active order list.</p>
    <p>Because order creation/cancellation is asynchronous, there can be a data delay in this endpoint. You can get real-time order info with the <a href="#t-queryactive">Query Active Order (real-time)</a> endpoint.</p>
  account_row_comment_orderId: Order ID
  account_row_comment_orderStatus: Queries orders of all statuses if <code>order_status</code> not provided. If you want to query orders with specific statuses, you can pass the order_status split by ',' (eg <code>Filled,New</code>).
  account_row_comment_req_orderStatus: Queries orders of all statuses if <code>order_status</code> is not provided
  account_row_comment_stopOrderStatus: Queries orders of <code>Untriggered</code>,<code>Active</code>,<code>Deactivated</code> statuses if <code>stop_order_status</code> not provided. If you want to query orders with specific statuses, you can pass the stop_order_status split by ',' (eg <code>Untriggered,Active</code>)
  account_row_comment_req_stopOrderStatus: Queries orders of all statuses if 'stop_order_status' not provided
  ### Cancel Active Order V2
  cancelactive: Cancel Active Order
  account_para_cancelActive: |
    <p>Either <code>order_id</code> or <code>order_link_id</code> are required for cancelling active orders. <code>order_id</code> - this unique 36 characters order ID was returned to you when the active order was created successfully.</p>
    <p>You may cancel active orders that are unfilled or partially filled. Fully filled orders cannot be cancelled.</p>
  ### Cancel All Active Orders
  cancelallactive: Cancel All Active Orders
  account_para_cancelAllActive: |
    <p>Cancel all active orders that are unfilled or partially filled. Fully filled orders cannot be cancelled.</p>
  ### Replace Active Order
  replaceactive: Replace Active Order
  a_replaceactive: Replace Active Order
  account_para_replaceActive: |
    <p>Replace order can modify/amend your active orders.</p>
#    <p><code>p_r_qty</code> and <code>p_r_price</code> are the modified price and quantity. If these two fields are not provided, nothing will be modified.</p>

  account_aside_replaceActive:
    Please note that only orders that are unfilled or partially filled can be modified by the replace-order API.
  account_aside_queryPosition:
    Please note that zero position will be displayed only if the symbol is passed in the input parameter; other conditional queries will only return data with positions.
  account_aside_placeOrder_positionIdx:
    Please note that <b>positionIdx</b> must be required in the hedge mode in contractV3, and must be required in the one-way mode in v2

  websocket_spot_public_topic_v3:
    All type values will be pushed as "snapshot" only for SPOT V3 public topics.
  ### Query Active Order (real-time)
  queryactive: Query Active Order (real-time)
  account_para_queryActive: Query real-time active order information. If only <code>order_id</code> or <code>order_link_id</code> are passed, a single order will be returned; otherwise, <b>returns up to <a href="#t-orderlimits">500</a> unfilled orders</b>.

  a_getrisklimit: Get risk limit
  a_setrisklimit: Set Risk Limit
  ## Conditional Orders
  conditionalorders: Conditional Orders
  ### Place Conditional Order
  placecond: Place Conditional Order
  a_placecond: Place Conditional Order
  account_para_placeCond: |
    <p>Market price conditional order: A traditional market price order, will be filled at the best available price. <code>price</code> is not required for this type of order.</p>
    <p>Limit price conditional order: You can set an execution price for your order. Only when the last traded price reaches the order price will the system will fill your order.</p>
    <p>Take profit/Stop loss: You may only set a take-profit/stop-loss conditional order upon opening the position. Once you hold a position, the take profit and stop loss information you sent when placing an order will no longer be valid.</p>
    <p>Order quantity: This parameter indicates the quantity of perpetual contracts you want to buy or sell, currently Bybit only support order quantity in an integer.</p>
    <p>Order price: If it is a stop order, this parameter is required. When there is no position, the price should be higher than 10% of market price and less than 1 million. For the minimum unit of price movement, please refer to the price_filter field in the <a href="#t-querysymbol">Query Symbol</a> endpoint.</p>
    <p>Conditional order trigger price: You may set a trigger price for your conditional order. conditional order will not enter the order book until the last price hits the trigger price. When last price hits trigger price: 1) your limit conditional order will enter order book, and wait to be executed; 2) your market conditional order will be executed immediately at the best available market price.</p>
    <p>Customize conditional order ID: You may customize order IDs for active orders. We will link it to the system order ID , and return the unique system order ID to you after the active order is created successfully. You may use this order ID to cancel your active order. The customized order ID is asked to be unique, with a maximum length of 36 characters.</p>

  account_aside_placeCond:
    Take profit/Stop loss is not supported in placing conditional orders. One can only use these 2 functions when placing active orders. Moreover, each account can hold up to 10 conditional orders per symbol yet to be filled entirely simultaneously.
  account_aside_placeCond_linear: |
    Each account can hold up to 10 conditional orders per symbol yet to be filled entirely simultaneously.

  account_aside_placeActive_linear_warn: |
    Please note:
    <ul>
      <li><code>ret_code</code>=0 and <code>ext_code</code>="" means create order success</li>
      <li><code>ret_code</code>=0 and <code>ext_code</code>!="" means create order success but some parameters were not set correctly</li>
      <li><code>ret_code</code>!=0 means create order fail</li>
      <li><code>ext_code</code> means please refer to <a href="#t-errors">Errors</a></li>
    </ul>
  getOrderList_warning: |
    This interface only supports to query <b>10k</b> orders per symbol for userId. If you need to get historical orders, please refer to the <a href="https://bybit-exchange.github.io/docs/derivativesV3/contract/#t-contract_getorder">api</a> from contract v3, which enables to get all status orders in recent 7days, and <b>FILLED</b> orders over 7 days

  ### Get Conditional Order
  getcond: Get Conditional Order
  a_getcond: Get Conditional Order
  account_para_getCond:
    <p>Get my conditional order list.</p>
    <p>Because order creation/cancellation is asynchronous, there can be a data delay in this endpoint. You can get real-time order info with the <a href="#t-querycond">Query Conditional Order (real-time)</a> endpoint.</p>
  ### Cancel Conditional Order
  cancelcond: Cancel Conditional Order
  a_cancelcond: Cancel Conditional Order
  account_para_cancelCond: |
    <p>You may cancel all untriggered conditional orders or take profit/stop loss order. Essentially, after a conditional order is triggered, it will become an active order. So, when a conditional order is triggered, cancellation has to be done through the active order endpoint for any unfilled or partially filled active order. As always, orders that have been fully filled cannot be cancelled.</p>
  ### Cancel All Conditional Orders
  cancelallcond: Cancel All Conditional Orders
  account_para_cancelAllCond: Cancel all untriggered conditional orders.
  account_aside_cancelAllActive:
    This endpoint's <code>rate_limit</code> will decrease by 10 per request; ie, one request to this endpoint consumes 10 from the <a href="#t-perendpoint">limit allowed per minute</a>.
  ### Replace Conditional Order
  replacecond: Replace Conditional Order
  a_replacecond: Replace Conditional Order
  account_para_replaceCond:
    <p>Replace conditional order can modify/amend your conditional orders.</p>
    <p><code>order_id</code> and <code>symbol</code> are required for identifying a conditional order.</p>
#    <p><code>p_r_qty</code>, <code>p_r_price</code> and <code>p_r_trigger_price</code> can be set for your conditional order. If these fields are not provided, nothing will be modified.</p>
  account_aside_replaceCond: |
    Please note that you can only modify untriggered conditional orders.
  ### Query Conditional Order (real-time)
  querycond: Query Conditional Order (real-time)
  account_para_queryConditional: Query real-time stop order information. When passing the parameter <code>order_id</code> or <code>order_link_id</code>, a single order data will be returned; otherwise, <b>returns up to <a href="#t-orderlimits">10</a> unfilled orders</b>.
  account_para_queryConditionalNote: <b>When a stop order is triggered, it becomes an active order within the system. This endpoint returns an <code>order_id</code> which is equal to the <code>stop_order_id</code> request parameter.</b>

  ## Leverage
  leverage: Leverage
  ### User Leverage
  getleverage: User Leverage
  account_para_userLeverage: Get user leverage.
  ### Set Leverage
  # see setleverage
  setleverage: Set Leverage
  account_aside_setleverage: You can modify your isolated or cross leverage with this endpoint, but if you want to switch between cross/isolated, please use the <a href="#t-marginswitch">Cross/Isolated Margin Switch</a> endpoint.

  ## Position
  position: Position
  ### My Position V2 (real-time)
  myposition: My Position
  account_para_myPosition: Get my position list.
  ### Change Margin
  changemargin: Change Margin
  account_para_changeMargin: Update margin.
  account_aside_changeMargin: You cannot change margin when your position is in Cross Margin mode, and margin can't be less than <a href="https://help.bybit.com/hc/en-us/articles/360039261174-Initial-Margin-Inverse-Contract-">Initial Margin</a>. See the <a href="#t-setleverage">Change User Leverage</a> endpoint for more.
  ### Set Trading-Stop
  tradingstop: Set Trading-Stop
  account_para_tradingStop: Set take profit, stop loss, and trailing stop for your open position.
  account_para_tradingStop_linear: Set take profit, stop loss, and trailing stop for your open position. If using <a href="#t-switchmode">partial mode</a>, TP/SL/TS orders will not close your entire position.
  account_aside_tradingStop: Passing these parameters will create conditional orders controlled by the system. The system will cancel these orders if the position is closed, and adjust the qty according to the size of the open position.
  account_row_comment_side: Position side
  account_row_comment_takeProfit: Cannot be less than 0, 0 means cancel TP (Not effective under <a href="#t-switchmode">partial mode</a>)
  account_row_comment_stopLoss: Cannot be less than 0, 0 means cancel SL (Not effective under <a href="#t-switchmode">partial mode</a>)
  account_row_comment_tp_trigger_by: |
    Take profit trigger price type, default<span>:</span> <code>LastPrice</code>
  account_row_comment_sl_trigger_by: |
    Stop loss trigger price type, default<span>:</span> <code>LastPrice</code>
  account_row_comment_trailingStop: Cannot be less than 0, 0 means cancel TS (Not effective under <a href="#t-switchmode">partial mode</a>)
  account_row_comment_trailingStop_active: Trailing stop trigger price. Trailing stops are triggered only when the price reaches the specified price. Trailing stops are triggered immediately by default.

  ### Closed Profit and Loss
  closedprofitandloss: Closed Profit and Loss
  dv_closedprofitandloss: Get Closed Profit and Loss
  row_response_closedPnlSide: Side of the closing order
  row_response_closedPnlOrderId: Order ID of the closing order

  ## Risklimit
  risklimit: Risk Limit

  ## Funding
  funding: Funding
  ### My Last Funding Fee
  mylastfundingfee: My Last Funding Fee
  account_para_myLastFunding: <a href="https://help.bybit.com/hc/en-us/articles/360039261114-What-is-funding-rate-and-predicted-rate-">Funding settlement occurs</a> every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC. The current interval's fund fee settlement is based on the current interval's fund rate. For example, at 16:00, the settlement is based on the fund rate generated at 16:00.
  ### Predicted Funding Rate and My Funding Fee
  predictedfunding: Predicted Funding Rate and My Funding Fee
  account_para_predictedFunding: Get <a href="https://help.bybit.com/hc/en-us/articles/360039261114-What-is-funding-rate-and-predicted-rate-">predicted funding rate</a> and my predicted funding fee.
  ## API Key Info
  key: API Key Info
  account_para_key: Get user's API key info.
  ## LCP Points
  lcp: LCP Info
  account_para_lcp: |
    <p>Get user's LCP (data refreshes once an hour). Only supports inverse perpetual at present.</p>
    <p>See <a href="#t-liquidity">Understanding Bybit's Liquidity System</a> to learn more.

  # Wallet Data Endpoints
  wallet: Wallet Data Endpoints
  wallet_para: The following wallet data endpoints require authentication.
  ### Wallet Balance
  balance: Get Wallet Balance
  wallet_para_walletBalance: Get wallet balance info.
  wallet_para_tradingHistory: Query Trading History.
  wallet_aside_walletBalance: |
    <code>position_margin</code> in this endpoint is not same as <a href="https://www.bybit.com/app/wallet/money">position margin on website</a>
    <p>The formula of position margin on website: <code>position_margin</code> + <code>occ_funding_fee</code> + loss(when your <code>available_balance</code> is insufficient)</p>
  ### Wallet Fund Records
  walletrecords: Wallet Fund Records
  dv_walletrecords: Get Wallet Fund Records
  wallet_para_walletRecords: |
    <p>Get wallet fund records. This endpoint also shows exchanges from the <a href="https://testnet.bybit.com/app/assets/assets-exchange">Asset Exchange</a>, where the <code>type</code>s for the exchange are <code>ExchangeOrderWithdraw</code> and <code>ExchangeOrderDeposit</code>.</p>
    <p>This endpoint returns incomplete information for transfers involving the derivatives wallet. Use the <a href="https://bybit-exchange.github.io/docs/account_asset/v3/#t-transfer_api">account asset API</a> for creating and querying internal transfers.
  wallet_aside_walletRecords: |
    Find more detail for types <code>Withdraw</code> and <code>Refund</code> in the <a href="#t-withdrawrecords">Withdraw Records</a> endpoint.
  wallet_aside_walletRecords1: USDT records will not be returned unless you pass <code>USDT</code> with the <code>coin</code> parameter.
  wallet_aside_walletRecords2: Deposit or withdrawal records which occurred after 2021-07-15 will not be shown by this endpoint. To fetch records after this date you should call the <a href="https://bybit-exchange.github.io/docs/account_asset/v3/#t-depositsrecordquery">Query Deposit Records</a> and <a href="https://bybit-exchange.github.io/docs/account_asset/v3/#t-withdrawrecordquery">Query Withdraw Records</a> endpoints. This is due to the introduction of the spot wallet at this time.
  ### Withdraw Records
  withdrawrecords: Withdraw Records
  wallet_para_withdrawRecords: |
    <p>Get withdrawal records.</p>
    <p>The difference between data returned by this endpoint and data of type <code>Withdraw</code> in the <a href="#t-walletrecords">Wallet Fund Records</a> endpoint:<p>
    <p>This endpoint provides one withdrawal operation per record, and you can check the current withdrawal state with the <code>status</code> field.</p>
    <p>Once you have submitted a withdrawal application, there will be a record with type <code>Withdraw</code>, and if the application is <code>CancelByUser</code>, <code>Reject</code> or <code>Expire</code> in the <a href="#t-walletrecords">Wallet Fund Records</a> endpoint, with a corresponding record with type <code>Refund</code>.</p>

  wallet_para_upgradeUnifiedMarginAccount: Upgrade Unified Margin Account



  ### Assets Exchange Records
  assetexchangerecords: Asset Exchange Records
  wallet_para_assetexchangerecords: Get asset exchange records.

  wallet_para_interestBillStatement:

  ### User Trade Records
  usertraderecords: Get User Trade Records
  userhistorytraderecords: Extended User Trade Records
  wallet_para_tradeRecords: Get user's trading records. The results are ordered in ascending order (the first item is the oldest). If you want to get the records up to 2 years old, please refer to contract v3 <a href="https://bybit-exchange.github.io/docs/derivativesV3/contract/#t-usertraderecords">endpoint</a>
  wallet_aside_tradeRecords: One order may have multiple trade records.
  wallet_row_comment_orderId: OrderID. If not provided, will return user's trading records
  ## Get Risk Limit
  getrisklimit: Get Risk Limit
  account_para_getRisk: Get risk limit. <b>This endpoint does not require authentication.</b>
  account_aside_getRisk_inverse: Read more about the risk limit <a href="https://www.bybit.com/en-US/help-center/bybitHC_Article/?language=zh_MY&id=000001095">here</a>.
  account_aside_getRisk_linear: Read more about the risk limit <a href="https://www.bybit.com/en-US/help-center/HelpCenterKnowledge/bybitHC_Article?language=en_US&id=000001164">here</a>.
## Set Risk Limit
  setrisklimit: Set Risk Limit
  account_para_setRisk: Set risk limit.

  # API Data Endpoints
  api: API Data Endpoints
  api_para: The following API data endpoints do not require authentication.
  ### Server time
  servertime: Server Time
  api_para_time: Get Bybit server time.
  ### Announcement
  announcement: Announcement
  api_para_announcement: Get Bybit OpenAPI announcements in the last 30 days in reverse order.

  # API Rate Limits
  ratelimits: Rate Limits
  rate_limits_aside: |
    There are two types of rate limit: <a href="#t-ipratelimits">IP rate limit</a> (measured per second) and <a href="#t-understandingratelimits">API rate limit</a> (measured per minute). The IP rate limit will count all of your requests and the API rate limit will only count your authenticated requests.
  ### IP Rate Limit
  ipratelimits: IP Rate Limit
  ip_rate_para_understanding: |
    <aside class="warning">
    If you receive an <b>HTTP 403</b> (Access Denied) response, your IP has been either temporarily or permanently banned. <b>You should immediately review the below guidelines to ensure your application does not continue to violate the limit.</b> If you are still banned after 30 minutes, you likely have a permanent ban.
    </aside>
    <p>Bybit has different IP frequency limits depending on the request method. We do not recommend running your application at the very edge of these limits in case abnormal network activity results in an unexpected violation.</p>
    <ul>
    <li>
      <code>GET</code> & <code>DELETE</code> methods (shared):
      <ul>
        <li>50 requests per second for 2 consecutive minutes</li>
        <li>70 requests per second for 5 consecutive seconds</li>
      </ul>
    </li>
    <li>
      <code>POST</code> method:
      <ul>
        <li>20 requests per second for 2 consecutive minutes</li>
        <li>50 requests per second for 5 consecutive seconds</li>
      </ul>
    </li>
    </ul>
    <p>This table shows how there are different IP rate limit counters depending on the API you are using.</p>
    <table class="custom_table">
      <tr>
        <th>IP rate limit</th>
        <th>API</th>
        <th>Path</th>
      </tr>
      <tr>
        <td rowspan="6">2mins 50/s;<br>5s 70/s</td>
        <tr><td>Unified Margin</td><td>/unified</td>
        <tr><td>Contract v3</td><td>/contract</td>
        <tr><td>Inverse Perpetual</td><td>/v2</td>
        <tr><td>Inverse Futures</td><td>/futures</td>
        <tr><td>Linear Perpetual</td><td>/public, /private</td>
      </tr>
      <tr>
        <td rowspan="2">2mins 50/s;<br>5s 70/s</td>
        <tr><td>Asset V1,<br>Asset V3</td><td>/asset/v1, /asset/v3</td>
      </tr>
      <tr>
        <td rowspan="2">2mins 50/s;<br>5s 70/s</td>
        <tr><td>Spot V1,<br>Spot V3</td><td>/spot/v1, /spot/v3</td>
      </tr>
      <tr>
        <td rowspan="3">2mins 50/s;<br>5s 70/s</td>
        <tr><td>USDC Options</td><td>/option</td>
        <tr><td>USDC Perpetual</td><td>/perpetual</td>
      </tr>
    </table>
    <p>After violating the limit your IP will be banned for a set period of time (usually 30 minutes). Continually violating the limit will result in a permanent ban. We cannot undo permanent bans or shorten temporary bans.</p>
  ip_rate_para_understanding_testnet: |
    <p>The IP limits are shared across all endpoints: futures, spot, and account asset.</p>
    <p>Bybit has different IP frequency limits depending on the request method. We do not recommend running your application at the very edge of these limits in case abnormal network activity results in an unexpected violation.</p>
    <ul>
    <li>
      <code>GET</code> & <code>DELETE</code> methods (shared):
      <ul>
        <li>12 requests per second continuously for 2 minutes</li>
        <li>18 requests per second continuously for 5 seconds</li>
      </ul>
    </li>
    <li>
      <code>POST</code> method:
      <ul>
        <li>10 requests per second continuously for 2 minutes</li>
        <li>15 requests per second continuously for 5 seconds</li>
      </ul>
    </li>
    </ul>

  spot_ip_rate_para_understanding: |
        <p>Bybit has rate limits based on IP which is 200 per second</p>
  ### Account rate limit
  understandingratelimits: API Rate Limit
  rate_para_understanding: |
    <aside class="warning">
    If you receive <a href="#10006"><code><b>"ret_msg": "Too many visits!"</b></code></a> in the JSON response, you have hit the API rate limit. The rate limit resets 60 seconds after your first request.
    </aside>
    <p>The API rate limit is based on <b>the rolling time window per minute and UID, and each symbol is independent</b>. In other words, it's per minute per UID per symbol. Every request to the API returns the fields shown in the code panel:</p>
  rate_para_understanding_v3: |
    <aside class="warning">
    If you receive <a href="#10006"><code><b>"ret_msg": "Too many visits!"</b></code></a> in the JSON response, you have hit the API rate limit.
    </aside>
    <p>The API rate limit is based on <b>the rolling time window per second and UID</b>. In other words, it's per second per UID. Every request to the API returns response header shown in the code panel:</p>
  spot_rate_para_understanding: |
    For all endpoints that need authentication, the rate limit is 20 per second for each endpoint.
  rate_text_limitStatus_understanding: your remaining requests for current endpoint
  rate_text_limit_understanding: your current limit for current endpoint
  rate_text_limitReset: the timestamp indicating when your request limit resets if you have exceeded your rate_limit. Otherwise, this is just the current timestamp.
  #spot
  spot_rate_text_limitStatus_understanding: your number of remaining requests for current endpoint
  spot_rate_text_limit_understanding: your rate limit for current endpoint
  spot_rate_text_limitReset: If you have exceeded rate_limit, the timestamp indicates when your limit will reset. Otherwise, it indicates the current timestamp (unit in millisecond).

  ### Rate Limits For All Endpoints
  perendpoint: Rate Limits For All Private Endpoints
  assetRateLimitIntro: The rate limits for the Withdraw and Deposit Endpoints and Rate Limits For Transfer Endpoints are separate.
  perendpointtransfer: Rate Limits For Transfer Endpoints

  perendpointDepositWithdraw: Rate Limits For Withdraw and Deposit Endpoints

  ratelimitUsdc: The rate limits for each private endpoint should be considered separately.

  ### Order Limits
  orderlimits: Order Limits
  rate_para_limits: |
    <p>Max. number of unfilled orders supported under each trading pair:</p>
    <ul>
    <li>Active orders: 500</li>
    <li>Conditional orders: 10</li>
    </ul>
    <p>If you have reached the 500 active order limit, creating a new order will be successful, but the oldest existing order will be cancelled. However, if you have reached the 10 conditional order limit, creating a new order will result in an error, maintaining the existing 10 orders.</p>
  rate_para_limits_contractV3: |
    <p>Max. number of unfilled orders supported under each trading pair:</p>
    <ul>
    <li>Active orders: 500</li>
    <li>Conditional orders: 10</li>
    </ul>
  ### How to Raise Your API Limit
  raisemylimit: How to Increase API Limits
  rate_para_raise: |
    <ul>
    <li>Please refer to <a href="#t-liquidity">Understanding Bybit&#39;s Liquidity System</a> regarding how our system automatically allocates rate limits for users who place over 2,000 orders per day.</li>
    <li>Please email <a href="mailto:api@bybit.com">api@bybit.com</a> with the following information. We will reply within 1-4 working days:</li>
      <ol>
        <li>Your name and your company details</li>
        <li>Your Bybit UID or registered email, and the assets you are trading</li>
        <li>General description of your trading strategy and reasons for higher rate limits</li>
        <li>Screenshot of previous monthly trading volume (maker/taker) on other platforms</li>
        <li>Optional: your order history in CSV format</li>
      </ol>
    </ul>
  rate_para_raise_v3: |
    <ul>
    Please email <a href="mailto:api@bybit.com">api@bybit.com</a> with the following information. We will reply within 1-4 working days:
      <ol>
        <li>Your name and your company details</li>
        <li>Your Bybit UID or registered email, and the assets you are trading</li>
        <li>General description of your trading strategy and reasons for higher rate limits</li>
        <li>Screenshot of previous monthly trading volume (maker/taker) on other platforms</li>
        <li>Optional: your order history in CSV format</li>
      </ol>
    </ul>
  ### Understanding Bybit's Liquidity System
  liquidity: Understanding Bybit's Liquidity System
  rate_para_liquidity: |
    <p>Bybit uses <code>Order Fill Ratio (OFR)</code> and <code>Liquidity Contribution Points (LCP)</code> to measure customers&#39; contribution to our executable liquidity.</p>
    <p>The <code>LCP</code> and <code>OFR</code> of different assets are calculated separately.</p>
  #### Order Fill Ratio (OFR) Threshold
  ofrthreshold: Order Fill Ratio (OFR) Threshold
  rate_para_threshold: |
    If you place more than <code>2000</code> orders per day on Bybit, please make sure that your 7-day OFR is above a <code>Minimum OFR threshold</code>. Otherwise, Bybit may reduce the rate limits for your API request.
  ##### Order Fill Ratio (OFR)
  ofrratio: Order Fill Ratio (OFR)
  rate_para_ratio: |
    <ul>
    <li><code>Order Fill Ratio (OFR)</code>: <code>Orders Filled</code> to <code>Orders Submitted to Bybit</code> to Bybit.</li>
    <li><code>Orders Submitted to Bybit</code>: any order submitted to Bybit.</li>
    <li><code>Orders Filled</code>: any order that has been filled (regardless of filled quantity).</li>
    <li><code>OFR = (number of orders filled / number of orders submitted to Bybit)</code></li>
    </ul>
  ##### Order Fill Ratio Example
  ofrratioExample: Order Fill Ratio Example
  rate_para_ratioExample: |
    <p>User A submitted a limit order request which contains 4 bids and 4 asks, and these orders are placed in the orderbook at different price levels. Then, User A cancelled 2 bids and submits a new limit order request which contains 2 new bids.</p>
    <p>At this time, User B submits a market order request, and matches with 2 of A&#39;s bids.</p>
    <p>The OFR of this period is calculated as follows:</p>
  rate_pre_ratioExampleA: |
    User A:
    Orders Filled = 2
    Orders Submitted to Bybit = 8
    OFR = 2/8 = 25%
  rate_pre_ratioExampleB: |
    User B:
    Orders Filled = 1
    Orders Submitted to Bybit = 1
    OFR = 1/1 = 100%
  ##### Minimum OFR Threshold
  ofrminimum: Minimum OFR Threshold
  rate_para_minimum: 7-day OFR must be kept above 0.1%.
  spot_rate_para_minimum: 7-day OFR must be above 0.1%.
  #### API Request Frequency Limits
  frequencylimit: Rate Limits for API Requests
  rate_para_frequency:
    The rate limits for your API requests are based on your min. <code>Liquidity Contribution Points (LCP)</code> within <code>7</code> days.
  column_LCP: LCP
  column_frequencyLimit: Order Frequency Limit
  row_frequencyLimit_800: 800 times per minute
  row_frequencyLimit_600: 600 times per minute
  row_frequencyLimit_400: 400 times per minute
  row_frequencyLimit_200: 200 times per minute
  row_frequencyLimit_100: 100 times per minute
  ##### Liquidity Contribution Points (LCP)
  liquidityPoints: Liquidity Contribution Points (LCP)
  rate_para_liquidityPoints: |
    <ul>
    <li><code>Liquidity Contribution Points (LCP) = POU * POA * 100</code></li>
    </ul>
  ##### Explanation
  ratelimitsexplanation: Explanation
  ###### Effective Price Range
  pricerange: Effective Price Range
  rate_para_priceRange: |
    <ul>
    <li><p><code>effective price range</code>: order price that falls within the lower and upper price bounds.</p>
    </li>
    <li><p>Min <code>effective price</code>:   (best bid price + best ask price) / 2 - (3 * tick_size)</p>
    </li>
    <li><p>Max <code>effective price</code>:  (best bid price + best ask price) / 2 + (3 * tick_size)</p>
    </li>
    </ul>
  ###### Effective Price Range example
  pricerangeExample: Effective Price Range Example
  rate_pre_priceRangeExample: |
    BTC best bid = 10000
    BTC best ask = 10001
    Effective Price Range: [(10000 + 10001) / 2 - 3* 0.5, (10000 + 10001) / 2 + 3* 0.5] = [9999,10002]
  ###### POU
  pou: POU
  rate_para_POU: |
    <ul>
    <li><code>POU</code>: The size of your orders that fall within the <code>effective price range</code> in proportion to the total size of your orders in the order book.</li>
    </ul>
    <p>Bybit calculates the size of your orders that fall within the <code>effective price range</code> / the total size of your orders in the order book per second, and then computes the time-weighted-average of the day.</p>
  ###### POU example
  pouExample: POU Example
  rate_para_POUExample: User C bids 2000 contracts for $9995 and bids 8000 contracts for $9999, while effective price range is [9999,10002]
  rate_pre_POUExample: |
    amount of User C's orders within effective price range = 8000
    amount of all User C's orders = 2000 + 8000 = 10000
    POU = 8000 / 10000 = 0.8

  ###### POA
  poa: POA
  rate_para_POA: |
    <ul>
    <li><code>POA</code>: the proportion of your orders within <code>effective price range</code> to all orders within <code>effective price range</code> in orderbook.</li>
    </ul>
    <p>Bybit calculates your amount of orders within <code>effective price range</code> / amount of all orders within <code>effective price range</code> in orderbook, and then performs a 1-Day Time-Weighted-Average over the series of seconds rates.</p>
  ### spot
  spot_poa: POA
  spot_rate_para_POA: |
    <ul>
    <li><code>POA</code>: The size of your orders that fall within the <code>effective price range</code> to the total size of orders in the order book that falls within the <code>effective price range</code>.</li>
    </ul>
    <p>Bybit calculates the size of your orders that fall within the <code>effective price range</code> / the total size of orders in the order book that falls within the <code>effective price range</code> per second, and then computes the time-weighted-average of the day.</p>
  ###### POA example
  poaExample: POA example
  rate_para_POAExample: The size of user C's orders that fall within the effective price range is 8,000, while the total size of orders in the order book that fall within the effective price range is 200,000.
  rate_pre_POAExample: |
    Size of user C's orders within effective price range = 8000
    Total size of orders within effective price range = 200000
    POA = 8000 / 200000 = 0.04
  rate_aside_POAExample: Prior notice will be given via the website if we update this mechanism.
  spot_rate_aside_POAExample: Bybit will notify all users in advance if the mechanism is updated.

  # WebSocket Data
  websocket: WebSocket Data
  ## Authentication
  websocketauthentication: Authentication
  websocket_codequote_auth: |
    Authentication methods:
  websocket_codequote_auth1: |
    First method: Apply for authentication when establishing a connection.
  websocket_codequote_auth2: |
    Second method: Apply for authentication after establishing a connection through auth request.
  websocket_codequote_auth_spot: |
    <p>Apply for authentication when establishing a connection.</p>
    <p>Note: if you're using <a href="https://github.com/bybit-exchange/pybit">pybit</a> or another high-level library, you can ignore this code - as authentication is handled for you.</p>
  websocket_endpoints_aside: |
    <b>Note that the following endpoints only apply to <i>Inverse Perpetual/Futures</i></b>. To listen to other websockets, go to:
    <ul>
      <li><a href="https://bybit-exchange.github.io/docs/linear/#t-websocketauthentication">USDT (Linear) Perpetual</a></li>
      <li><a href="https://bybit-exchange.github.io/docs/spot/v3/#t-websocketauthentication">Spot</a></li>
    </ul>
  websocket_endpoints_aside_copytrading: |
    <b>Note that currently Copy Trading only supports USDT perpetual and the following endpoints only apply to <i>USDT (Linear) Perpetual</i></b>. To listen to other websockets, go to:
    <ul>
      <li><a href="https://bybit-exchange.github.io/docs/inverse/#t-websocketauthentication">Inverse Perpetual</a></li>
      <li><a href="https://bybit-exchange.github.io/docs/spot/v3/#t-websocketauthentication">Spot</a></li>
    </ul>
  websocket_para_endpoint: |
    <p>Base endpoints:</p>
    <ul>
      <li>Testnet:
        <span id="testnet_address">wss://stream-testnet.bybit.com/realtime</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
      </li>
      <li>Mainnet (both endpoints are available):
        <ul>
        <li><span id="mainnet_address">wss://stream.bybit.com/realtime</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
        <li><span id="mainnet_address_2">wss://stream.bytick.com/realtime</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_address_2"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
        </ul>
      </li>
    </ul>
  websocket_para_endpoint_dv3: |
    <p>Base endpoints:</p>
        <ul>
          <li>Testnet:
            <span id="testnet_address">wss://stream-testnet.bybit.com/realtime</span>
            <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
          </li>
          <li>Mainnet (both endpoints are available):
            <ul>
            <li><span id="mainnet_address">wss://stream.bybit.com/realtime</span>
            <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
            <li><span id="mainnet_address_2">wss://stream.bytick.com/realtime</span>
            <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_address_2"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
            </ul>
          </li>
        </ul>

    <p>Base endpoints:</p>
       <ul>
       <p>
       <li>TestNet:<br/>
           <span id="usdt_testnet_address">USDT Perpetual: wss://stream-testnet.bybit.com/contract/usdt/public/v3</span>
           <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#usdt_testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
           <br/>
           <span id="inverse_testnet_address">inverse Perpetual: wss://stream-testnet.bybit.com/contract/inverse/public/v3</span>
           <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#inverse_testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
       </li>
       </p>
       <p>
         <li>MainNet:<br/>
           <span id="usdt_mainnet_address">USDT Perpetual: wss://stream.bybit.com/contract/usdt/public/v3</span>
           <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#usdt_mainnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
           <br/>
           <span id="inverse_mainnet_address">inverse Perpetual: wss://stream.bytick.com/contract/inverse/public/v3</span>
           <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#inverse_mainnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
         </li>
       </p>
       </ul>
  spot_websocket_endpoints_aside: |
    <b>Note that the following endpoints only apply to <i>Spot</i></b>. To listen to other websockets, go to:
    <ul>
      <li><a href="https://bybit-exchange.github.io/docs/inverse/#t-websocketauthentication">Inverse Perpetual/Futures</a></li>
      <li><a href="https://bybit-exchange.github.io/docs/linear/#t-websocketauthentication">USDT (Linear) Perpetual</a></li>
    </ul>
  spot_websocket_para_endpoint: |
    Base endpoints:
    <ul>
      <li>Testnet:
        <ul>
          <li>
            Public Topics: <span id="testnet_address">wss://stream-testnet.bybit.com/spot/quote/ws/v1</span>
            <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
          </li>
          <li>
            Public Topics v2: <span id="testnet_address_2">wss://stream-testnet.bybit.com/spot/quote/ws/v2</span>
            <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet_address_2"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
          </li>
          <li>
            Private Topics: <span id="testnet_address_3">wss://stream-testnet.bybit.com/spot/ws</span>
            <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet_address_3"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
          </li>
        </ul>
      </li>
      <li>Mainnet:
        <ul>
          <li>
            Public Topics: <span id="mainnet_address">wss://stream.bybit.com/spot/quote/ws/v1</span>
            <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
          </li>
          <li>
            Public Topics v2: <span id="mainnet_address_2">wss://stream.bybit.com/spot/quote/ws/v2</span>
            <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_address_2"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
          </li>
          <li>
            Private Topics: <span id="mainnet_address_3">wss://stream.bybit.com/spot/ws</span>
            <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_address_3"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
          </li>
        </ul>
      </li>
    </ul>
  spot_websocket_para_endpoint_v3: |
    Base endpoints:
        <ul>
        <p>
          <li><b>Testnet</b>:</br>
              Public Topics: <span id="testnet_address">wss://stream-testnet.bybit.com/spot/public/v3</span>
              <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
              </br>
              Private Topics: <span id="testnet_private_address">wss://stream-testnet.bybit.com/spot/private/v3</span>
              <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet_private_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
          </li>
          </br>
          <li><b>Mainnet</b>:</br>
                Public Topics: <span id="mainnet_address">wss://stream.bybit.com/spot/public/v3</span>
                <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
                </br>
                Private Topics: <span id="mainnet_private_address">wss://stream.bybit.com/spot/private/v3</span>
                <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_private_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
          </li>
        </ul>
  websocket_aside_auth: <b>Public</b> topics do not require authentication. The following section applies to <b>private</b> topics only.
  websocket_aside_push_trigger: Typically, websocket messages will only be pushed when a change occurs. You won't receive a snapshot message immediately upon subscription unless otherwise stated. This means that when subscribing to your <code>position</code>, you won't receive any position messages until (for example) your position size changes.
  websocket_para_methods: Authentication examples are shown in the code block.
  spot_websocket_para_methods: There are two authentication methods. Example of signing algorithms can be found here.
  websocket_aside_signature: Example signature algorithms can be found <a href="https://github.com/bybit-exchange/api-usage-examples">here</a>.
  websocket_best_practices: Due to network complexity, your may get disconnected at any time. Please follow the instructions below to ensure that you receive WebSocket messages on time:</span>
    <p>1. Keep connection alive by <a href="#t-heartbeat">sending heartbeat packet</a></p>
    <p>2. Reconnect as soon as possible if disconnected</p>
  websocket_max_50_connection: An IP can connect to a maximum of 50 private spot websocket connections simultaneously.
  ## How to Send the Heartbeat Packet
  heartbeat: How to Send Heartbeat Packet
  websocket_codequote_heartbeat: How to Send
  websocket_aside_heartbeat: To avoid networks or program issues, we recommend that you send the <code>ping</code> heartbeat packet every <b>20</b> seconds to maintain the WebSocket connection.

  ## Rate Limits
  websocketlimit: Rate Limits
  websocket_para_limit: ""
  websocket_spot_para_apiLimit: <b>Private channel ONLY</b>：</br>Each API key may have a maximum of 100 private WebSocket connections. The 101st connection will be rejected.
  ## How to Subscribe to Topics
  subscribe: How to Subscribe to Topics
  ### Understanding Websocket Filters
  websocketfilters: Understanding Websocket Filters
  websocketunfilters: Understanding Websocket Filters unsubscription
  websocket_codequote_filters1: How to subscribe with a filter
  websocket_codequote_filters2: How to subscribe with multiple filters
  websocket_codequote_filters3: How to subscribe without filters
  websocket_codequote_filters_linear: Subscribe with multiple filters
  websocket_para_filters: |
    After establishing the connection, one can subscribe to a new topic by sending a JSON request. The specific formats are as follows:
  websocket_para_filters1: |
    <p>The <code>topic</code> indicates the data you would like to receive whilst the <code>filter</code> parses for the specific data you desire - for example, the symbol. The <code>topic</code> is mandatory but the <code>filter</code> is optional.</p>
    <p>To subscribe to more than one topic, simply list multiple topics out, like so:</p>
  websocket_para_filters2: |
    <p>It is possible to use multiple filters for the same topic by splitting them with a pipe (<code>|</code>) - of course, these filters must all be applicable to the selected <code>topic</code>.</p>
    <p>Finally, to subscribe to the topic without filters please use the <code>*</code> wildcard.</p>
  websocket_para_filters3: |
    <p>It is possible to use multiple filters for the same topic by splitting them with a pipe (<code>|</code>) - of course, these filters must all be applicable to the selected <code>topic</code>.</p>
  websocket_para_filter_resp: |
    <p>Response(<code>ret_msg</code> the reason of failure, but it keeps null with successful subscription): {"success":true,"ret_msg":"","conn_id": "{conn_id}"}
  websocketunsubfilters: Unsubscribing From Websocket Topics
  websocket_codequote_unsubfilters: How to unsubscribe with a filter
  websocket_para_unsubfilters: |
    You can dynamically subscribe and unsubscribe from topics (with or without filters) without websocket disconnection as follows:
  ### Intervals
  intervals: Intervals
  websocket_para_intervals: Some topics are pushed at intervals. If the <code>args</code> contain a millisecond param, such as <code>100ms</code>, this topic is pushed at intervals. Otherwise, it is pushed constantly.

  ## Understanding the Subscription Response
  websocketresponse: Understanding Subscription Response
  websocket_codequote_response: Subscription Response
  websocket_para_response: Each subscription will have a response. You can determine whether the subscription is successful based on the response.
  spot_websocket_para_response: Once you subscribe successfully, you'd receive result information. You can determine whether the subscription is successful based on the response.
  ## Public Topics
  publictopics: Public Topics
  publictopics_v2: Public Topics V2
  ### orderBookL2
  websocketorderbook: orderBookL2
  ### orderBookL2_25
  websocketorderbook25: orderBookL2_25
  websocket_para_orderbook251: Fetches the orderbook with a depth of 25 orders per side.
  orderbookL2_200_link: Want a greater depth? Take a look at the <a href="#t-websocketorderbook200">orderBookL2_200</a> endpoint.
  websocket_para_orderbook252: |
    <p>After the subscription response, the first response will be the snapshot response. This shows the entire orderbook. The data is ordered by price, starting with the lowest buys and ending with the highest sells.</p>
    <p>Following this, all responses are in the delta format, which represents updates to the orderbook relative to the last response.</p>
    <p>Push frequency: <b>20ms</b></p>
  ### orderBookL2_200
  websocketorderbook200: orderBookL2_200
  websocket_para_orderbook200: |
    <p>Fetches the orderbook with a depth of 200 orders per side.</p>
    <p>After the subscription response, the first response will be the snapshot response. This shows the entire orderbook. The data is ordered by price, starting with the lowest buys and ending with the highest sells.</p>
    <p>Following this, all responses are in the delta format, which represents updates to the orderbook relative to the last response.</p>
    <p>Push frequency: <b>100ms</b></p>
  ### trade
  websockettrade: trade
  websocketTradeSide: Direction of taker
  websocket_para_trade: |
    <p>Push frequency: <b>100ms</b></p>
  websocket_para_trade_ud: |
    <b>instruction:</b><br>
    Get recent trade data from Bybit.<br>
    After subscription, you will be pushed delta trade message in real-time once there is an order filled.<br><br>
    Push frequency: <b>real-time</b><br><br>
    <b>Topic:</b><br>
    <code>publicTrade.{symbol}</code>(Option uses baseCoin)
  ### insurance
  websocketinsurance: insurance
  websocket_para_insurance: |
    <p>Get the daily insurance fund update.</p>
    <p>Push frequency: <b>20:00 UTC / day</b></p>
  websocket_aside_insurance: The <code>wallet_balance</code> is in Satoshis, with one Satoshi being 100 millionth (<code>100000000</code>) of one Bitcoin.
  ### instrument_info
  websocketinstrumentInfo: instrumentInfo
  websocketTicker_v3: ticker
  websocket_para_instrumentInfo: |
    <p>Get latest information for symbol.</p>
    <p>Push frequency: <b>100ms</b></p>
  websocket_para_ticker_UM: |
    <p>Get latest information for symbol.</p>
    <p>Push frequency: <b>100ms</b>(Futures), <b>200ms</b>(Option)</p>
    <p><b>Topic:</b></p>
    <p><code>tickers.{symbol}</code></p>
  websocket_para_ticker_contract: |
    <p>Get latest information for symbol.</p>
    <p>Push frequency: <b>100ms</b></p>
    <p><b>Topic:</b></p>
    <p><code>tickers.{symbol}</code></p>
  websocket_aside_instrumentInfo1: |
    This topic only utilises the <code>update</code> field. Both the <code>delete</code> and <code>insert</code> fields are null. If a key is not found in the <code>update</code> field, its value has not changed.
  websocket_aside_instrumentInfo2: |
    Some values use scientific notation. This is indicated by that value's key, which will be appended with, for example, <code>e6</code>. If the key is <code>last_price_e4</code> and the value is <code>81585000</code>, then to find the true value we can do <code>81585000 / 10^4</code>, which equals <code>8158.5</code>.
  websocket_aside_instrumentInfo_contract: |
    This topic will utilises the <code>snapshot</code> field and  <code>delta</code> fields. If a key is not found in the field, its value has not changed.
  websocket_aside_instrumentInfo_um: |
    <p><b>Futures</b>: topic will utilises the <code>snapshot</code> field and  <code>delta</code> fields. If a key is not found in the field, its value has not changed.</p>
    <p><b>Option</b>: topic only has the <code>snapshot</code> type of data.</p>
  ## symbol state notify
  websocketSymbolNotify: Symbol state
  websocketSymbolNotify_para: |
    <p><b>Push frequency: real-time</b></p>
    <p><b>Topic:</b> instrument.state.notification.{baseCoin}</p>
  usdcSymbolStatus: Symbol status
  usdcOnlineTime: Online time in ms
  ### klineV2
  websocketklineV2: klineV2
  websocket_para_klineV2: |
    <p>Currently supported intervals:</p>
    <ul>
    <li>1 3 5 15 30</li>
    <li>60 120 240 360 720</li>
    <li>D</li>
    <li>W</li>
    <li>M</li>
    </ul>
    <p>Push frequency: <b>1-60s</b></p>
  websocket_para_kline_v3: |
    <p>Currently supported intervals:</p>
    <ul>
    <li>1 3 5 15 30</li>
    <li>60 120 240 360 720</li>
    <li>D</li>
    <li>W</li>
    <li>M</li>
    </ul>
    <p>Push frequency: <b>1-60s</b></p>
    <p><b>Topic:</b></p>
    <p><code>kline.{interval}.{symbol}</code></p>
  websocket_aside_klineV2: |
    If <code>confirm</code> is <code>True</code>, the data is the final tick for the interval. Otherwise, it is a snapshot.
  websocketkline: kline
  spot_websocket_tickers_v3: tickers
  websocektBookticker: bookTicker
  websocket_usdc_platform_insurance: At 0:00, 8:00, and 16:00 UTC+0, the insurance fund will be pushed.

  ## liquidation
  websocketliquidation: liquidation
  websocket_query_liqrecords:  |
    <p>Pushes liquidation orders.</p>
    <p>Push frequency: <b>real-time</b></p>

  ## Private Topics
  privatetopics: Private Topics
  ### position
  websocketposition: position
  websocketposition_aside: Note that changes to <code>unrealised_pnl</code> won't trigger new message pushes as it changes constantly with the last traded price. You can calculate the unrealised PNL yourself by referring to <a href ="https://help.bybit.com/hc/en-us/articles/900000404726-P-L-calculations-Inverse-Contracts-">these formulas</a>.
  ### execution
  websocketexecution: execution
  websocket_execution_aside: This topic pushes all executions <i>except</i> <a href="#exec-type-exec_type"><code>Funding</code></a>.
  ### order
  websocketorder: order
  websocketorder_row_comment_timestamp: Timestamp (when the <a href="#order-status-order_status-stop_order_status"><code>order_status</code></a> was <code>New</code>)
  ### stop_order
  websocketstoporder: stop_order
  ### copy_trade_field
  copytrade_field_leverage: In Isolated Margin mode, the value is set by the user.
  copytrade_field_order_status: Copy trade order status
  ### user service
  websocketService: margin mode
  usdc_userService_pushId: Push id
  usdc_userService_serviceType: Service type
  usdc_userService_operationType: Operation type. <code>SELF</code>：manually operated by user; <code>AUTO</code>：detected by system
  usdc_userService_serviceStep: Service step. <code>OPEN</code>; <code>CLOSE</code>
  usdc_userService_serviceStatus: Service status. <code>SUCCESS</code>; <code>FAIL</code>

  # Archive Data
  archivedata: Archive Data
  historicalmarketdata: Historical Market Data
  archive_data_intro: You can get Bybit's <a href="https://public.bybit.com">historical market data here</a>.


  # Error Definitions
  errors: Errors

  # ENUMs Definitions
  enums: Enums Definitions
  ENUMs_para: The following lists enumerator names for the request and response parameters of each endpoint.
  ## Wallet fund type (`wallet_fund_type` / `type`)
  deposit:      ""
  withdraw:     ""
  realisedpnl:  ""
  commission:   ""
  refund:       ""
  prize:        ""
  exchangeOrderWithdraw: ""
  exchangeOrderDeposit:  ""
  returnServiceCash: "- Refund of handling fee bonus"
  insurance: "- Insurance account transfer"
  subMember: "- Parent-child account transfer"
  coupon: "- Coupon interest"
  accountTransfer: "- Account transfer"
  cashBack: "- Cash back"
  ## Withdraw status (`status`)
  toBeConfirmed:  ""
  underReview:    ""
  pending:        "- Pending transfer"
  success:        ""
  cancelByUser:   ""
  reject:         ""
  expire:         ""
  ## Order type (`order_type`)
  limit:  ""
  market: ""
  ## Quantity (`qty`)
  quantity: |
    <ul>
    <li>The maximum qty for an order (<code>max_trading_qty</code>) can be queried with the <a href="#t-querysymbol">Query Symbol endpoint</a>.</li>
    <li>Must be a positive integer
    <li>Must conform to the symbol's <code>qty_step</code>. For example, for the inverse perpetual BTCUSD market:</li>
    <ul>
    <li><code>40</code> - allowed</li>
    <li><code>30.5</code> - not allowed</li>
    </ul>
    </ul>
  quantity_v3: |
    <ul>
    <li>The maximum qty for an order (<code>maxTradingQty</code>) can be queried with the <a href="#t-getsymbols">Get All Symbols</a>.</li>
    <li>Must be a positive integer
    <li>Must conform to the symbol's <code>qty_step</code>. For example, for the inverse perpetual BTCUSD market:</li>
    <ul>
    <li><code>40</code> - allowed</li>
    <li><code>30.5</code> - not allowed</li>
    </ul>
    </ul>
  ## Price (`price`)
  price: |
    <ul>
    <li>Active order<ul>
    <li>Must be an integral multiple of <code>tick_size</code><ul>
    <li>Information about current trading pair (e.g. <code>tick_size</code>) can be queried with the <a href="#t-querysymbol">Query Symbol endpoint</a>.</li>
    <li>Modulo (<code>%</code>) can be used to calculate whether the price will be accepted:<pre class="center-column">
    IF price % tick_size = 0
        // send request
    ELSE
        // do not send request as the price will not be accepted by the system
    </pre></li>
    </ul>
    </li>
    <li>Must be less than the symbol's <code>max_price</code></li>
    <li>If the user has no open position, the order price must be higher than 10% of the last traded price<ul>
    <li>For example, if the last traded price (last price) is <code>10314</code>, the min. order price will be <code>1031.5</code>.</li>
    <li>Pseudocode (assuming the price is a multiple of 0.5):<pre class="center-column">
    IF price > (last_price * 0.1)
        // send request
    ELSE
        // do not send request as the price will not be accepted by the system
    </pre></li>
    </ul>
    </li>
    <li>If the user has an open position, the order price must be better than the liquidation price.<ul>
    <li>For example, if the liquidation price of a long position is <code>5176.5</code>, the min. order price will be <code>5177</code>. For short position, the order price must be less than the liquidation price.</li>
    </ul>
    </li>
    </ul>
    </li>
    <li>Conditional order<ul>
    <li>Must be greater than or equal to <code>1</code></li>
    </ul>
    </li>
    </ul>
  spotv1_Price: |
    <ul>
        <li>Must be an integral multiple of <code>minPricePrecision</code><ul>
        <li>Information about current trading pair (e.g. <code>minPricePrecision</code>) can be queried with the <a href="#t-spot_querysymbol">Query Symbol endpoint</a>.</li>
    </ul>
  spotv3_Price: |
    <ul>
    <li>order</li>
    <ul>
      <li>Must be an integral multiple of <code>minPricePrecision</code></li>
      <li>Information about current trading pair (e.g. <code>minPricePrecision</code>) can be queried with the <a href="#t-getsymbols">Get All Symbols</a>.</li>
    </ul>
    <li>TP/SL order</li>
    <ul>
      <li>The order price of a buy order cannot exceed 110% of the trigger price, and the order price of a sell order cannot be lower than 90% of the trigger price.</li>
    </ul>
    </ul>
  ## Time in force (`time_in_force`)
  goodTillCancel:     ""
  immediateOrCancel:  ""
  fillOrKill:         ""
  postOnly:           ""
  ## Trigger price type (`trigger_by`)
  lastPrice:  ""
  indexPrice: ""
  markPrice:  ""
  ## Order (`order`)
  para_order: This is used for sorting orders/trades in a specified direction.
  desc: ""
  asc:  ""
  ## Order status (`order_status`)
  para_orderStatusGet: |
  #    Filter fetched orders by their order statuses. To filter by multiple statuses, separate with a comma like so: <code>Filled,New</code>
  created1:         "-  order has been accepted by the system but not yet put through the matching engine"
  rejected1:        ""
  new1:             "- order has been placed successfully"
  partiallyFilled1: ""
  filled1:          ""
  cancelled1:       ""
  pendingCancel1:   "- matching engine has received the cancelation request but it may not be canceled successfully"
  ## Stop order status (`stop_order_status`)
  active: "- order has been triggered and the new active order has been successfully placed. Is the final state of a successful conditional order"
  untriggered: "- order yet to be triggered"
  triggered: "- order has been triggered by last traded price"
  cancelled: "- order has been canceled successfully"
  rejected: "- order has been triggered but failed to be placed (e.g. due to insufficient margin)"
  deactivated1: "- order has been canceled by the user before being triggered"
  ## Cancel type (`cancel_type`)
  cancelByReduceOnly:   ""
  cancelByPrepareLiq:   "- canceled due to liquidation"
  cancelByPrepareAdl:   "- canceled due to ADL"
  cancelByAdmin:        ""
  cancelByTpSlTsClear:  "- TP/SL order canceled successfully"
  cancelByPzSideCh:     "- order has been canceled after TP/SL is triggered"
  cancelByCrossSelfMuch:     "- option order does not allow self fill"
  cancelByCrossReachMaxTradeNum:     "- If your order consumes the sum of the qty of 10,000 orders, the leaves qty will be cancelled"
  ## Create type (`create_type`)
  createByUser:                 ""
  createByClosing:              ""
  createByAdminClosing:         ""
  createByStopOrder:            ""
  createByTakeProfit:           ""
  createByStopLoss:             ""
  createByTrailingStop:         ""
  createByLiq:                  "- created by partial liquidation"
  createByAdl_PassThrough:      "- created by ADL"
  createByTakeOver_PassThrough: "- created by liquidation takeover"
  ## Exec type (`exec_type`)
  exec_trade: ""
  exec_funding: ""
  exec_adlTrade: ""
  exec_bustTrade: ""
  exec_settle: ""
  ## Liquidity type (`last_liquidity_ind`)
  addedLiquidity: "- liquidity maker"
  removedLiquidity: "- liquidity Taker"

  ## Tick direction type (`tick_direction`)
  tick_direction: "It indicates price fluctuation relative to the last trade."
  plusTick: "- price rise"
  zeroPlusTick: "- trade occurs at the same price as the previous trade, which occurred at a price higher than that for the trade preceding it "
  minusTick: "- price drop"
  zeroMinusTick: "- trade occurs at the same price as the previous trade, which occurred at a price lower than that for the trade preceding it "

  ## TP/SL mode (`tp_sl_mode`)
  tp_sl_mode: "Take profit/stop loss mode"
  Full: "- Full take profit/stop loss mode (a single TP order and a single SL order can be placed, covering the entire position)"
  Partial: "- Partial take profit/stop loss mode (multiple TP and SL orders can be placed, covering portions of the position)"

  Stop: "- Normal stop order"
  TakeProfit: "- Position take profit order"
  StopLoss: "- Position stop loss order"
  TrailingStop: "- Position trailing stop loss order"
  PartialTakeProfit: "- Position partial take profit order"
  PartialStopLoss: "- Position partial take profit order"

  ## Kline interval (`interval`)
  interval_1: "- 1 minute"
  interval_3: "- 3 minutes"
  interval_5: "- 5 minutes"
  interval_15: "- 15 minutes"
  interval_30: "- 30 minutes"
  interval_60: "- 1 hour"
  interval_120: "- 2 hours"
  interval_240: "- 4 hours"
  interval_360: "- 6 hours"
  interval_720: "- 12 hours"
  interval_D: "- 1 day"
  interval_W: "- 1 week"
  interval_M: "- 1 month"

  ## Date (`start_date`/`end_date`)
  date: |
    Follows the format: yyyy-mm-dd

  ## ETP status (`etpStatus`)
  etpStatus_1: "- ETP can be purchased and redeemed"
  etpStatus_2: "- ETP can be purchased, but not redeemed"
  etpStatus_3: "- ETP can be redeemed, but not purchased"
  etpStatus_4: "- ETP cannot be purchased nor redeemed"

  ## ETP order status (`orderStatus`)
  etpOrderStatus_1: "- Completed"
  etpOrderStatus_2: "- In progress"
  etpOrderStatus_3: "- Failed"

  ## ETP order type (`orderType`)
  etpOrderType_1: "- Purchase"
  etpOrderType_2: "- Redemption"

  ## Transaction-log Type (`type`)
  transfer_in: ""
  transfer_out: ""
  trade: ""
  settlement: ""
  delivery: ""
  liquidation: ""
  insurance_fund: ""
  fee_refund: ""
  interest: ""
  bonusEnum: ""
  currencyBuy: ""
  currencySell: ""

  ## spot tp sl order status (`X`)
  order_new: Untriggered
  order_canceled: ""
  order_filled: Triggered
  order_failed: fail to trigger

  ## option Symbol status
  waiting_online: Waiting to be online (10 mins before online)
  online: ""
  delivering: ""
  offline: ""

  # Error Code
  errors_intro: The Bybit API uses the following HTTP codes and error codes<span>:</span>

  http_200: Request is valid -- Your request is valid
  http_403: Access denied -- You request too many times (refer to the <a href="#t-ipratelimits">IP rate limit</a>)
  http_404: Request path not found
  #spot
  spot_http_200: Request is valid
  spot_http_403: Access denied
  spot_http_404: Request path not found

  # account_asset
  account_asset_http_200: Request is valid
  account_asset_http_403: Access denied
  account_asset_http_404: Request path not found
  account_asset_err_0:    SUCCESS
  account_asset_err_10001: Parameter error
  account_asset_err_10016: service is not available
  account_asset_err_38000: Processing

  account_asset_err_38001: Insufficient available balance
  account_asset_err_38002: Unable to transfer
  account_asset_err_90001: The transfer amount is less than 0
  account_asset_err_90002: The transfer amount accuracy is greater than 8
  account_asset_err_90003: Transfer error, please contact customer service (upper limit of transfer amount exceeded. please refer to <a href="https://help.bybit.com/hc/en-us/articles/4411635457177-Over-the-counter-OTC-Lending">Over the counter (OTC) Lending</a>)
  account_asset_err_90004: Account not found
  account_asset_err_90005: Check balance error
  account_asset_err_90006: Query transfer error
  account_asset_err_90007: Query sub-account transfer error
  account_asset_err_90008: Query transfer ID error
  account_asset_err_90009: Transfer ID already exists
  account_asset_err_90010: The transfer-in account type cannot be used as the transfer-out account type
  account_asset_err_90011: Failed to get the list of subaccounts
  account_asset_err_90012: Query withdrawal record error
  account_asset_err_90013: Query recharge record error
  account_asset_err_90014: Not support subaccounts temporarily
  account_asset_err_90015: This currency cannot be topped up
  account_asset_err_90016: Recharge chain query error
  account_asset_err_90029: Users in the gray period are not on the whitelist
  account_asset_err_90030: The withdrawal address is not in the whitelist
  account_asset_err_90031: User status is abnormal
  account_asset_err_90032: User sensitive operation, withdrawal is prohibited within 24 hours
  account_asset_err_90033: The system is under maintenance
  account_asset_err_90034: Withdrawal of this currency has been closed
  account_asset_err_90035: The withdrawal amount is less than the lower limit of a single withdrawal
  account_asset_err_90036: The withdrawal amount is greater than the upper limit of a single withdrawal
  account_asset_err_90037: Exceeded the upper limit of the platform's withdrawal limit on the day
  account_asset_err_90038: Kyc limit exceeded
  account_asset_err_90039: Spot market makers withdraw excess cash
  account_asset_err_90040: Withdrawal is being processed
  account_asset_err_90041: Spot account does not exist
  account_asset_err_90042: Insufficient available balance in spot account
  account_asset_err_90043: Insufficient available balance in contract account
  account_asset_err_90044: Withdrawal failed
  account_asset_err_90045: The withdrawal record does not exist
  account_asset_err_90046: The withdrawal initiator is inconsistent
  account_asset_err_90047: Hot wallet status cannot be cancelled
  account_asset_err_90048: The withdrawal status does not allow cancellation
  account_asset_err_90049: Failed to cancel withdrawal and add money
  account_asset_err_90050: Blocked login status does not allow withdrawals
  account_asset_err_90051: User withdrawal is blocked
  account_asset_err_90052: Replay request denied

  # account asset v3 error code
  # transfer
  assetV3_err_0: SUCCESS
  assetV3_err_131200: Service error
  assetV3_err_131201: Internal error
  assetV3_err_131202: Invalid memberId
  assetV3_err_131203: Request parameter error
  assetV3_err_131204: Account info error
  assetV3_err_131205: Query transfer error
  assetV3_err_131206: Fail to transfer
  assetV3_err_131207: Account not exist
  assetV3_err_131208: Forbid transfer
  assetV3_err_131209: Get subMember relation error
  assetV3_err_131210: Amount accuracy error
  assetV3_err_131211: fromAccountType can't be the same as toAccountType
  assetV3_err_131212: Insufficient balance
  assetV3_err_131213: TransferLTV check error
  assetV3_err_131214: TransferId exist
  assetV3_err_131215: Amount error
  assetV3_err_131216: Query balance error
  assetV3_err_131217: Risk check error
  # withdraw
  assetV3_err_131001: Service error
  assetV3_err_131002: Parameter error
  assetV3_err_131003: Interal error
  assetV3_err_131004: KYC needed
  assetV3_err_131085: Withdrawal amount is greater than your availale balance (the deplayed withdrawal is triggered)
  assetV3_err_131086: Withdrawal amount exceeds risk limit (the risk limit of margin trade is triggered)
  assetV3_err_131088: Withdrawal amount exceed the KYC limit
  assetV3_err_131089: User sensitive operation, withdrawal is prohibited within 24 hours
  assetV3_err_131090: User withdraw has been banned
  assetV3_err_131091: Blocked login status does not allow withdrawals
  assetV3_err_131092: User status is abnormal
  assetV3_err_131093: The withdrawal address is not in the whitelist
  assetV3_err_131094: UserId is not in the whitelist
  assetV3_err_131095: Withdrawl amount exceeds the 24 hour platform limit
  assetV3_err_131096: Withdraw amount does not satify the lower limit or upper limit
  assetV3_err_131097: Withdrawal of this currency has been closed
  assetV3_err_131098: Withdrawal currently is not availble from new address
  assetV3_err_131099: Hot wallet status can cancel the withdraw
  assetV3_err_131084: Withdraw failed because of Uta Upgrading

  #spot error
  err_1001: Request failed to be processed. Please try again.
  err_1002: Request not authorized. An API key is required and should be included in all requests.
  err_1003: Too many requests. Please use WebSocket for live updates. Current limit is %s requests per minute.
  err_1004: Missing required parameter <code>symbol</code>. Content-Type has been configured to application/json; params in JSON format.
  err_1006: System not responding. Request status unknown. Please contact live support.
  err_1007: Response timeout from backend server. Delivery and request status unknown.
  err_1015: Too many new orders. Please lower request frequency.
  err_1016: Service not available.
  err_1022: Signature for this request is not valid. Check the content-type and try without content-type. If symbol is set to BTC/USDT instead of BTCUSDT this error can ocur. The slash would not be urlencoded before the signature, but it would be after, resulting in mismatching param str.
  err_1032: Parameter format error
  err_1103: An unknown parameter was sent. For POST request - No content-type specified, should change to application/x-www-form-urlencoded or make sure the query string is in the full request URL. For DELETE request, make sure your parameters are in query string format and the query string is in the full request URL. For GET request - Don't set Content-Type to "application/json". "Spot" permission not enabled when creating the API key.


  err_10000: An unknown error occurred while processing the request.
  err_10001: There was a problem with the value passed to the API. For example, if you pass a float, ensure it conforms to the <a href="#t-querysymbol"><code>tick_size</code> and <code>qty_step</code></a> (ie, make sure it does not have too many decimals!).
  err_10002: Request not authorized - an API key is required and should be included in all requests.
  err_10003: Invalid api key
  err_10004: Invalid sign
  err_10005: Permission denied for current apikey. API key was created without the correct permissions (e.g. doesn´t have Order permission, or it's set to read-only)
  err_10006: Too many visits. Refer to the <a href="#t-understandingratelimits">API rate limit</a>. Please use WebSocket for live updates. Current limit is %s requests per minute.
  err_10007: Response timeout from backend server. Delivery and request status unknown.
  err_10010: Request IP mismatch.
  err_10012: DB error
  err_10014: Trading pairs not supported.
  err_10015: Too many new orders. Please lower request frequency.
  err_10016: Service not available.
  err_10017: Request path not found or request method is invalid
  err_10018: Exceeded IP rate limit.

  err_10020: Request not supported.
  err_10021: Timestamp for the request is outside of the recvWindow. The timestamp of this request is 1000 milliseconds ahead of the server time. Please check local time and server time.
  err_10022: Invalid request signature.
  err_11000: Parameter characters not supported.
  err_11001: Too many parameters sent for this endpoint.
  err_11002: Required parameter not sent. Parameter was empty/null or format was incorrect.
  err_11003: Unknown parameter sent.
  err_11004: Not all parameters sent were read.
  err_11005: Empty parameter.
  err_11006: Parameter was sent when no longer required.
  err_11011: Order price exceeded upper limit.
  err_11012: Trading pair does not exist.
  err_11014: TimeInForce parameter sent when not required.
  err_11015: Invalid timeInForce.
  err_11016: Invalid orderType.
  err_11017: Invalid direction.
  err_11018: User-generated order ID was empty.
  err_11019: User-generated order ID was empty.
  err_11020: Invalid interval.
  err_11021: Invalid symbol.
  err_11025: listenKey does not exist.
  err_11027: Query intervals too large.
  err_11028: Invalid parameter combination.
  err_11030: Invalid parameter sent.
  err_11031: Insufficient balance.
  err_11032: Order price exceeded upper limit.
  err_11033: Order price exceeded lower limit.
  err_11034: Order price has too many decimals.
  err_11035: Order quantity exceeded upper limit.
  err_11036: Order quantity exceeded lower limit.
  err_11037: Order quantity has too many decimals.
  err_11038: Order price exceeded limits.
  err_11039: Order has been filled.
  err_11040: Order value exceeded lower limit.


  err_11041: Duplicate clientOrderId.
  err_11042: Order has been canceled.
  err_11043: Order not found.
  err_11044: Order being cancelled. Operation not supported.
  err_11045: Order cannot be canceled.
  err_11046: Order creation timeout.
  err_11047: Order cancellation timeout.
  err_11090: Cancel order has been finished.
  err_11091: Can not cancel order, please try again later.
  err_20010: New order rejected.
  err_20011: Cancelation rejected.
  err_20013: Order does not exist.
  err_20014: Invalid API key format.
  err_20015: Invalid API key or IP.
  err_20016: Trading window not open yet for current pair.
  err_4000: The serialNum is already in use.
  err_4001: Daily purchase limit has been exceeded. Please try again later.
  err_4002: There's a large number of purchase orders. Please try again later.
  err_4003: Insufficient available balance. Please make a deposit and try again.
  err_4004: Daily redemption limit has been exceeded. Please try again later.
  err_4005: There's a large number of redemption orders. Please try again later.
  err_4006: Insufficient available balance. Please make a deposit and try again.
  err_4007: Order not found.
  err_4008: Purchase period hasn't started yet.
  err_4009: Purchase amount has exceeded the upper limit.
  err_4010: You must enable Leveraged Tokens first to start trading. To do so, please head to the PC trading site.
  err_4012: Redemption period hasn't started yet.
  err_4013: Redemption amount has exceeded the upper limit.
  err_4014: Purchase of the LT has been temporarily suspended.
  err_4015: Redemption of the LT has been temporarily suspended.
  err_4016: Invalid format. Please check the length and numeric precision.
  err_4110: Failed to place order<b>:</b> Exceed the maximum position limit of leveraged tokens, the current available limit is XXXX USDT.
  err_10008: uta banned. UTA account cannot request this endpoint, you need to check your account.
  err_10024: Compliance rules triggered. Please complete KYC.
  err_10029: The requested symbol is invalid, which are not in the symbol whitelist.

  # spot v3
  spotV3_err_5019: User-service error
  spotV3_err_5004: Upstream server timeout
  spotV3_err_7001: Grpc request filed type error
  spotV3_err_10003: Invalid api_key
  spotV3_err_10006: Too many visits
  spotV3_err_10001: Params error
  spotV3_err_10002: Invalid request, please check your timestamp and recv_window param
  spotV3_err_10004: Error sign
  spotV3_err_10005: Permission denied
  spotV3_err_33004: api_key expire
  spotV3_err_12940: Connection reset
  spotV3_err_12999: Server Error
  spotV3_err_12800: Invalid request
  spotV3_err_12801: Invalid JSON
  spotV3_err_12802: Invalid event
  spotV3_err_12803: Event required
  spotV3_err_12804: Invalid topic
  spotV3_err_12805: Topic required
  spotV3_err_12806: Params required
  spotV3_err_12807: Period required
  spotV3_err_12808: Invalid period
  spotV3_err_12809: Invalid Symbols
  spotV3_err_12810: Not supported symbols
  spotV3_err_12811: There is no such broker.
  spotV3_err_12812: DumpScale required
  spotV3_err_12813: Invalid exchangeId
  spotV3_err_12814: Param %s should be %s.
  spotV3_err_12815: Symbol required
  spotV3_err_12816: Timeout. Retry later.
  spotV3_err_12817: No business with any exchange.
  spotV3_err_12818: Client disconnected.
  spotV3_err_12819: OrgId required.
  spotV3_err_12820: OrgId must be a number.
  spotV3_err_12821: DumpScale error.
  spotV3_err_12822: Index name error.
  spotV3_err_12823: Parameter error
  spotV3_err_12824: Parameter %s [%s]
  spotV3_err_12825: The number of each symbol request cannot exceed 300
  spotV3_err_12001: Request failed to be processed. Please try again.
  spotV3_err_12007: Response timeout from backend server. Delivery and request status unknown.
  spotV3_err_12014: Trading pairs not supported.
  spotV3_err_12005: Too many new orders. Please lower request frequency.
  spotV3_err_12016: Service not available.
  spotV3_err_12032: Fusing error
  spotV3_err_12114: NETWORK_BUSY
  spotV3_err_12015: UID_NOT_EXIST
  spotV3_err_12011: INNOVATION_BUY_FAILED_BY_QUOTA
  spotV3_err_12010: ETP_BUY_FAILED_BY_QUOTA
  spotV3_err_12012: ETP_NAV_IS_ABNORMAL
  spotV3_err_12017: CROSS_MARGIN_PRE_BUY_QUOTA_FAILED
  spotV3_err_10020: CROSS_MARGIN_PRE_SELL_QUOTA_FAILED
  spotV3_err_12019: Your account has been restricted for trades. If you have any questions, please email us at support@bybit.com
  spotV3_err_12124: Order amount is too big
  spotV3_err_12031: The feature has been suspended
  spotV3_err_12105: Empty parameter.
  spotV3_err_12115: Invalid timeInForce.
  spotV3_err_12116: Invalid orderType.
  spotV3_err_12117: Invalid direction.
  spotV3_err_12121: Invalid symbol.
  spotV3_err_12130: Invalid parameter sent.
  spotV3_err_12131: Insufficient balance
  spotV3_err_12132: Order price exceeded upper limit.
  spotV3_err_12133: Order price exceeded lower limit.
  spotV3_err_12134: Order price has too many decimals.
  spotV3_err_12135: Order quantity exceeded upper limit.
  spotV3_err_12136: Order quantity exceeded lower limit.
  spotV3_err_12137: Order quantity has too many decimals.
  spotV3_err_12138: Order price exceeded limits.
  spotV3_err_12139: Order has been filled.
  spotV3_err_12140: Order value exceeded lower limit.
  spotV3_err_12141: Duplicate clientOrderId.
  spotV3_err_12142: Order has been canceled.
  spotV3_err_12143: Order not found.
  spotV3_err_12144: Order being cancelled. Operation not supported.
  spotV3_err_12145: Order cannot be canceled.
  spotV3_err_12146: Order creation timeout.
  spotV3_err_12147: Order cancellation timeout.
  spotV3_err_12148: Market order amount decimal too long
  spotV3_err_12149: Create order failed
  spotV3_err_12150: Cancel order failed
  spotV3_err_12151: The trading pair is not open yet
  spotV3_err_12156: Order quantity invalid
  spotV3_err_12157: The trading pair is not available for api trading
  spotV3_err_12158: create limit maker order failed
  spotV3_err_12159: Market Order is not supported within the first %s minutes of newly launched pairs due to risk control.
  spotV3_err_12190: Cancel order has been finished.
  spotV3_err_12191: Can not cancel order, please try again later.
  spotV3_err_12192: Order price cannot be higher than %s .
  spotV3_err_12193: Buy order price cannot be higher than %s.
  spotV3_err_12194: Sell order price cannot be lower than %s.
  spotV3_err_12195: Please note that your order may not be filled
  spotV3_err_12196: Please note that your order may not be filled
  spotV3_err_12197: Your order quantity to buy is too large. The filled price may deviate significantly from the market price. Please try again
  spotV3_err_12198: Your order quantity to sell is too large. The filled price may deviate significantly from the market price. Please try again
  spotV3_err_12199: Your order quantity to buy is too large. The filled price may deviate significantly from the nav. Please try again.
  spotV3_err_12200: Your order quantity to sell is too large. The filled price may deviate significantly from the nav. Please try again.
  spotV3_err_12201: Invalid orderCategory parameter
  spotV3_err_12202: Please enter the TP/SL price
  spotV3_err_12203: trigger price cannot be higher than 110% price
  spotV3_err_12204: trigger price cannot be lower than 90% of qty
  spotV3_err_12205: CROSS_MARGIN_USER_NOT_ALLOW
  spotV3_err_12206: Stop_limit Order is not supported within the first 5 minutes of newly launched pairs
  spotV3_err_12210: New order rejected.
  spotV3_err_12211: Cancelation rejected.
  spotV3_err_12213: Order does not exist.
  spotV3_err_12217: Only LIMIT-MAKER order is supported for the current pair.
  spotV3_err_12218: The LIMIT-MAKER order is rejected due to invalid price.
  spotV3_err_12221: This coin does not exist
  spotV3_err_12222: Too many requests in this time frame
  spotV3_err_12223: Your Spot Account with Institutional Lending triggers an alert or liquidation
  spotV3_err_12224: You're not a user of the Innovation Zone
  spotV3_err_12225: You've failed to check the Risk Alert for Leveraged Tokens
  spotV3_err_12226: Your Spot Account for Margin Trading is being liquidated
  spotV3_err_12227: This feature is not supported
  spotV3_err_12228: The purchase amount of each order exceeds the estimated maximum purchase amount
  spotV3_err_12229: The sell quantity per order exceeds the estimated maximum sell quantity
  spotV3_err_12230: The reserved quota for Spot Margin Trading does not meet the LTV ratio requirement
  spotV3_err_12231: Users with Spot Margin Trading are not allowed to perform Block Trades
  spotV3_err_12232: Users with Institutional Lending are not allowed to perform Block Trades
  spotV3_err_12233: Users with Leverage Tokens are not allowed to perform Block Trades
  spotV3_err_12234: System Error

  # Cross Margin Trading
  err_6001: Query user repay history error
  err_6002: Query user account info error
  err_6003: Query user loan history error
  err_6004: Query order history start time exceeds end time
  err_6005: Failed to borrow
  err_6006: Repayment Failed
  err_6007: User not found
  err_6008: You haven't enabled Cross Margin Trading yet. To do so, please head to the PC trading site
  err_6009: You haven't enabled Cross Margin Trading yet. To do so, please head to the PC trading site or the Bybit app
  err_6010: Failed to locate the coins to borrow
  err_6011: Cross Margin Trading not yet supported by the selected coin
  err_6012: Pair not available
  err_6013: Cross Margin Trading not yet supported by the selected pair
  err_6014: Repeated repayment requests
  err_6015: Insufficient available balance
  err_6016: No repayment required
  err_6017: Repayment amount has exceeded the total liability
  err_6018: Settlement in progress
  err_6019: Liquidation in progress
  err_6020: Failed to locate repayment history
  err_6021: Repeated borrowing requests
  err_6022: Coins to borrow not generally available yet
  err_6023: Pair to borrow not generally available yet
  err_6024: Invalid user status
  err_6025: Amount to borrow cannot be lower than the min. amount to borrow (per transaction)
  err_6026: Amount to borrow cannot be larger than the max. amount to borrow (per transaction)
  err_6027: Amount to borrow cannot be higher than the max. amount to borrow per user
  err_6028: Amount to borrow has exceeded Bybit's max. amount to borrow
  err_6029: Amount to borrow has exceeded the user's estimated max. amount to borrow
  err_6030: Query user loan info error
  err_6031: Loan precision has exceeded the maximum precision
  err_6032: Number of decimals has exceeded the maximum precision

  # v3 Cross Margin Trading
  cm_error_12601: Query user repay history error
  cm_error_12602: Query user account info error
  cm_error_12603: Query user loan history error
  cm_error_12604: Query order history start time exceeds end time
  cm_error_12605: Failed to borrow
  cm_error_12606: Repayment Failed
  cm_error_12607: User not found
  cm_error_12608: You haven't enabled Cross Margin Trading yet. To do so
  cm_error_12609: You haven't enabled Cross Margin Trading yet. To do so
  cm_error_12610: Failed to locate the coins to borrow
  cm_error_12611: Cross Margin Trading not yet supported by the selected coin
  cm_error_12612: Pair not available
  cm_error_12613: Cross Margin Trading not yet supported by the selected pair
  cm_error_12614: Repeated repayment requests
  cm_error_12615: Insufficient available balance
  cm_error_12616: No repayment required
  cm_error_12617: Repayment amount has exceeded the total liability
  cm_error_12618: Settlement in progress
  cm_error_12619: Liquidation in progress
  cm_error_12620: Failed to locate repayment history
  cm_error_12621: Repeated borrowing requests
  cm_error_12622: Coins to borrow not generally available yet
  cm_error_12623: Pair to borrow not generally available yet
  cm_error_12624: Invalid user status
  cm_error_12625: Amount to borrow cannot be lower than the min. amount to borrow (per transaction)
  cm_error_12626: Amount to borrow cannot be larger than the max. amount to borrow (per transaction)
  cm_error_12627: Amount to borrow cannot be higher than the max. amount to borrow per user
  cm_error_12628: Amount to borrow has exceeded Bybit's max. amount to borrow
  cm_error_12629: Amount to borrow has exceeded the user's estimated max. amount to borrow
  cm_error_12630: Query user loan info error
  cm_error_12631: Number of decimals has exceeded the maximum precision
  cm_error_12632: Number of decimals has exceeded the maximum precision

  # v3 Leveraged Token
  lt_error_12400: The serialNum is already in use.
  lt_error_12401: Daily purchase limit has been exceeded. Please try again later.
  lt_error_12402: There's a large number of purchase orders. Please try again later.
  lt_error_12403: Insufficient available balance. Please make a deposit and try again.
  lt_error_12404: Daily redemption limit has been exceeded. Please try again later.
  lt_error_12405: There's a large number of redemption orders. Please try again later.
  lt_error_12406: Insufficient available balance. Please make a deposit and try again.
  lt_error_12407: Order not found.
  lt_error_12408: Purchase period hasn't started yet.
  lt_error_12409: Purchase amount has exceeded the upper limit.
  lt_error_12410: You haven't passed the quiz yet! To purchase and/or redeem an LT, please complete the quiz first.
  lt_error_12412: Redemption period hasn't started yet.
  lt_error_12413: Redemption amount has exceeded the upper limit.
  lt_error_12414: Purchase of the LT has been temporarily suspended.
  lt_error_12415: Redemption of the LT has been temporarily suspended.
  lt_error_12416: Invalid format. Please check the length and numeric precision.
  lt_error_12417: Failed to place order：Exceed the maximum position limit of leveraged tokens

  err_20001: Order does not exist.
  err_20003: Missing parameter <code>side</code>
  err_20004: Invalid parameter <code>side</code>
  err_20005: Missing parameter <code>symbol</code>
  err_20006: Invalid parameter <code>symbol</code>
  err_20007: Missing parameter <code>order_type</code>
  err_20008: Invalid parameter <code>order_type</code>
  err_20009: Missing parameter <code>qty</code>
  err_20012: <code>qty</code> must be greater than zero and less than 1 million
  err_20017: Missing parameter <code>order_id</code>
  err_20018: Invalid date format
  err_20019: Missing parameter <code>stop_px</code>
  err_20020: Missing parameter <code>base_price</code>
  err_20021: Missing parameter <code>stop_order_id</code>
  err_20022: Missing parameter <code>leverage</code>

  err_20023: Leverage must be a number
  err_20031: Leverage must be greater than zero
  err_20070: Missing parameter <code>margin</code>
  err_20071: <code>margin</code> must be greater than zero
  err_20084: <code>order_id</code> or <code>order_link_id</code> is required

  err_20094: <code>order_link_id</code> is not unique.
  err_30002: Exit order already exists.
  err_30003: <code>qty</code> must be higher than the minimum allowed.
  err_30004: <code>qty</code> must be higher than the minimum allowed. The number of contracts exceeds maximum limit allowed. Order qty should be less than 1 million per order.
  err_30005: Order price is out of permissible range.
  err_30006: No <code>last_price</code>.
  err_30007: Order price is out of permissible range.
  err_30008: Invalid <code>order_type</code>.
  err_30009: No position found.
  err_30010: Insufficient wallet balance.
  err_30011: Operation not allowed as position is undergoing liquidation
  err_30012: Operation not allowed as position is undergoing ADL
  err_30013: Position is in liq or adl status
  err_30014: Invalid closing order, qty should not be greater than size.
  err_30015: Invalid closing order, side should be the opposite.
  err_30016: TP and SL must be cancelled before closing the position.
  err_30017: Estimated fill price cannot be lower than current Buy liq_price.
  err_30018: Estimated fill price cannot be higher than current Sell liq_price.
  err_30019: Cannot attach TP/SL params for non-zero position when placing non-opening position order.
  err_30020: Position already has TP/SL params.
  err_30021: Cannot afford estimated position_margin.
  err_30022: Estimated buy liq_price cannot be higher than current mark_price.
  err_30023: Estimated sell liq_price cannot be lower than current mark_price.
  err_30024: Cannot set TP/SL/TS for zero-position
  err_30025: Trigger price should bigger than 10% of last price.
  err_30026: Price is too high.
  err_30027: Price set for Take profit should be higher than Last Traded Price.
  err_30028: Price set for Stop Loss should be between Liquidation price and Last Traded Price.
  err_30029: Price set for Stop Loss should be between Last Traded Price and Liquidation Price.
  err_30030: Price set for Take Profit should be lower than Last Traded Price.
  err_30031: Insufficient available balance for order cost.
  err_30032: Order has been filled or cancelled.
  err_30033: The number of stop orders exceeds maximum limit allowed.
  err_30034: No stop order found.
  err_30035: Too fast to cancel, try it later.
  err_30036: The expected position value after order execution exceeds the current risk limit
  err_30037: Order already cancelled
  err_30038: No mark_price.
  err_30039: Applied leverage has exceeded the permitted range.
  err_30040: Any adjustments made will trigger immediate liquidation.

  err_30041: No position found.
  err_30042: Insufficient wallet balance.
  err_30043: Operation not allowed as position is undergoing liquidation.
  err_30044: Operation not allowed as position is undergoing ADL.
  err_30045: Operation not allowed as position is not in normal status.
  err_30046: There are multiple untriggered stop orders.
  err_30047: Inconsistent p:o.
  err_30048: Applied leverage has exceeded the permitted range.
  err_30049: Insufficient available balance.
  err_30050: Any adjustments made will trigger immediate liquidation!
  err_30051: Due to risk limit, cannot adjust leverage.
  err_30052: Leverage cannot be less than 1x.
  err_30053: max_affordable_position_margin <= 0, position:%s
  err_30054: fixed_new_position_margin is invalid.
  err_30055: Available Balance is not enough to add margin.
  err_30056: The position is in cross_margin.
  err_30057: Requested quantity of contracts exceeds risk limit, please adjust your risk limit level before trying again.
  err_30063: Reduce-only rule not satisfied
  err_30066: Set auto add margin fail.
  err_30067: Insufficient available balance.
  err_30068: Exit value must be positive.
  err_30073: Number of active orders is greater than 500.
  err_30074: Can't create the stop order, because you expect the order will be triggered when the <code>LastPrice</code>(or <code>IndexPrice</code>,  <code>MarkPrice</code>, determined by <code>trigger_by</code>) is raising to <code>stop_px</code>, but the <code>LastPrice</code>(or <code>IndexPrice</code>,  <code>MarkPrice</code>) is already equal to or greater than <code>stop_px</code>, please adjust <code>base_price</code> or <code>stop_px</code>
  err_30075: Can't create the stop order, because you expect the order will be triggered when the <code>LastPrice</code>(or <code>IndexPrice</code>,  <code>MarkPrice</code>, determined by <code>trigger_by</code>) is falling to <code>stop_px</code>, but the <code>LastPrice</code>(or <code>IndexPrice</code>,  <code>MarkPrice</code>) is already equal to or less than <code>stop_px</code>, please adjust <code>base_price</code> or <code>stop_px</code>
  err_30076: Replace params invalid. Order not modified.
  err_30077: Submission of order will result in the breach of user's limit according to open interest.
  err_30078: Contracts not in trading status
  err_30079: The position is about to trigger a liquidation
  err_30080: Price cannot be lower than current Buy liq_price
  err_30081: Price cannot be greater than current sell liq_price
  err_30082: Position exists No switching of position mode allowed
  err_30083: No change in position pattern
  err_30084: No changes to the full position-by-position model
  err_30085: Margin unchanged
  err_30086: With a commissioned order, switching position mode is not allowed
  err_30087: Symbol does not support two-way open positions
  err_30088: Symbol does not exist
  err_30089: Duplicate order number
  err_30090: Risk limit info does not exist
  err_30091: Illegal orders (meaning that the order os|cs is not legal in various scenarios)
  err_30092: No position is not allowed to set margin
  err_30093: No net position
  err_30094: Withdrawal of an order before a liquidation is not concluded
  err_30095: Full positions are not allowed to modify leverage


  err_31003: User account banned
  err_32006: The available balance is not sufficient to cover the handling fee.
  err_32008: Insufficient available margin.
  err_32009: Any adjustments made will trigger immediate liquidation.
  err_32010: Risk limit cannot be adjusted due to insufficient available margin.
  err_32011: Risk limit cannot be adjusted as the current/expected position value held exceeds the revised risk limit.

  err_33004: apikey already expired

  err_34010: Wallet Balance is less than zero.
  err_34015: Cannot set new leverage as it is equal to the previous leverage.
  err_34017: Current leverage is less than 1X
  err_34018: Cannot set leverage lower than 1X
  err_34019: Cannot set leverage greater than maxLeverage.
  err_34020: Cannot set leverage which is same to the previous leverage.
  err_34021: Cannot cancel occ_calc_data, the data is wrong.
  err_34022: Cannot set leverage which will cause available balance less than 0.
  err_34023: The request was canceled because the origin request has been handled.
  err_34024: The request does not include add margin data.
  err_34025: Increase in leverage has failed.
  err_34026: The new limit is equal to the old limit (no change).
  err_34027: Cannot adjust leverage.
  err_34028: ReCalc Funding Fee Failed.
  err_34030: positionInfo not sync with current exec_rpt.
  err_34033: Realized PNL already rotated.
  err_34032: PositionSeq not match on Withdraw.
  err_34035: Add margin not modified.
  err_34036: Set leverage not modified.
  err_34037: Set custom fee rate not modified.
  err_34038: Update deleverage indicator not modified.
  err_34039: Update position status not modified.
  err_34040: Set TP/SL/TS not modified.

  err_35014: <a href="https://www.bybit.com/en-US/help-center/HelpCenterKnowledge/bybitHC_Article?language=en_US&id=000001086">Open interest</code> exceeded.</a>

  err_37001: Both side positions tp_sl_mode is equal.
  err_37002: Same tp_sl_mode.
  err_37003: This position has at least one stop-link order and cannot switch between stop-loss and take-profit modes.
  err_37004: This position has at least one stop-loss link order and cannot switch between stop-loss and take-profit modes
  err_37005: This position has at least one trailing stop or trailing stop link order and cannot be switched to take profit and stop loss mode
  err_37006: Conditional or limit orders carry a take profit and stop loss parameter
  err_37007: Insufficient number of positions left to set Stop Loss and Take Profit
  err_37008: Active orders are not allowed to modify the price and quantity when they also modify the trigger price
  err_37009: Activity orders are not allowed to modify the stop-loss and take-profit settings if the order is partially filled
  err_37010: In Full Take Profit Stop Loss mode, it is not allowed to modify the Stop Profit Stop Loss size
  err_37011: In partial SL mode, SL is set to more than 20. Set SL/TP exceeds the limit oldTpNum+oldStNum+newNum=(2 the num is tp+sl)
  err_37012: Stop loss price needs to be greater than base price.
  err_37013: Stop loss price needs to be less than base price.

  err_38101: Replacement of order will result in the breach of user's limit according to open interest.
  err_39449: This account is neither a copy trading leader or a copy trading follower.
  err_90063: In the progress of liquidation
  err_90066: In the reconciliation
  err_90067: Reconciliation failed
  err_90016: Rejected by risk control. It may cause liquidation after the transfer.
  err_90015: Insufficient balance

  # copy trade new error code
  cptd_err_131200: server err
  cptd_err_131201: biz err
  cptd_err_131212: user insufficient balance
  cptd_err_131217: risk check err
  cptd_err_131203: request parameter err
  cptd_err_131204: account info err
  cptd_err_131215: amount err
  cptd_err_131216: query balance error
  cptd_err_131218: unify transfer out risk，user's positions are currently under forced liquidation
  cptd_err_131219: unify transfer out risk，transfer out waring
  cptd_err_131220: unify transfer out risk，transfer out interest-free-load-limit waring
  cptd_err_131221: unify transfer out risk，transfer out waring
  cptd_err_131222: unify transfer out risk，reconciliation check fail
  cptd_err_131223: unify transfer out risk，refused
  cptd_err_131224: unify transfer out risk，balance not enough
  cptd_err_131214: transferId exist
  cptd_err_131225: unsupported unify state
  cptd_err_131206: cannot be transfer

  # v3 shared errors
  v3_err_10001: params error
  v3_err_10002: Invalid request, please check your timestamp and recv_window param
  v3_err_10003: Invalid api_key
  v3_err_10004: Error sign
  v3_err_10005: Permission denied
  v3_err_10006: Too many visits
  v3_err_10008: User had been banned
  v3_err_10009: IP had been banned
  v3_err_10010: unmatched IP
  v3_err_10014: Request is duplicate
  v3_err_10016: Server Error
  v3_err_10018: Out of frequency limit of IP
  v3_err_10027: Trading Banned

  # Unifed margin & contract v3 shares the same error msg but error code
  ## param verification
  v3_err_110001: Order does not exist
  ## trade
  v3_err_110003: Order price is out of permissible range
  v3_err_110004: Insufficient wallet balance
  v3_err_110005: position status
  v3_err_110006: cannot afford estimated position_margin
  v3_err_110007: Insufficient available balance
  v3_err_110008: Order has been finished or canceled
  v3_err_110009: The number of stop orders exceeds maximum limit allowed
  v3_err_110010: Order already cancelled
  v3_err_110011: Any adjustments made will trigger immediate liquidation
  v3_err_110012: Available balance not enough
  v3_err_110013: Due to risk limit, cannot set leverage
  v3_err_110014: Available balance not enough to add margin
  v3_err_110015: the position is in cross_margin
  v3_err_110016: Requested quantity of contracts exceeds risk limit, please adjust your risk limit level before trying again
  v3_err_110017: Reduce-only rule not satisfied
  v3_err_110018: userId illegal
  v3_err_110019: orderId illegal
  v3_err_110020: number of active orders greater than 500
  v3_err_110021: Open Interest exceeded
  v3_err_110022: qty has been limited, cannot modify the order to add qty
  v3_err_110023: This contract only supports position reduction operation, please contact customer service for details
  v3_err_110024: You have an existing position, so position mode cannot be switched
  v3_err_110025: Position mode is not modified
  v3_err_110026: Cross/isolated margin mode is not modified
  v3_err_110027: Margin is not modified
  v3_err_110028: Open orders exist, so you cannot change position mode
  v3_err_110029: Hedge mode is not available for this symbol
  v3_err_110030: Duplicate orderId
  v3_err_110031: risk limit info does not exists
  v3_err_110032: Illegal order
  v3_err_110033: Margin cannot be set without open position
  v3_err_110034: There is no net position
  v3_err_110035: Cancel order is not completed before liquidation
  v3_err_110036: Cross margin mode is not allowed to change leverage
  v3_err_110037: User setting list does not have this symbol
  v3_err_110038: Portfolio margin mode is not allowed to change leverage
  v3_err_110039: Maintain margin rate is too high, which may trigger liquidation
  v3_err_110040: Order will trigger forced liquidation, please resubmit the order
  v3_err_110041: Skip liquidation is not allowed when a position or maker order exists
  v3_err_110042: Pre-delivery status can only reduce positions
  v3_err_110043: Set leverage not modified
  ## wallet
  v3_err_110044: Insufficient available margin
  v3_err_110045: Insufficient wallet balance
  v3_err_110046: Any adjustments made will trigger immediate liquidation
  v3_err_110047: Risk limit cannot be adjusted due to insufficient available margin
  v3_err_110048: Risk limit cannot be adjusted as the current/expected position value held exceeds the revised risk limit
  v3_err_110049: Tick notes can only be numbers
  v3_err_110050: Coin is not in the range of selected
  ## market order price error
  v3_err_110051: The user's available balance cannot cover the lowest price of the current market
  v3_err_110052: User's available balance is insufficient to set a price
  v3_err_110053: The user's available balance cannot cover the current market price and upper limit price
  ## partial TP/SL error
  v3_err_110054: This position has at least one take profit link order, so the take profit and stop loss mode cannot be switched
  v3_err_110055: This position has at least one stop loss link order, so the take profit and stop loss mode cannot be switched
  v3_err_110056: This position has at least one trailing stop link order, so the take profit and stop loss mode cannot be switched
  v3_err_110057: Conditional order or limit order contains TP/SL related params
  v3_err_110058: Insufficient number of remaining position size to set take profit and stop loss
  v3_err_110059: In the case of partial filled of the open order, it is not allowed to modify the take profit and stop loss settings of the open order
  v3_err_110060: Under full TP/SL mode, it is not allowed to modify TP/SL
  v3_err_110061: Under partial TP/SL mode, TP/SL set more than 20
  v3_err_110062: Institution MMP profile not found.
  v3_err_110063: Settlement in progress! {{key0}} not available for trades.
  v3_err_110064: The number of contracts modified cannot be less than or equal to the filled quantity
  v3_err_110065: MMP hasn't yet been enabled for your account. Please contact your BD manager.
  v3_err_110066: No trading is allowed at the current time
  v3_err_110067: unified account is not support
  v3_err_110068: Leveraged user trading is not allowed
  v3_err_110069: Do not allow OTC lending users to trade
  v3_err_110070: ETP symbols are not allowed to be traded
  v3_err_110073: Set margin mode failed

  # Misc.
  misc_row_comment_orderLinkIdNotOrderId: Unique user-set order ID
  row_comment_orderLinkId_v3_post: Unique user-set order ID. <b>Required</b> if not passing <code>orderId</code>
  misc_row_comment_orderLinkIdNotStopOrderId: Unique user-set order ID. <b>Required</b> if not passing <code>stop_order_id</code>
  row_comment_order_link_id_replace: Unique user-set order ID. <b>Required</b> if not passing <code>order_id</code>
  row_comment_order_id_replace: Order ID. <b>Required</b> if not passing <code>order_link_id</code>
  row_comment_orderLinkId_replace: Unique user-set order ID. <b>Required</b> if not passing <code>orderId</code>
  row_comment_orderId_replace: Order ID. <b>Required</b> if not passing <code>orderLinkId</code>
  misc_row_comment_orderIdNotOrderLinkId: Order ID
  row_comment_orderId_v3_post: Order ID. <b>Required</b> if not passing <code>orderLinkId</code>
  misc_row_comment_orderLinkIdNotOrderId_spot: Unique user-set order ID. <b>Required</b> if not passing <code>orderId</code>
  misc_row_comment_orderIdNotOrderLinkId_spot: Order ID. <b>Required</b> if not passing <code>orderLinkId</code>

  misc_row_comment_symbolNotOrderId: Contract type. <b>Required</b>

  default: Default
  # fix problem of nested common subheadings
  httprequest1: HTTP Request
  requestparameters1: Request Parameters
  httprequest_api_data: HTTP Request
  requestparameters_api_data: Request Parameters
  httprequest_wallet: HTTP Request
  requestparameters_wallet: Request Parameters

  ## LinearQuantity (`qty`)
  linear_quantity:
    <ul>
    <li><code>BTCUSDT</code> - Maximum quantity of 100 for opening; Maximum quantity of 100 for closing</li>
    <li><code>ETHUSDT</code> - Maximum quantity of 1000 for opening; Maximum quantity of 1000 for closing</li>
    <li><code>LINKUSDT</code> - Maximum quantity of 10000 for opening; Maximum quantity of 10000 for closing</li>
    <li><code>LTCUSDT</code> - Maximum quantity of 2000 for opening; Maximum quantity of 2000 for closing</li>
    <li><code>XTZUSDT</code> - Maximum quantity of 20000 for opening; Maximum quantity of 20000 for closing</li>
    <li><code>BCHUSDT</code> - Maximum quantity of 600 for opening; Maximum quantity of 600 for closing</li>
    <li><code>ADAUSDT</code> - Maximum quantity of 24000 for opening; Maximum quantity of 24000 for closing</li>
    <li><code>DOTUSDT</code> - Maximum quantity of 15000 for opening; Maximum quantity of 15000 for closing</li>
    <li><code>UNIUSDT</code> - Maximum quantity of 10000 for opening; Maximum quantity of 10000 for closing</li>
    <li><code>XRPUSDT</code> - Maximum quantity of 1000000 for opening; Maximum quantity of 1000000 for closing</li>
    <li><code>XEMUSDT</code> - Maximum quantity of 250000 for opening; Maximum quantity of 250000 for closing</li>
    <li><code>SUSHIUSDT</code> - Maximum quantity of 10000 for opening; Maximum quantity of 10000 for closing</li>
    <li><code>AAVEUSDT</code> - Maximum quantity of 500 for opening; Maximum quantity of 500 for closing</li>
    <li><code>DOGEUSDT</code> - Maximum quantity of 200000 for opening; Maximum quantity of 200000 for closing</li>
    <li><code>MATICUSDT</code> - Maximum quantity of 70000 for opening; Maximum quantity of 70000 for closing</li>
    <li><code>EOSUSDT</code> - Maximum quantity of 50000 for opening; Maximum quantity of 50000 for closing</li>
    <li><code>ETCUSDT</code> - Maximum quantity of 2000 for opening; Maximum quantity of 2000 for closing</li>
    <li><code>BNBUSDT</code> - Maximum quantity of 1500 for opening; Maximum quantity of 1500 for closing</li>
    <li><code>FILUSDT</code> - Maximum quantity of 2000 for opening; Maximum quantity of 2000 for closing</li>
    <li><code>SOLUSDT</code> - Maximum quantity of 3000 for opening; Maximum quantity of 3000 for closing</li>
    <ul>
    </ul>
    </li>
    </ul>
  ## LinearPrice (`price`)
  linear_price:
    <ul>
    <li>Active order<ul>
    <li>Must be an increment of that market&#39;s <code>tick_size</code><ul>
    <li>Current symbol information (like tick sizes) can be found with the <a href="#t-querysymbol">Query Symbol endpoint</a>.</li>
    <li>Use modulo (<code>%</code>) to calculate whether or not a price will be accepted, like so:<pre class="center-column">
    IF price % tick_size = 0
    // send request
    ELSE
    // do not send request as the price will not be accepted by the system
    </pre></li>
    </ul>
    </li>
    <li>Must be less than 1 million (<code>1000000</code>)</li>
    <li>If the user has no open position then the price must be greater than 10% of the market price<ul>
    <li>For example, if the current market price (last price) is <code>10314</code>, then the absolute minimum the price may be is <code>1031.5</code>. It may not be <code>1031</code> or below.</li>
    <li>In pseudocode (assuming the price is an increment of 0.5):<pre class="center-column">
    IF price > (last_price * 0.1)
    // send request
    ELSE
    // do not send request as the price will not be accepted by the system
    </pre></li>
    </ul>
    </li>
    <li>If the user holds a position, the order price must be better than the liquidation price.<ul>
    <li>For example, if the liquidation price of an open long position is <code>5176.5</code> then the price may be a minimum of <code>5177</code>. In the case of a short position the price must be less than the liquidation price.</li>
    </ul>
    </li>
    </ul>
    </li>
    </ul>
    </li>
    </ul>


  err_130001: position_idx invalid; check your position mode
  err_130002: wallet is nil
  err_130003: the pz status is not normal
  err_130004: Order number is out of permissible range
  err_130005: Order price is out of permissible range
  err_130006: order qty is out of permissible range
  err_130007: Order price is out of permissible range
  err_130008: order_type invalid
  err_130009: The number of contracts below min limit allowed
  err_130010: order not exists or Too late to operate
  err_130011: Operation not allowed as position is undergoing liquidation
  err_130012: Operation not allowed as position is undergoing ADL
  err_130013: stop_order trail value invalid
  err_130014: stop_order trigger price invalid
  err_130015: stop_order expected_direction or base_price invalid
  err_130016: invalid stop_order_type, cannot replace price
  err_130017: invalid stop_order_type, cannot replace qty
  err_130018: invalid trail_value
  err_130019: invalid stop_order_type, cannot replace trigger_price
  err_130020: invalid stop_order_type, cannot replace trail_value
  err_130021: order cost not available
  err_130024: cannot set tp_sl_ts for zero position
  err_130025: below < 10% of base price
  err_130026: the price is too high
  err_130027: the price set for Buy position should be higher than base_price
  err_130028: the price set for Sell position should be between base_price and liq_price
  err_130029: the price set for Buy position should be between liq_price and base_price
  err_130030: the price set for Sell position should be lower than base_price
  err_130032: invalid order_status, cannot cancel or execute trigger
  err_130033: number of stop order >= 10
  err_130034: stop_order cannot replace
  err_130035: Too freq to cancel, Try it later
  err_130037: Order already cancelled
  err_130040: position will be liq
  err_130041: AvailableBalanceE8 less than 0
  err_130049: available balance not enough
  err_130050: Any adjustments made will trigger liq
  err_130051: cannot set leverage, due to risk limit
  err_130052: cannot set leverage, below the lower limit
  err_130056: the position is in cross_margin
  err_130057: the position size is 0
  err_130058: can not set margin less than minPositionCost
  err_130059: can not set pz open limit more than symbol limit
  err_130060: autoAddMargin not changed
  err_130061: not change fee, invalid req
  err_130062: can not set pz open limit less than current buy pz value
  err_130063: can not set pz open limit less than current sell pz value
  err_130064: just support usdt
  err_130074: expect Rising, trigger_price <= current
  err_130075: expect Falling, trigger_price >= current
  err_130076: replace params invalid
  err_130077: the deposit req has handled
  err_130078: the withdraw req has handled
  err_130079: the rotate req has handled
  err_130101: unknown request for create order
  err_130102: unknown request for cancel order
  err_130103: unknown request for cancelAll
  err_130104: unknown request for LiqExecuteReq, req param not match liqExecuteReq
  err_130105: unknown request for pre create order
  err_130106: unknown req for query order
  err_130107: unmatch request for triggeredToActiveImpl
  err_130108: unknown request for addMargin
  err_130109: unknown request for calculatePositionPnl
  err_130110: unknown request for qryAssetImpl
  err_130111: unknown request for query_position_list
  err_130112: unknown request for setAutoAddMargin
  err_130113: unknown request for setFeeRate
  err_130114: unknown request for setLeverage
  err_130115: unknown request for setMargin
  err_130116: unknown request for setOpenLimit
  err_130117: unknown request for setTpSlTs
  err_130118: unknown request for settleFundingFeeReq
  err_130119: unknown request for setPositionMode
  err_130120: unknown request for walletDeposit
  err_130121: unknown request for walletWithDraw
  err_130122: unknown request for rotateRealisedPnl
  err_130123: unknown request for AdlExecute
  err_130124: unknown request for AdlCleanReq
  err_130125: No change made for TP/SL price
  err_130126: No orders
  err_130023: Will be triggered Liq after order is completed
  err_130127: Take Profit, Stop Loss and Trailing Stop Loss are not modified
  err_130137: Please check to see if your existing position and open orders (together, your <code>pz_value</code>) will exceed your risk limit (<code>risk_limit</code>). You can change your risk limit with the <a href="#t-setrisklimit">Set Risk limit endpoint</a>.
  err_130145: Close order side is large than position's leaving qty
  err_130149: Order creation successful but SL/TP setting failed
  err_130150: Please try again later.
  err_130151: At least one take profit order in the mode, Cannot be switched
  err_130152: At least one stop loss order in the mode, Cannot be switched
  err_130153: Switching failed. Please cancel the current SL/TP setting
  err_130154: Switching failed. Please cancel the SL/TP setting of active orders
  err_130155: Insufficient quantity required to set TP/SL
  err_130156: Replacing active order price and qty simultaneously is not allowed
  err_130157: Amendment failed. SL/TP price cannot be amended as order is partially filled
  err_130158: SL/TP price cannot be amended under 'Full' position mode
  err_130159: Max SL/TP orders under 'Partial' mode is 20
  err_134026: Risk limit has not been changed.
  err_132011: Current position size exceeds risk limit. Risk limit adjustment failed.
  err_130090: Risk limit is invalid.



  ### Linear Cancel Active Order
  linear_row_comment_qty: Order quantity in cryptocurrency
  linear_row_comment_reduceOnly: <a href="https://help.bybit.com/hc/en-us/articles/360039260574-What-is-a-reduce-only-order-"> What is a reduce-only order?</a> True means your position can only reduce in size if this order is triggered. When <code>reduce_only</code> is true, take profit/stop loss cannot be set
  linear_row_comment_closeOnTrigger: <a href="https://help.bybit.com/hc/en-us/articles/360039260534-What-is-a-close-on-trigger-Order-">  What is a close on trigger order?</a> For a closing order. It can only reduce your position, not increase it. If the account has insufficient available balance when the closing order is triggered, then other active orders of similar contracts will be cancelled or reduced. It can be used to ensure your stop loss reduces your position regardless of current available margin.
  placeactive: Place Active Order
  placeactive_notice_v3: Do not use the duplicate <b>orderLinkId</b> in normal order & TP/SL order
  linear_account_para_placeActive: |
    <p>Market price active order: A traditional market price order which will be filled at the best available price. <code>price</code> is not required for this type of order.</p>
    <p>Limit price active order: You can set an execution price for your order. Only when the last traded price reaches the order price will the system will fill your order.</p>
    <p><b>Take profit/Stop loss: You may only set a TP/SL conditional order upon opening the position. Once you hold a position, any new active order requests which contain TP/SL data will be accepted but TP/SL data will be ignored. <code>tp_trigger_by</code>/<code>sl_trigger_by</code> default to LastPrice. Passing values to the <code>take_profit</code> or <code>stop_loss</code> parameters in this endpoint will create conditional orders managed by the system, which will be be automatically cancelled if the position is closed.</b></p>
    <p>Order quantity: This parameter indicates the quantity of perpetual contracts you want to buy or sell. For the minimum unit of qty increase or decrease, please refer to the <code>lot_size_filter</code> field in the <a href="#t-querysymbol">Query Symbol</a> endpoint. Note: <b>The allowed max trade quantity of <code>PostOnly</code> is 5 times bigger than normal orders</b>.</p>
    <p>Order price: If it is a stop order, this parameter is required. When there is no position, the long should be higher than 10% of the market price and less than 1 million. For the minimum unit of price movement, please refer to the <code>price_filter</code> field in the <a href="#t-querysymbol">Query Symbol</a> endpoint.</p>
    <p>Custom order ID: You may customise order IDs for active orders. We will link it to the system order ID, and return the unique system order ID to you after the active order is created successfully. You may use this order ID or your custom order ID to cancel your active order. The customised order ID should be unique, with a maximum length of 36 characters.</p>
    <p><b>Each account can hold up to 500 active orders yet to be filled entirely simultaneously. This is per instrument, so it's possible to have, for example, 300 active orders on the BTCUSDT instrument and 280 active orders on the ETHUSDT instrument.</b></p>
  linear_row_comment_basePrice: It will be used to compare with the value of <code>stop_px</code>, to decide whether your conditional order will be triggered by crossing trigger price from upper side or lower side. Mainly used to identify the expected direction of the current conditional order.
  linear_row_comment_stopPx: Trigger price. If you're expecting the price to rise to trigger your conditional order, make sure stop_px > max(market price, base_price) else, stop_px < min(market price, base_price)

  setautoaddmargin: Set Auto Add Margin
  linear_account_para_setAutoAddMargin: Set auto add margin, or <a href="https://help.bybit.com/hc/en-us/articles/900000394403-Introduction-to-Auto-Margin-Replenishment-USDT-Contract-">Auto-Margin Replenishment</a>.
  linear_row_comment_set_auto_margin: Auto add margin button

  linear_account_para_setLeverage: Set Leverage
  linear_row_comment_leverage: Must be greater than 0 and less than the <a href="https://help.bybit.com/hc/en-us/articles/360039749753-What-is-Risk-Limit-What-effect-does-the-Risk-Limit-have-on-Margin-Inverse-Contract-">risk limit leverage</a>.
  queryfeerate: Query Trading Fee Rate
  marginswitch: Cross/Isolated Margin Switch
  dv_marginswitch: Switch Cross/Isolated Margin
  linear_account_para_switchIsolated: Switch Cross/Isolated; must set leverage value when switching from Cross to Isolated
  linear_row_comment_switch_isolated: Cross/Isolated<span>:</span> true is Isolated; false is Cross

  linearAddMargin: Add Margin
  linear_account_para_addMargin: Add Margin
  linear_account_row_comment_margin: Add/Remove how much margin<span>:</span> Increase 10; decrease -10, supports 4 decimal places

  linear_comment_positionmode: |
    Position Mode. <code>MergedSingle</code><span>:</span> One-Way Mode; <code>BothSide</code><span>:</span> Hedge Mode

  ### inverse future
  switchpositionmode: Position Mode Switch
  dv_switchpositionmode: Switch Position Mode
  account_para_switchpositionmode: |
    If you are in One-Way Mode, you can only open one position on <code>Buy</code> or <code>Sell</code> side. If you are in Hedge Mode, you can open both <code>Buy</code> and <code>Sell</code> side positions simultaneously.

  account_para_switchpositionmode_withcoin: |
    It supports to switch the position mode for <b>USDT perpetual</b> and <b>Inverse futures</b>. If you are in One-Way Mode, you can only open one position on <code>Buy</code> or <code>Sell</code> side. If you are in Hedge Mode, you can open both <code>Buy</code> and <code>Sell</code> side positions simultaneously.
    <br/>
    <b>Rule:</b>
    <ul>
    <li>Priority for configuration to take effect: symbol > coin > system default</li>
    <li>System default: one-way mode</li>
    <li>If the request is by <code>coin</code> (settleCoin), then all symbols based on this setteCoin that do not have position and open order will be batch switched, and new listed symbol based on this settleCoin will be the same mode you set.</li>
    </ul>
    Example:
  example_h1: System default
  example_r1_d1: Inital setting
  example_r1_d2: one-way
  example_r1_d3: never configured
  example_r2_d1: Take effect result
  example_r2_d2: All USDT perpetual trading pairs are one-way molde
  example_r3_d1: <b>Change 1</b>
  example_r3_d4: Set BTCUSDT to hedge-mode
  example_r4_d2: BTCUSDT becomes hedge-mode, and all other symbols keep one-way mode
  example_r5_d1: list new symbol ETHUSDT
  example_r5_d2: ETHUSDT is one-way mode （inherit default rules）
  example_r6_d1: <b>Change 2</b>
  example_r6_d3: Set USDT to hedge-mode
  example_r7_d2: All current trading pairs with no positions or orders are hedge-mode, and no adjustments will be made for trading pairs with positions and orders
  example_r8_d1: list new symbol SOLUSDT
  example_r8_d2: SOLUSDT is hedge-mode (Inherit coin rule)
  example_r9_d1: <b>Change 3</b>
  example_r9_d3: Set ASXUSDT to one-mode
  example_r10_d1: AXSUSDT is one-way mode, other trading pairs have no change
  example_r11_d1: list new symbol BITUSDT
  example_r12_d1: BITUSDT is hedge-mode (Inherit coin rule)

  row_comment_positionmode: |
    Position Mode. <code>0</code><span>:</span> One-Way Mode; <code>3</code><span>:</span> Hedge Mode
  futures_row_comment_leverage: Must be greater than 0 and less than the <a href="https://help.bybit.com/hc/en-us/articles/360039749753-What-is-Risk-Limit-What-effect-does-the-Risk-Limit-have-on-Margin-Inverse-Contract-">risk limit leverage</a>.
  inverse_row_comment_leverage: When switching from cross to isolated, the value of <code>buy_leverage</code> must be equal to <code>sell_leverage</code>.
  futures_account_para_switchIsolated: Switch Cross/Isolated; must set leverage value when switching from Cross to Isolated
  futures_row_comment_switch_isolated: Cross/Isolated<span>:</span> true is Isolated; false is Cross

  ### websocket
  linear_websocket_endpoints_aside: |
    <b>Note that the following endpoints only apply to <i>USDT (Linear) Perpetual</i></b>. To listen to other websockets, go to:
    <ul>
      <li><a href="https://bybit-exchange.github.io/docs/inverse/#t-websocketauthentication">Inverse Perpetual/Futures</a></li>
      <li><a href="https://bybit-exchange.github.io/docs/spot/v3/#t-websocketauthentication">Spot</a></li>
    </ul>
  linear_websocket_para_endpoint: |
    Base endpoints:
    <ul>
    <p>
      <li>Testnet public:
        <span id="testnet_public_address">wss://stream-testnet.bybit.com/realtime_public</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet_public_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
      </li>
      <li>Testnet private:
        <span id="testnet_private_address">wss://stream-testnet.bybit.com/realtime_private</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet_private_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
      </li>
    </p>
    <p>
      <li>Mainnet public (both endpoints are available):<br/>
        <ul>
        <li><span id="mainnet_public_address">wss://stream.bybit.com/realtime_public</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_public_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
        <li><span id="mainnet_public_address_2">wss://stream.bytick.com/realtime_public</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_public_address_2"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
        </ul>
      </li>
    </p>
    <p>
      <li>Mainnet private (both endpoints are available):<br/>
        <ul>
        <li><span id="mainnet_private_address">wss://stream.bybit.com/realtime_private</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_private_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
        <li><span id="mainnet_private_address_2">wss://stream.bytick.com/realtime_private</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_private_address_2"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
        </ul>
      </li>
    </p>
    </ul>

  ### wallet
  websocketwallet: wallet

  ## order-list 查询不支持多状态查询
  linear_account_row_comment_orderStatus: Query your orders for all statuses if 'order_status' not provided. If you want to query orders with specific statuses, you can pass the order_status split by ','.

  ## change-log
  linear_update_20200331: <code>order_status</code> field not support query orders with specific statuses
  linear_update_20200331_ws_ob: fix response data bug
  fundingrate: Get the Last Funding Rate
  linear_kline_row_comment_limit_200: Limit for data size, max size is 200. Default as showing 200 pieces of data
  linear_order___20200403: Add field <code>reduce_only</code> in response
  linear_poistion___20200403: Add field <code>free_qty</code> in response
  linear_order_fix_order_type___20200403: Fix value of <code>order_type</code> in response
  linear_exec_type: Execution type
  exec_type_pnl: Execution type (cannot be <code>Funding</code>)
  switchmode: Full/Partial Position TP/SL Switch
  dv_switchmode: Switch Full/Partial Position TP/SL
  switchmode_aside: When set to Partial, TP/SL orders may have a quantity less than the position size. This is set with the <a href="#t-tradingstop">Trading-Stop endpoint</a>.
  addmargin: Add/Reduce Margin
  restapi_update_20200414: Updated <code>BTCUSDT</code> contract information
  linear_private_trade_records: Get user's trading records. The results are ordered in descending order (the first item is the latest). Returns records up to 2 years old.
  linear_private_closed_pnl_records: Get user's closed profit and loss records. The results are ordered in descending order (the first item is the latest).
  linear_private_switchmode: Switch mode between Full or Partial
  linear_row_comment_limit: Limit for data size per page, max size is 50. Default as showing 20 pieces of data per page.
  linear_row_comment_limit_50_200: Limit for data size per page, max size is 200. Default as showing 50 pieces of data per page.
  restapi_update_20230206: For any permission of api key, you can access this endpoint
  restapi_update_20230119_4: For portfolio margin mode, totalOrderIM、totalPositionIM、totoalPositionMM returns ""
  restapi_update_20230119_3: For portfolio margin mode, positionIM, positionMM, leverage returns "", riskId returns 0
  restapi_update_20230119_2: For portfolio margin mode, orderIM returns ""
  restapi_update_20230119_1: USDT Perpetual is supported to use portfolio margin mode
  restapi_update_20230104: Use new request param for option order. original one is <code>iv</code>, current one is <code>orderIv</code>
  restapi_update_20230116_2: Add 500 level depth for linear contract & inverse contract, the push frequency is 100ms
  restapi_update_20230116_1: Add new response field <code>xp</code>, it means USD index price, which can be an empty string.
  restapi_update_20230109: Removed <code>predictedFundingRate</code>. Use UTC timestamp for field <code>nextFundingTime</code>, which original is dateTime. Add <code>openInterestValue</code> field
  restapi_update_20221215: websocket v2 public stream has new response field <code>type</code>
  restapi_update_20221214_2: Update position websocket api. <ul><li>Add new response fields <code>activePrice</code>,<code>markPrice</code>,<code>cumRealisedPnl</code>,<code>positionMM</code>,<br/><code>positionIM</code>,<code>positionStatus</code>,<code>sessionAvgPrice</code>,<code>occClosingFee</code></li></ul>
  restapi_update_20221214_1: Add new request param <code>withdrawType</code>
  restapi_update_20221212_3: Add new response fields <code>fundingInterval</code>, USDT期貨新增<code>settleCoin</code>
  restapi_update_20221212_2: Update position rest api. <ul><li>Convert <code>riskId</code> from <b>string</b> to <b>integer</b></li><li>Add new response fields <code>markPrice</code>,<code>cumRealisedPnl</code>,<code>positionMM</code>,<br/><code>positionIM</code>,<code>positionStatus</code>,<code>sessionAvgPrice</code>,<code>occClosingFee</code></li></ul>
  restapi_update_20221212_1: Add new websocket to get public liquidation records
  restapi_update_20221209_1: Update the data type of response field <code>riskId</code> from <code>string</code> to <code>integer</code>
  restapi_update_20221208_5: Update the data type of response field <code>riskId</code> from <code>integer</code> to <code>string</code>
  restapi_update_20221208_4: Add new websocket to get account info update
  restapi_update_20221208_3: Add new rest api to query account info
  restapi_update_20221208_2: Add new rest api to set margin mode
  restapi_update_20221208: Add new rest api to query insuarnce pool information
  restapi_update_20221124_2: Support internal transfer
  restapi_update_20221124_1: Support USDC account query and config
  restapi_update_20221124: Add new market endpoint
  restapi_update_20221123_4: Supports querying USDC perp
  restapi_update_20221123_3: Position endpoint supports querying USDC perp and option.
  restapi_update_20221123_2: Order endpoints support placing/modifying/cancel USDC perp and option.
  restapi_update_20221123_1: Market data endpoints support querying USDC perp and option.
  restapi_update_20221116: Add new request param. Support cancel the order by settle coin.
  restapi_update_20221108: Add new public websocket topic
  restapi_update_20221103_1: Add new response field <code>updateTimestamp</code>. Depreciate field <code>updatedAt</code>
  restapi_update_20221103: Add new response parameter. <code>unified</code>
  restapi_update_20221028: Add new sub member desposit related endpoints
  restapi_update_20221025: Add new endpoints
  restapi_update_20221020: Add new account asset endpoints
  restapi_update_20221020_1: Add new response params
  restapi_update_20221019: Add new public websocket topic
  restapi_update_20221013: Add new market data API
  restapi_update_20221012: Add new response param <code>leavesQty</code>, <code>cumExecFee</code>, <code>cumExecQty</code>, <code>cumExecValue</code>
  restapi_update_20220929: Add new response param <code>orderLinkId</code>
  restapi_update_20220926: Add new response param <code>placeType</code>
  restapi_update_20220920_1: Add new request param <code>orderCategory</code>
  restapi_update_20220920: Add new response field <code>updateTimestamp</code>
  restapi_update_20220919: Add new response field <code>affiliate_id</code>
  restapi_update_200220916: Update the rule of <code>limit</code> and <code>startTime</code> <code>endTime</code>.
  restapi_update_20220914: Support new account type <code>UNIFIED</code>, <code>OPTION</code>
  restapi_update_20221110: Add <code>seq</code> field and orderbook.1.{symbol} public topic
  restapi_update_200220913_1: Update the data type of response field <code>BT</code> from <code>string</code> to <code>boolean</code>
  restapi_update_200220913: Add new api to query open interest limit information
  restapi_update_200220907: Add new response field <code>is_block_trade</code>
  restapi_update_20220905_2: Deprecated <code>created_at</code> and <code>updated_at</code>. Now returns an empty string.
  restapi_update_20220905_1: |
    Deprecated the following fields. Now returns a default value:
    <br/> <code>countdown_hour</code>: 0
    <br/> <code>predicted_funding_rate</code>: ""
    <br/> <code>total_turnover</code>: ""
    <br/> <code>total_volume</code>: 0
    <br/> <code>price_1h_pcnt</code>: ""
    <br/> <code>open_value</code>: ""
  restapi_update_200220901_1: Add support for placing TP/SL orders
  restapi_update_200220901_2: Add new API
  restapi_update_200220901_3: Add new response fields <code>takeProfit</code>, <code>stopLoss</code>, <code>tpTriggerBy</code>, <code>slTriggerBy</code>
  restapi_update_200220901_4: <code>symbol</code> now is <b>required</b>
  restapi_update_200220831_1: Add new response fields <code>iv</code>, <code>markIv</code>, <code>underlyingPrice</code>, <code>indexPrice</code>, <code>markPrice</code>
  restapi_update_200220831_2: Add new response fields <code>iv</code>, <code>cancelType</code>, <code>updateTimeStamp</code>
  restapi_update_200220831_3: Add new response field <code>updateTimeStamp</code>
  restapi_update_200220831_4: Add api "Query historical volatility"
  restapi_update_200220831_5: Add wss "Symbol state notification"
  restapi_update_200220830: Add new response field <code>leavesQty</code>, <code>cumExecQty</code>, <code>cumExecValue</code>, <code>cumExecFee</code>
  restapi_update_200220826: Add new response field <code>t</code> (tradeId)
  restapi_update_200220822_1: Deprecate <code>totalSessionRPL</code> and <code>totalSessionUPL</code>，return <code>""</code>
  restapi_update_200220822_2: Deprecate <code>sessionRPL</code> and <code>sessionUPL</code>，return <code>""</code>
  restapi_update_200220822_3: Deprecate <code>sessionRPL</code>，return <code>""</code>
  restapi_update_200220809: Add private topic for TP/SL order
  restapi_update_20220805_2: <code>baseCoin</code> and <code>settleCoin</code> is supported for when <code>category</code>=linear
  restapi_update_20220805_1: Add <code>linear</code> support
  restapi_update_20220805: Update insurance topic response filed from <code>baseCoin</code> to <code>settleCoin</code>
  restapi_update_20220825: Add <code>take_profit</code> and <code>stop_order</code> fields
  restapi_update_20220824_1: Remove <code>sessionRPL</code> and <code>sessionUPL</code> fields
  restapi_update_20220824: Add <code>baseCoin</code> field, which is used to support multiple assets
  restapi_update_20220810: Add <code>orderCategory</code> and <code>triggerPrice</code>, used to place TP/SL order
  restapi_update_20220718_2: Abandon response field <code>total_turnover</code>.
  restapi_update_20220718_1: Abandon response field <code>total_turnover_e8</code>.
  restapi_update_20220708: Add notice that an IP can connect to a maximum of 50 private spot websocket connections simultaneously
  restapi_update_20220630: Add <code>page_token</code> field in response parameters.
  restapi_update_20220617: Add LT All Asset Infos Query
  restapi_update_20220616: Add Set Margin Mode API for USDC
  restapi_update_20220610: Add <code>S</code> field which indicates the trade side
  restapi_update_20220608: Increase the push frequency from every 250ms (max. 300ms) to every 100ms
  restapi_update_20220602: Add new USDC Options Websocket private topic <code>mmpevent</code>
  restapi_update_20220601_2: Add new response param <code>ExecutionTime</code> and Update response param <code>time</code>
  restapi_update_20220601: URLs of the above copytrading endpoints are updated.
  restapi_update_20220520: Add Cross Margin Trading Endpoints
  linear_row_comment_limit_100_100: Limit for data size per page, max size is 100. Default as showing 100 pieces of data per page.
  restapi_update_20220513: Add new response param <code>innovation</code>
  restapi_update_20220512: Add USDC Perpetual Funding API
  restapi_update_20220420_2: Add lt public Topics
  restapi_update_20220420_1: Add Leveraged Token Endpoints
  restapi_update_20211228: Remove <code>from</code> field from parameters of <a href="#t-publictradingrecords">Public Trading Records</a>.
  restapi_update_20200417_1: Add new symbol <code>BTCUSDT</code>
  restapi_update_20200417_2: Add new symbol <code>BTCUSDT</code>
  restapi_update_20200417_3: Add new response param <code>trade_time_ms</code>
  restapi_update_20200417_4: Update support millisecond <code>start_time</code>
  restapi_update_20200417_5: Abandon response field <code>trade_time</code>
  restapi_update_20200418_1: Fix permission denied issue of below endpoints under <code>readonly</code> model<span>:</span>
  restapi_update_20200418_2: Add new fields in response, like <code>exec_price</code>,<code>exec_value</code>
  restapi_update_20200427_1: Return symbol <code>BTCUSDT</code> by default
  restapi_update_20200429_1: Add new request parameter <code>order</code>
  restapi_update_20200429_2: Fix bug of always returning Zero for <code>inviter_id</code> under certain conditions
  restapi_update_20200518_1: <code>order_status</code> query orders with specific statuses by passing each <code>order_status</code> split by ','.
  restapi_update_20200518_2: |
    Add new fields in response: <code>interval</code>, <code>open_time</code>
  restapi_update_20200518_3: |
    Abandon response fields: <code>period</code>, <code>start_at</code>
  restapi_update_20200630_1: Returns all wallet balances if no parameters are passed
  restapi_update_20200630_2: Adjust the return quantity from 50 to 200
  restapi_update_20200826_1: |
    Support setting take profit and stop loss; Add new request parameters: <code>take_profit</code>, <code>stop_loss</code>, <code>tp_trigger_by</code>, <code>sl_trigger_by</code>
  restapi_update_20200826_3: |
    Add response parameters: <code>take_profit</code>, <code>stop_loss</code>, <code>tp_trigger_by</code>, <code>sl_trigger_by</code>
  restapi_update_20200826_2: |
    Add response parameters: <code>tp_sl_mode</code>
  restapi_update_20200826_4: |
    Support creating partial take profit and stop loss orders; Add new request parameters: <code>sl_size</code>, <code>tp_size</code>
  restapi_update_20200826_5: Support cancelling take profit and stop loss orders
  restapi_update_20200826_6: |
    Support replacing take profit stop loss orders; Add new request parameters: <code>take_profit</code>, <code>stop_loss</code>, <code>tp_trigger_by</code>, <code>sl_trigger_by</code>
  restapi_update_20200927_1: Support replace order by <code>order_link_id</code>
  restapi_update_20200915_1: Fix <a href="#t-marketaccountratio">Account Long-short ratio</a> data error
  restapi_update_20200915_2: Change the return value of the field <code>time_in_force</code> of <a href="#t-placecond">placing conditional market order</a> from <code>GoodTillCancel</code> to <code>ImmediateOrCancel</code> which is the actual execution strategy
  ws_update_20200927_1: Add new websocket base endpoint
  restapi_update_20201012_1: Fix issue where not returning stop orders of <code>Deactivated</code> status
  restapi_update_20201012_2: Fix issue where returning wrong <code>cum_exec_fee</code> for filled orders
  restapi_update_20201021_1: Fix bug of <code>given_cash</code> and <code>service_cash</code> are always Zero when coin is <code>USDT</code>
  restapi_update_20201021_2: Add new USDT perpetual symbols<span>:</span> <a href="#symbol-symbol">ETHUSDT, LINKUSDT, LTCUSDT, XTZUSDT</a>
  restapi_update_20201021_3: Support setting tp/sl by different trigger price types
  restapi_update_20201026_1: Add field <code>is_isolated</code> in response
  restapi_update_20201102_1: Request parameter <code>symbol</code> is optional now; If symbol is not passed, return positions of all symbols
  restapi_update_20201111_1: The following REST API will be upgraded. The abandoned endpoints will be deprecated on December 10, 2020. Effective immediately, the rate limit will be reduced by half before being completely removed from service on December 17, 2020.
  restapi_update_20201111_2: The abandoned endpoints will be deprecated on November 30, 2020
  restapi_update_20201112_1: <code>order_status</code> query orders with specific statuses by passing each <code>order_status</code> split with ','.
  restapi_update_20201112_2: <code>stop_order_status</code> query orders with specific statuses by passing each <code>stop_order_status</code> split with ','.
  restapi_update_20201116_1: Add field <code>is_isolated</code> and <code>auto_add_margin</code> in response
  restapi_update_20201116_2: Add field <code>base_price</code> and <code>trigger_by</code> in response
  restapi_update_20201120_1: Add field <code>trigger_by</code> in response
  restapi_update_20201203_5: Real-time queries can return multiple unfilled orders
  restapi_update_20201203_6: Real-time queries can return multiple unfilled orders
  restapi_update_20201203_1: Add field <code>deleverage_indicator</code> and <code>unrealised_pnl</code>
  restapi_update_20201203_2: Add field <code>close_on_trigger</code>
  restapi_update_20201203_4: Add field <code>close_on_trigger</code> and <code>reduce_only</code>
  restapi_update_20201214_1: Add new USDT perpetual symbols<span>:</span> <a href="#symbol-symbol">BCHUSDT</a>
  restapi_update_20201231_0: |
    After a service upgrade, a number of <code>v2</code> endpoints have been added to replace the old routes:
  restapi_update_20201231_1: <code>/user/leverage/save</code> - <b>Not recommended</b>
  restapi_update_20201231_2: <code>/open-api/wallet/fund/records</code> - <b>Not recommended</b>
  restapi_update_20201231_3: <code>/open-api/wallet/withdraw/list</code> - <b>Not recommended</b>
  restapi_update_20201231_4: <code>/position/change-position-margin</code> - <b>Not recommended</b>
  restapi_update_20201231_5: <code>/open-api/api-key</code> - <b>Not recommended</b>
  restapi_update_20201231_6: <code>/open-api/position/trading-stop</code> - <b>Not recommended</b>
  restapi_update_20201231_7: <code>/open-api/funding/prev-funding-rate</code> - <b>Not recommended</b>
  restapi_update_20201231_8: <code>/open-api/funding/prev-funding</code> - <b>Not recommended</b>
  restapi_update_20201231_9: <code>/open-api/funding/predicted-funding</code> - <b>Not recommended</b>
  restapi_update_20201231_1_1: |
    Replaced by: <code>/v2/private/position/leverage/save</code>
  restapi_update_20201231_2_2: |
    Replaced by: <code>/v2/private/wallet/fund/records</code>
  restapi_update_20201231_3_3: |
    Replaced by: <code>/v2/private/wallet/withdraw/list</code>
  restapi_update_20201231_4_4: |
    Replaced by: <code>/v2/private/position/change-position-margin</code>
  restapi_update_20201231_5_5: |
    Replaced by: <code>/v2/private/account/api-key</code>
  restapi_update_20201231_6_6: |
    Replaced by: <code>/v2/private/position/trading-stop</code>
  restapi_update_20201231_7_7: |
    Replaced by: <code>/v2/private/funding/prev-funding-rate</code>
  restapi_update_20201231_8_8: |
    Replaced by: <code>/v2/private/funding/prev-funding</code>
  restapi_update_20201231_9_9: |
    Replaced by: <code>/v2/private/funding/predicted-funding</code>
  restapi_update_20210201_0_1: Upgrade <b>Tiered Margin</b> to <a href="https://help.bybit.com/hc/en-us/articles/900000170023-Risk-Limit-USDT-Contract-">Risk Limit</a>, add below endpoint<span>:</span>

  restapi_update_20210125_0: <code>/v2/private/funding/prev-funding-rate</code> - <b>Not recommended</b>
  restapi_update_20210125_0_1: |
    Replaced by: <code>/v2/public/funding/prev-funding-rate</code>
  restapi_update_20210225: Inverse Futures API released!
  restapi_update_20210301: Change url prefix from <code>future</code> to <code>futures</code>
  restapi_update_20210304: Fix the bug that the filtering function doesn't work for parameter <code>wallet_fund_type</code>
  restapi_update_20210311: Fix sequence of response data
  restapi_update_20210318_1: Add new USDT perpetual symbols<span>:</span> <a href="#symbol-symbol">ADAUSDT, DOTUSDT, UNIUSDT</a>
  restapi_update_20210318_2: Query risk limit return field added maximum leverage <code>max_leverage</code>
  restapi_update_20210322: Fix the bug that the filtering function doesn't work for parameter <code>start_date</code> and <code>end_date</code>
  restapi_update_20210324: Query risk limit return field added maximum leverage <code>max_leverage</code>
  restapi_update_20210430: Testnet Add new USDT perpetual symbols<span>:</span> <a href="#symbol-symbol">XRPUSDT, XEMUSDT, SUSHIUSDT, AAVEUSDT</a>
  restapi_update_20210513: Add new USDT perpetual symbols<span>:</span> <a href="#symbol-symbol">XRPUSDT, XEMUSDT, SUSHIUSDT, AAVEUSDT</a>
  restapi_update_20210602: Add new USDT perpetual symbol<span>:</span> <a href="#symbol-symbol">DOGEUSDT</a>
  restapi_update_20210629: Add new USDT perpetual symbols<span>:</span> <a href="#symbol-symbol">MATICUSDT, EOSUSDT, ETCUSDT, BNBUSDT, FILUSDT, SOLUSDT</a>
  restapi_update_20210527_1: Add new request parameters <code>tp_trigger_by</code>, <code>sl_trigger_by</code>
  restapi_update_20210628: Add fields of <code>take_profit</code>, <code>stop_loss</code>, <code>trailing_stop</code> in response
  restapi_update_20210628_1: Fix values of <code>min_price</code> and <code>tick_size</code> for symbols <code>BCHUSDT</code> and <code>UNIUSDT</code>
  restapi_update_20210701: Add parameter <code>leverage_only</code>
    <br>Use this parameter to set leverage while in cross margin mode.
    <br>If this field is set to <code>false</code>, when <code>leverage</code> is equal to <code>0</code> the position will use cross margin; when <code>leverage</code> is greater than <code>0</code> the position will use isolated margin.
    <br>If this field is set to <code>true</code>, you can set leverage in cross margin with <code>leverage</code>. <code>leverage</code> must be greater than <code>0</code>.
    <br>Use the <a href="#t-marginswitch">Cross/Isolated Margin Switch</a> endpoint to switch cross/isolated without modifying the cross level of leverage.
  restapi_update_20210708_1: Update <code>buy_leverage</code> and <code>sell_leverage</code> parameters to be always required
  restapi_update_20210706: Support setting <code>buy_leverage</code>, <code>sell_leverage</code> when switch from isolated margin to cross margin
  restapi_update_20210902: |
    <ul>
    <li>Deprecate <code>prev_price_24h_e4</code> in favour of <code>prev_price_24h</code>
    <li>Deprecate <code>high_price_24h_e4</code> in favour of <code>high_price_24h</code>
    <li>Deprecate <code>low_price_24h_e4</code> in favour of <code>low_price_24h</code>
    <li>Deprecate <code>prev_price_1h_e4</code> in favour of <code>prev_price_1h</code>
    <li>Deprecate <code>mark_price_e4</code> in favour of <code>mark_price</code>
    <li>Deprecate <code>index_price_e4</code> in favour of <code>index_price</code>
    <li>Deprecate <code>last_price_e4</code> in favour of <code>last_price</code>
    </ul>

  restapi_update_20210907:
      <ul><li>Fix issue with the Price Accuracy of <code>avg_entry_price</code>, <code>order_price</code>, <code>avg_exit_price</code> for XLMUSDT and TRXUSDT.</li></ul>
  ws_update_20210202_0: Add fields <code>reduce_only</code>,<code>close_on_trigger</code>
  ws_update_20210202_1: Add field <code>close_on_trigger</code>

  ws_update_20210202_2: Add fields <code>reduce_only</code>,<code>close_on_trigger</code>
  ws_update_20210225: Add websocket support to inverse future

  restapi_update_2022042501: Get user's trading records over the last two years (rolling).
  restapi_update_2022042801: Support <code>coin</code> level switching between One-Way Mode and Hedge Mode.

  restapi_update_2021101201: Fix <code>price_scale</code> response of <a href="#t-querysymbol">Query Symbol</a> Endpoint for USDT perpetual symbols.

  restapi_update_20211206: Add parameter <code>position_idx</code> to Request Parameters and Response Parameters
  restapi_update_20211206_1: Add parameter <code>position_idx</code> to Request Parameters
  restapi_update_20211206_2: Add parameter <code>position_idx</code> to Response Parameters

  restapi_update_20210910:
   <ul><li>Limit <code>start_time</code> and <code>end_time</code> to be within seven days of the current date. For earlier records, please contact customer support.</li></ul>
  restapi_update_2021091401: Will be fully offline on 2021-09-24. Please replace with the <a href="#t-websocketliquidation">liquidation</a> websocket.
  restapi_update_2021091402: This shift to a websocket helps ensure a fair trading environment by preventing some traders from getting early access to market information. Please ensure you switch to the websocket service before 2021-09-24. Thank you for your continued support!
  restapi_update_20210924: This endpoint is now offline. Please replace with the <a href="#t-websocketliquidation">liquidation</a> websocket.
  restapi_update_20210917: This shift to a websocket helps ensure a fair trading environment by preventing some traders from getting early access to market information. Please ensure you switch to the websocket service before 2021-09-24. Thank you for your continued support!
  restapi_update_20220228: Add response parameters <code>vip_level</code> and <code>mkt_maker_level</code> in <a href="#t-key">API Key Info</a> 。
  restapi_update_20220301: Add response parameters <code>funding_interval</code>.
  restapi_update_20210312: Fix value of <code>exec_type,last_liquidity_ind</code> for <a href="#t-usertraderecords">User Trade Record</a> endpoint
  restapi_update_20210315: Prior to December 31, 2020, order price of a market order was returned as the last traded price as of the moment of order placement. On and after December 31, 2020, order price of a market order is returned as a revised limit price. For more information, please refer to  <a href="#t-activeorders">description of market order</a>.
  restapi_update_20210402: Add comment of errcode 10016,10018,30074,30075
  linear_restapi_update_20210402: Add comment of errcode 10016,10018,130145
  restapi_update_20210407: Fix value of <code>price</code> of <a href="#t-query_liqrecords">Liquidated Orders</a> from <code>liq_price</code> to <code>bust_price</code>, you can find more about liquidation <a href="https://help.bybit.com/hc/en-us/articles/360039261474-Liquidation-process-Inverse-Contract-">here</a>
  restapi_update_20210414_1: Add <code>position_idx</code> for <a href="#t-getcond">Get Conditional Order</a>,<a href="#t-querycond">Query Conditional Order (real-time)</a>,<a href="#t-getactive">Get Active Order</a>,<a href="#t-queryactive">Query Active Order (real-time)</a>
  restapi_update_20210414_2: Fix data of position list when request without request parameter <code>symbol</code> if the position is under both side mode
  restapi_update_20210415: Fix value of <code>used_margin, order_margin, position_margin, occ_closing_fee, unrealised_pnl</code> of <a href="#t-balance">Get Wallet Balance</a> endpoint not contains Inverse Futures positions
  restapi_update_20210422: Deprecated Fields of self_ratio and platform_ratio, it is returned as 0 currently
  restapi_update_20210507: Add fields <code>buy_leverage</code>,<code>sell_leverage</code>. <code>leverage</code> not recommand to use
  restapi_update_2021050701: |
    Add: <code>v2/private/position/switch-mode</code>
  restapi_update_2021050702: |
    Add: <code>v2/private/position/switch-isolated</code>
  restapi_update_2021050703: Add fields <code>buy_leverage</code>,<code>sell_leverage</code>.
  restapi_update_2021050704: <code>leverage</code> - <b>Not Recommand</b>
  restapi_update_20210511: |
    Add: <code>v2/private/position/risk-limit</code>
  restapi_update_2021051101: |
    Add: <code>v2/public/risk-limit/list</code>
  restapi_update_2021050705: <a href="#t-setleverage">Set Leverage</a> Deprecated Field<code>position_idx</code>
  restapi_update_2021050706: <a href="#t-marginswitch">Cross/Isolated Margin Switch</a> Deprecated Field<code>position_idx</code>
  restapi_update_2021051201: <a href="#t-setleverage">Set Leverage</a> Deprecated Field<code>position_idx</code>
  restapi_update_2021051202: <a href="#t-marginswitch">Cross/Isolated Margin Switch</a> Deprecated Field<code>position_idx</code>
  restapi_update_2021051203: |
    Add: <code>futures/private/position/risk-limit</code>
  restapi_update_20210517: |
    Add: <code>futures/private/position/risk-limit</code>
  restapi_update_20210520: ETH Inverse Futures released
  restapi_update_20210527: New add spot open-api document
  restapi_update_20210617: New add get symbols API. Parameter name for order_link_id updated to orderLinkId
  restapi_update_20210617_1: <code>is_isolated</code> illustrates if position is Isolated Margin or Cross Margin
  restapi_update_20210617_2: Deprecate to use <code>auto_add_margin</code> to determine if position is Isolated Margin or Cross Margin
  restapi_update_20210617_3: Not recommend to use <a href="#t-setleverage">Set Leverage</a> endpoint switch Isolated Margin or Cross Margin
  restapi_update_20210618_1: After June 24, 2021 do not use <code>leverage</code> to determine if position is Isolated Margin or Cross Margin. <code>leverage</code> must be greater than 0 and less than the <a href="https://help.bybit.com/hc/en-us/articles/360039749753-What-is-Risk-Limit-What-effect-does-the-Risk-Limit-have-on-Margin-Inverse-Contract-">risk limit leverage</a>.
  restapi_update_20210712: Optimize the input and output parameters of some interfaces
  restapi_update_20220314: Add <code>m</code> (is maker) to the <code>ticketInfo</code> topic
  restapi_update_20210823: |
    Add additional enums for <code><a href="#wallet-fund-type-wallet_fund_type-type">wallet_fund_type</a></code>: <code>ReturnServiceCash</code>, <code>Insurance</code>, <code>SubMember</code> <code>Coupon</code>, <code>AccountTransfer</code>, <code>CashBack</code>
  restapi_update_20210826: Asset Transfer API released!
  restapi_update_20220610_2: Universal Transfer released!
  restapi_update_20220519: Withdraw and Deposit Endpoints released!
  restapi_update_20220808: Transfer endpoint supports transfer from/to <code>UNIFIED</code>, and new error codes.

  restapi_update_20220324_1: Add request parameters <code>fromTicketId</code>, <code>toTicketId</code>, <code>orderId</code>
  restapi_update_20220324_2: Deprecate request parameters <code>fromId</code>, <code>toId</code>
  restapi_update_20220414_1: MaxTradeQty and MaxTradeAmount are ignored when placing LIMIT_MAKER orders
  restapi_update_20220414_2: Add new Websocket public topic "Platform Insurance"
  restapi_update_20220413: Add response parameter <code>locked</code>
  restapi_update_20220429: Increase maximum trading qty for <code>PostOnly</code> orders. Please refer to <code>post_only_max_trading_qty</code> in <a href="#t-querysymbol">Query Symbol</a> endpoint

  markpricekline: Query Mark Price Kline
  dv_markpricekline: Get Mark Price Kline
  linear_query_mark_price_kline: Query mark price kline (like <a href="#t-querykline">Query Kline</a> but for <a href="https://help.bybit.com/hc/en-us/articles/360039261074-What-is-Dual-Price-mechanism-">mark price</a>).
  linear_query_mark_price_kline_v3: Query mark price kline (like <a href="#t-dv_querykline">Query Kline</a> but for <a href="https://help.bybit.com/hc/en-us/articles/360039261074-What-is-Dual-Price-mechanism-">mark price</a>).
  linear_resp_field_last_exec_price: Last execution price
  linear_resp_field_cum_exec_qty: Cumulative qty of trading
  linear_resp_field_cum_exec_value: Cumulative value of trading
  linear_resp_field_cum_exec_fee: Cumulative trading fees
  linear_resp_field_reduce_only: true means close order, false means open position
  linear_resp_field_position_value: Current position value
  linear_resp_field_entry_price: Average opening price
  linear_resp_field_liq_price: Liquidation price
  linear_resp_field_bust_price: Bust price
  linear_resp_field_position_margin: Position margin
  linear_resp_field_occ_closing_fee: Pre-occupancy closing fee
  linear_resp_field_realised_pnl: Today's realised Profit and Loss
  linear_resp_field_cum_realised_pnl: Cumulative realised Profit and Loss
  linear_resp_field_free_qty: Qty which can be closed. (If you have a long position, free_qty is negative. vice versa)
  linear_resp_tp_sl_mode: Stop loss and take profit mode
  linear_resp_field_closed_size: Closed size
  linear_resp_field_cum_entry_value: Closed position value
  linear_resp_field_avg_entry_price: Average entry price
  linear_resp_field_cum_exit_value: Cumulative trading value of position closing orders
  linear_resp_field_avg_exit_price: Average exit price
  linear_resp_field_closed_pnl: Closed Profit and Loss
  linear_resp_field_fill_count: The number of fills in a single order
  linear_row_comment_recent_trading_records_limit: Number of results. Default 500; max 1000

  inverse_query_index_price_kline: Index price kline. Tracks BTC spot prices, with a frequency of every second (learn more <a href="https://www.bybit.com/app/contracts">here</a>).
  inverse_query_premium_indices_kline: Premium index kline. Tracks the premium / discount of BTC perpetual contracts relative to the mark price per minute (learn more <a href="https://www.bybit.com/app/contracts">here</a>).

  linear_testnet_only: testnet only



  # Inverse Futures
  inverse_futures: Inverse Futures
  first_quarter: First quarter
  second_quarter: Second quarter
  third_quarter: Third quarter
  fourth_quarter: Fourth quarter
  trading_symbol_comment: You can get all symbols with the <a href="#t-querysymbol">Query Symbol</a> endpoint.


  # abandoned endpoints
  a_getleverage: User Leverage
  a_setleverage: Set Leverage
  replace_by_new: please replace with
  replace_by_new_topic: please replace with

  #spot
  spot: Spot
  spotAccountId: Account ID
  spotExchangeId: Exchange ID
  spotOrderLinkId: User-generated order ID
  spotv3_orderCategory: Order category. <code>0</code>：normal order by default; <code>1</code>：<a href="https://www.bybit.com/en-US/help-center/bybitHC_Article?language=us_EN&id=000001736">TP/SL order</a>, <b>Required</b> for TP/SL order.
  spotv3_triggerPrice: Trigger price
  spot_Alias: Alias
  spotBaseCurrency: Base currency
  spotQuoteCurrency: Quote currency
  spotBasePrecision: Decimal precision (base currency)
  spotQuotePrecision: Decimal precision (quote currency)
  spotMinTradeQuantity: Min. order qty (Not valid for market buy orders)
  spotMinTradeAmount: Min. order value (Only valid for market buy orders)
  spotMinPricePrecision: Min. number of decimal places
  spotmaxTradeQuantity: Max. order qty (It is ignored when you place an order with order type LIMIT_MAKER)
  spotmaxTradeAmount: Max. order value (It is ignored when you place an order with order type LIMIT_MAKER)
  spotCategory:  Category
  spotInnovation: True indicates that the price of this currency is relatively volatile
  spotshowStatus: True indicates that the symbol open for trading
  spot_trading_symbol_comment: You can get all symbols with the <a href="#t-spot_querysymbol">Query Symbol</a> endpoint.
  spotV3_trading_symbol_comment: You can get all symbols with the <a href="#t-getsymbols">Query Symbol</a> endpoint.
  spotSymbol: Name of the trading pair
  spotId: Irrelevant for API usage. This field reflects the "Transaction ID" from the <a href="https://www.bybit.com/user/assets/order/spot-history/active">Trade History</a> section of the website
  spotQty: Order quantity
  spotQtyPlaceOrder: |
    Order quantity (<b>for market orders: when <code>side</code> is <code>Buy</code>, this is in the quote currency. Otherwise, qty is in the base currency. For example, on BTCUSDT a <code>Buy</code> order is in USDT, otherwise it's in BTC.</b> For limit orders, the qty is always in the base currency.)
  spotCommission: Trading fee
  spotCommissionAsset: Asset type in which the fee is paid
  spotIsBuyer: True indicates buyer, false indicates seller
  spotIsMaker: True indicates maker, false indicates taker
  spotSymbolName: Symbol name
  spotIcebergQty: Please ignore
  spotGetOrderRemark: At least one must be entered in the orderId field and the ordersLinkId field
  spot_kline_interval: Chart interval
  spotTime: Order created time in the match engine
  spotExecutionTime: Order execution time
  spotFeeTokenId: Fee Token ID
  spotFeeTokenName: Fee token name
  spotFee: Fee of the trade.
  spotIsWorking: Working or not (true/false)
  spot_balances: Account balances
  spotTradeId: The ID for the trade
  spotUpdateTime: Last time order was updated
  spotLeverage: Real Leverage calculated by last traded price.
  spotMarginLocked: Amount of margin locked for this order. This includes the actually margin needed plus fees to open and close the position.
  spotPriceType: The price type. Possible values include INPUT, OPPONENT, QUEUE, OVER, and MARKET.
  spotQuantity: Order quantity (for market buy order, quantity = amount)
  spotBidQuantity: Bid quantity
  spotAskQuantity: Ask quantity
  spotKlineTimeRemark: If startTime and endTime are not specified, only the latest candles will be sent
  spotTicker24hrRemark: If symbol is not specified, the data from all symbols will be returned
  spotTickerPriceRemark: If symbol is not specified, the price from all symbols will be returned
  spotBookTickerRemark: If symbol is not specified, the best order price from all symbols will be returned
  spotTransactTime: Order Creation Time
  spotCummulativeQuoteQty: Total order quantity
  spotSide: Order direction
  spotOrderType: Order type
  spotPrice:  Last traded price
  spotOPrice: Order price
  spotPostOrderPrice: Order price. When the type field is MARKET, the price field is optional. When the type field is LIMIT or LIMIT_MAKER, the price field is required
  spot_OrderPrice: Order price
  spotOrderId: Order ID
  spotOrderId4Pagination: Specify orderId to return all the orders that orderId of which are smaller than this particular one for pagination purpose
  spotTicketId: Trade ID
  spotFees: Fees incurred for this order.
  spotOriQty: Order quantity
  spotExecQty: Please ignore
  spotExecQty2: Executed quantity
  spotIgnore: Please ignore
  spotAvgPrice: Average filled price
  spotStopPrice: Stop price
  spotType: Order type, LIMIT/MARKET_OF_QUOTE/MARKET_OF_BASE
  spotStatus: Order status
  tOrderClientOrdID: User-generated order ID
  fastcancelactiveorder: Fast Cancel Active Order
  batchcancelactiveorder: Batch Cancel Active Order
  batchfastcancelactiveorder: Batch Fast Cancel Active Order
  batchcancelactiveorderbyids: Batch Cancel Active Order By IDs
  openorders: Open Orders
  spotOrderLocked: Reserved for order (if it's 0, it means that the funds corresponding to the order have been settled)
  spot_transactId: Trade ID
  spot_time: Timestamp (trading time in the match box)
  spot_message: Success or not (true/false)
  spot_sMessage: True indicates buy side is taker, false indicates sell side is taker
  spot_order_list_limit: Default value is 500, max 500
  spot_historyOrder_limit: Default value is 100, max 500
  spot_orders_start_time: Start time, unit in millisecond
  spot_orders_end_time: End time, unit in millisecond
  orderhistory: Order History
  tradehistory: Trade History
  spot_from_id:  Query greater than the trade ID. (fromTicketId < trade ID)
  spot_to_id: Query smaller than the trade ID. (trade ID < toTicketId)
  spot_start_time: Start time, unit in millisecond
  spot_end_time: End time, unit in millisecond
  spot_token: Asset
  spot_fee: Trading fee (for a single fill)
  spot_locked: Reserved for orders
  spot_depth_limit: Default value is 100. Max value is 200
  spotOrderBookMergedScale: Precision of the merged orderbook, 1 means 1 digit
  spot_depth_time:  Current time, unit in millisecond
  spot_depth_bids: Bid price and quantity, with best bid prices ranked from top to bottom
  spot_depth_asks: Ask price and quantity, with best ask prices ranked from top to bottom
  mergedOrderBook: Merged Order Book
  spot_trades_limit: Default value is 1000, max 1000
  spot_trades_limit_2: Default value is 60, max 60
  spot_trades_history_limit: Default value is 50, max 50
  spot_is_buyer_maker: True indicates buy order, false indicates sell order
  spot_is_limit_maker: Is LIMIT_MAKER
  spot_leverage: leverage
  spot_liquidation_type: NO_LIQ indicates that it is not a liquidation order. IOC indicates that it is a liquidation order.
  spot_is_close: Is close
  spot_is_normal: Is normal trade. False if self-trade.
  spot_is_working: Is working. <code>false<code>：inValid; <code>true</code>：valid
  spot_match_account_id: Account ID of the opponent trader
  spot_trade_time: Current timestamp, unit in millisecond
  spot_best_bid_price: Best bid price
  spot_best_ask_price: Best ask price
  spot_last_price: Last traded price
  spot_open_price: Open price
  spot_high_price: High price
  spot_low_price: Low price
  lasttradedprice: Last Traded Price
  bestbidask: Best Bid/Ask Price
  spotRealtimeInterval: time interval
  spotOpen: Open price
  spotHigh: High price
  spotLow: Low price
  spot_total: Total equity
  spot_fees: Trading fee
  spot_account_free: Available balance
  spotClose: Close price
  spotVolume: Trading volume
  spotTrades: Number of trades
  spotTakerBaseVolume: Taker buy volume in base asset
  spotTakerQuoteVolume: Taker buy volume in quote asset
  spot_ticket_id: Ticket ID
  spot_match_order_id: Order ID of the opponent trader
  spot_account_id: Account ID

  # spot_wss_stop_executionReport
  spot_stop_orderStatus: TP/SL order status
  spot_stop_orderCreateTime: Order created time
  spot_stop_orderTriggerTime: Order triggered time. The field is filled only when order status is <code>ORDER_FILLED</code> and <code>ORDER_FAILED</code>
  spot_stop_orderUpdateTime: Order updated time. It is updated when order status is changed.
  spot_stop_marketPrice: The market price when place the order
  spot_stop_normalOrderId: The new order id after the tp/sl order is triggered.
  spot_stop_siTi: Please ignore
  spot_tpSlOrderStatus: The below status for tp/sl order only



  #  spot_match_account_id: Account ID
  spotQuoteAssetVolume: Quote asset volume
  spotMakerRebate: Maker rebate
  batchcancel_spotOrderTypes: |
    Order type. Use commas to indicate multiple order types, eg <code>LIMIT,LIMIT_MAKER</code>. Default: <code>LIMIT</code>
  spotCancelOrderIds: Order ID, use commas to indicate multiple orderIds. Maximum of 100 ids.

  spotCancelTips: The actual result of the cancellation request needs to be checked by order status or match result endpoints after submitting the request.(It is a synchronous settlement API)
  spotFastCancelTips: The actual result of the cancellation request needs to be checked by order status or match result endpoints after submitting the request.(It is an asynchronous settlement API)
  spotNormalCancelTips: The actual result of the cancellation request needs to be checked by order status or match result endpoints after submitting the request.
  spotTradesHistoryTips: If <code>startTime</code> is not specified, you can only query for records in the last 7 days. If you want to query for records older than 7 days, <code>startTime</code> is required.
  spotTradesHisotryTips_order: If the <code>orderId</code> is null, <code>fromTicketId</code> is passed, and <code>toTicketId</code> is null, then the result is sorted by <code>ticketId</code> in ascend. Otherwise, the result is sorted by <code>ticketId</code> in descend.
  spotOrdersHistoryTips: |
    If <code>startTime</code> and <code>endTime</code> are both not specified, it returns last 7 days records by default. 3 days records for institutional clients.</br>
    Supports fetching 3 months worth of data per request. Returns data up to 6 months old.
  #spot_ws_v1
  spot_price: Price
  spot_symbol: Trading pair
  spot_quantity: Quantity
  spot_side: True indicates buy side is taker, false indicates sell side is taker
  spot_side_private: BUY indicates buy order, SELL indicates sell order
  spot_order_client_id: User-generated order ID
  spot_first: First message for this topic since subscription
  spot_timestamp: Timestamp
  spot_timestamp2: timestamp(ms). The time that system generates the data.
  spot_wss_ts: The time that message is sent out
  spot_v3_trade_v: TradeId
  spot_close: Close price
  spot_high: High price
  spot_low: Low price
  spot_open: Open price
  spot_volume: Trading volume
  spot_quote_volume: Trading quote volume
  spot_version: Version
  spot_buy: Best bid price, quantity
  spot_sell: Best ask price, quantity
  spot_bid_v3: Bid price, quantity
  spot_ask_v3: Ask price, quantity
  spot_buys: Bid prices & quantities in descending order (best price first)
  spot_sells: Ask prices & quantities in ascending order (best price first)
  spot_binary: Compressed or not. Defaults to <code>false</code>
  spot_kline_type: Interval
  spot_topic: Topic name
  spot_dumpScale: Dump scale
  spot_sendTime: Timestamp of data sent
  spot_buy_price: Best bid price
  spot_buy_qty: Bid quantity
  spot_sell_price: Best ask price
  spot_sell_qty: Ask quantity
  spot_balance_change: Wallet balance change
  spot_asset: coin name
  spot_available_qty: Available balance
  spot_frozen_qty: Reserved for orders
  spot_event_type: Event type
  spot_allow_trade: Allow trade
  spot_allow_withdraw: Allow withdraw
  spot_allow_deposit: Allow deposit
  spot_cumulative_trade: Total filled value
  spot_event_timestamp: Event time
  spot_order_create_timestamp: Order creation time
  spot_order_id: Order ID
  spot_recent_qty: Last filled quantity
  spot_cumulative_qty: Total filled quantity
  spot_recent_price: Last traded price
  spot_fee_symbol: Asset type in which fee is paid
  spot_m: true if the order type is LIMIT_MAKER
  spot_gains: Change
  spot_kline_latest_records: It only returns the results from latest 3500 candles regardless of what interval is specified

  spot_public_websocket_frequency_realtime: Pushes data in <b>real-time</b>.

  spot_public_websocket_frequency_100: Pushes data at a frequency of <b>100ms</b>.
  spot_public_websocket_frequency_300_delay_400: Pushes data at a frequency of <b>300ms</b>. Message received with a maximum delay of <b>400ms</b>.
  spot_public_websocket_frequency_300_delay_650: Pushes data at a frequency of <b>300ms</b>. Message received with a maximum delay of <b>650ms</b>.
  spot_public_websocket_frequency_250_delay_300: Pushes data at a frequency of <b>250ms</b>. Message received with a maximum delay of <b>300ms</b>.
  spot_public_websocket_frequency_near_realtime: Pushes data near <b>real-time</b>.

  spot_websocket_trade_desc_v1: |
    <p>This topic pushes raw data for each trade.</p>
    <p>After a successful subscription message, the first data message (as indicated by <code>"f": true</code>) consists of the last 60 trades. After this payload (<code>"f": false</code>), only new trades are pushed.</p>
    <p>Variable <code>v</code> is a trade ID which is unique across the platform.</p>

  websocketrealtimes: realtimes
  websocketTickers: tickers
  spot_websocket_ticker_desc_v1: |
    The 24-hr statistics of a trading pair.
#  websocketkline: kline
  spot_websocket_kline_desc_v1: |
    <p>This topic pushes kline data.</p>
    <p>To subscribe to different intervals, append your desired interval to the topic name. For 1 minute klines, set the topic as <code>kline_1m</code>, for 1 hour klines use <code>kline_1h</code>, etc. Available intervals are listed <a href="#kline-interval-interval">here</a>.</p>

  spot_broker_info: brokerinfo return
  websocketdepth: depth

  spot_websocket_orderbook_desc_v1: |
    <p>This topic pushes order book data.</p>
    <ul>
      <li>Snapshot depth: 200 per side.</li>
      <li>Events which trigger a message push to this topic:
        <ul>
          <li>Order enters order book</li>
          <li>Order leaves order book</li>
          <li>Order quantity changes</li>
          <li>Order filled</li>
        </ul>
      </li>
    </ul>

  websocketmergeddepth: mergedDepth
  spot_websocket_orderbook_merge_desc_v1: |
    <p>This topic pushes aggregated order book data.</p>
    <p><code>dumpScale</code> must be specified for this endpoint. It refers to the number of decimal places, eg <code>1</code> for <code>50000.5</code> or <code>0</code> for <code>50000</code>.</p>
    <p>Pushes a depth of 40 items per side, regardless of the <code>dumpScale</code>.</p>

  websocketdiffdepth: diffDepth
  websocketLtNetvalue: lt
  spot_websocket_lt_nav_desc_v1: Leveraged Token Net Value Push. Pushes data at a frequency of 300ms. Message received with a maximum delay of 400ms.
  spot_websocket_orderbook_delta_desc_v1: |
    <p>Changes (if any) in the bid–ask spread of the order book will be pushed. The first message pushes a depth of 200 per side. The following messages act as delta messages, which represent updates to the order book relative to the last response.</p>
    <p>For a Python example of the logic to maintain a local order book with this topic, see <a href="https://github.com/bybit-exchange/pybit/blob/8a647208dbdce1519de3fbce172d3dcf2141ccaf/pybit/__init__.py#L2279">here</a>.</p>
    <p>If the quantity=0, it indicates that there are no longer any orders at this price level. If the quantity>0, the quantity for this price has changed.</p>
    <p>Assume the response includes the following:</p>
    <p>&nbsp;&nbsp;> ["0.00181860", "155.92000000"]// price, quantity</p>
    <p>If the next payload is:</p>
    <p>&nbsp;&nbsp;> ["0.00181860", "12.3"]</p>
    <p>This means that the quantity corresponding to this price has been updated.</p>
    <p>If the next payload is:</p>
    <p>&nbsp;&nbsp;> ["0.00181860", "0"]</p>
    <p>This means that the price has already changed (there are no orders on this side at this price level).</p>

  spot_websocket_many_symbol_desc: support many symbol, separate with ','.
  spot_websocket_subscribe_desc: |
    <p>After establishing the connection, you can subscribe to a new topic by sending a JSON request. The request formats are as follows:</p>
    <p>ws.send('{"symbol":"BTCUSDT","topic":"trade","event":"sub","params":{"binary":false}}');</p>
    <p> Multiple assets supported, separated by ',' (Not applicable for V2).</p>
    <p>ws.send('{"symbol":"BTCUSDT,ETHUSDT","topic":"trade","event":"sub","params":{"binary":false}}');</p>
  spot_websocket_subscribe_desc_v3: |
    <p>After establishing the connection, you can subscribe to a new topic by sending a JSON request. The request formats are as follows:</p>
    <p>ws.send('{"req_id": "10001", "op": "subscribe", "args": ["trade.BTCUSDT", "trade.ETHUSDT", "tickers.BTCUSDT", "bookticker.BTCUSDT"]}')</p>
  spot_websocket_subscribe_args_warning_v3: You can pass a maximum of <b>10</b> args in <code>args</code>
  spot_websocket_unsubscribe_desc: |
    <p>After successful subscription, you can unsubscribe by sending a JSON request. The request formats are as follows:</p>
    <p>ws.send('{"symbol":"BTCUSDT","topic":"trade","event":"cancel","params":{"binary":false}}');</p>
  spot_websocket_unsubscribe_desc_v3: |
    <p>After successful subscription, you can unsubscribe by sending a JSON request. The request formats are as follows:</p>
    <p>ws.send('{"req_id": "10002", "op": "unsubscribe", "args": ["trade.BTCUSDT""]}');</p>

  #user
  spot_private_topics_auth_sub: Sending the <a href="#t-websocketauthentication">authentication message</a> automatically subscribes you to all 4 private topics.

  outboundAccountInfo: outboundAccountInfo
  outboundAccountInfo_desc: Pushes data about your account.
  spotV3_outboundAccountInfo_desc: |
    <p>This topic pushes account information</p>
    <p><b>Push frequency</b>: real-time</p>
    <p><b>Topic</b>: <code>outboundAccountInfo</code></p>

  executionReport: executionReport
  spotV3_order_desc: |
    <p>This topic pushes order information，avg.filledPrice = Z / z</p>
    <p><b>Push frequency</b>: real-time</p>
    <p><b>Topic</b>: <code>order</code></p>
  executionReport_desc: Pushes data about your orders. <code>Z</code> divided by <code>z</code> equals the average filled price.
  stop_executionReport: stop_executionReport
  stop_executionReport_desc: |
    Pushes data about your TP/SL orders. It will be triggered as long as tp/sl order status is changed.<br>
    Pushes data in <b>real-time</b>
  spotV3_stopOrder: |
    <p>This topic pushes conditional order, TP/SL order information placed by <b>web/app</b> channel, and TP/SL order information placed by <b>open api</b> channel. It'll be triggered as long as order status is changed</p>
    <p><b>Push frequency</b>: real-time</p>
    <p><b>Topic</b>: <code>stopOrder</code></p>
  websocketSpotStopOrder: stopOrder
  websocketSpotOrder: order

  ticketInfo: ticketInfo
  ticketInfo_para: |
    Pushes data about your trades (fills). When an order is filled, you will receive two messages: one from <code>ticketInfo</code>, and one from <code>executionReport</code>
  spotV3_ticketInfo_desc: |
    <p>This topic pushes filled trades information. When an order is filled, you will receive two messages: one from <code>ticketInfo</code>, and one from <code>order / stopOrder</code></p>
    <p><b>Push frequency</b>: real-time</p>
    <p><b>Topic</b>: <code>ticketInfo</code></p>
  spot_ticket_info_maker: Is MAKER. true=maker, false=taker
  spot_ticket_info_side: BUY or SELL
  spotLtSymbolNav: Please make sure to add "NAV" as a suffix to the name of the pair you're querying
  spotTotalPositionValue: Total position value = basket value * total circulation
  spotLoan: Basket loan


  #spot_ws_v2

  websocketv2bookticker: bookTicker
  spot_websocket_ticker_desc_v2: Best bid price and best ask price
  spot_websocket_ticker_desc_v3: |
    <p>Best bid price and best ask price</p>
    <p><b>Push frequency</b>: 100ms</p>
    <p><b>Topic</b>: <code>bookticker.{symbol}</code></p>

  websocketv2kline: kline
  spot_websocket_kline_desc_v2: |
    <p>The topic name is <code>kline</code>. To subscribe to different intervals, pass your desired interval with the <code>klineType</code> parameter. Available intervals are listed <a href="#kline-interval-interval">here</a>.</p>
  spot_websocket_kline_desc_v3: |
    <p>The topic name is <code>kline</code>. To subscribe to different intervals, pass your desired interval with the <code>klineType</code> parameter. Available intervals are listed <a href="#kline-interval-interval">here</a>.</p>
    <p><b>Push frequency</b>: real-time</p>
    <p><b>Topic</b>: <code>kline.{interval}.{symbol}</code></p>
  websocketv2trade: trade
  spot_websocket_trade_desc_v2: |
    <p>This topic pushes raw trade information; each trade has a unique buyer and seller.</p>
    <p>Variable "v" acts as a tradeId. This variable is shared across different symbols; however, each ID is unique. For example, suppose in the last 5 seconds 3 trades happened in ETHUSDT, BTCUSDT, and BHTBTC. Their tradeId (which is "v") will be consecutive: 112, 113, 114.</p>
  spot_websocket_trade_desc_v3: |
    <p>This topic pushes raw trade information; each trade has a unique buyer and seller.</p>
    <p>Variable "v" acts as a tradeId. This variable is shared across different symbols; however, each ID is unique. For example, suppose in the last 5 seconds 3 trades happened in ETHUSDT, BTCUSDT, and BHTBTC. Their tradeId (which is "v") will be consecutive: 112, 113, 114.</p>
    <p><b>Push frequency</b>: real-time</p>
    <p><b>Topic</b>: <code>trade.{symbol}</code></p>
  websocketv2depth: depth
  spot_websocket_orderbook_desc_v2: |
    <p>Market depth data for a trading pair: </p>
    <ul>
      <li>Snapshot depth: 40 each for asks and bids.</li>
      <li>Events trigger order book version change:
        <ul>
          <li>order enters order book</li>
          <li>order leaves order book</li>
          <li>order quantity changes</li>
          <li>order filled</li>
        </ul>
      </li>
    </ul>
  spot_websocket_orderbook_desc_v3: |
    <p>Market depth data for a trading pair: </p>
    <ul>
      <li>Snapshot depth: <b>40</b> each for asks and bids.</li>
      <li>Events trigger order book version change:
        <ul>
          <li>order enters order book</li>
          <li>order leaves order book</li>
          <li>order quantity changes</li>
          <li>order filled</li>
        </ul>
      </li>
    </ul>
    <p>Pushes snapshot data only</p>
    <p><b>Push frequency</b>: 100ms</p>
    <p><b>Topic</b>: <code>orderbook.40.{symbol}</code>

  websocketv2realtimes: realtimes
  spot_websocket_symbol_ticker_desc_v2: |
    The 24-hr statistics of a trading pair.
  spot_websocket_symbol_ticker_desc_v3: |
    <p>The 24-hr statistics of a trading pair.</p>
    <p><b>Push frequency</b>: real-time</p>
    <p><b>Topic</b>: <code>tickers.{symbol}</code></p>

  # Transfer API Data Endpoints
  transfer_api: Transfer Data Endpoints
  transfer_para: The following API data endpoints require authentication.
  createinternaltransfer: Create Internal Transfer
  trigger_transfer: Transfers funds between the different sections of an individual's account (<i>not</i> between subaccounts). For example, between the spot and derivatives accounts.
  transfer_api_notice: |
    <p>Please note that this interface supports Futures Account, Spot Account, Investment Account.
    The <code>transfer_in</code> and <code>transfer_out</code> account types cannot be the same.</p>
    <p>You may transfer USDT from <b>SPOT</b> ONLY after upgraded to Unified Margin Account.</p>
  transfer_api_v3_notice: |
    <p>Please note that this interface supports Contract Account, Spot Account, Investment Account.
    The <code>transferIn</code> and <code>transferOut</code> account types cannot be the same.</p>
    <p>You may transfer USDT from <b>SPOT</b> ONLY after upgraded to Unified Margin Account.</p>
  universaltransferunderstanding_notice: A universal transfer enables you to transfer funds directly between two subaccounts (rather than sub -> master -> sub) and any <a href="#account-type-from_account_type-to_account_type">account type</a> (<code>CONTRACT</code>, <code>SPOT</code>, etc).
  enableuniversaltransfer_notice: Use this endpoint to enable subaccounts to take part in a universal transfer. It is a one-time switch which, once thrown, enables a subaccount permanently. If not set, your subaccounts cannot use universal tranfers.
  universaltransfer_join_notice: To send a transfer which is <a href="#account-type-from_account_type-to_account_type">account type</a> & parent/sub agnostic, use the <a href="#t-createuniversaltransfer">Create Universal Transfer</a> endpoint.
  row_comment_transfer_id: UUID, which is unique across the platform
  row_comment_accounttype: Account type

  createsubaccounttransfer_api_notice: |
    A subaccount can only be attributed to a parent account.
  createsubaccounttransfer_api_v3_notice: |
    A subaccount can only be attributed to a parent account.
  createsubaccounttransfer: Create Subaccount Transfer
  subMember_trigger_transfer: Transfers funds between the parent and child (sub) accounts.
  row_comment_to_subUserId: Subaccount
  row_comment_transfertype: Determines the direction of transfer

  querytransferlist: Query Internal Transfer List
  row_comment_transferstatus: Transfer status
  row_comment_pageaction: Turn page
  row_comment_to_limit: Number of records
  row_comment_to_timestamp: timestamp

  querysubaccounttransferlist: Query Subaccount Transfer List
  querysubaccountlist: Query Subaccount List
  in: "transfer from main account to subaccount"
  out: "transfer from subaccount to main account"
  accountType_spot: ""
  accountType_contract: ""
  accountType_investment: "- ByFi Account"
  accountType_unified: "- UMA or UTA"
  accountType_usdc: "- USDC Derivatives Account"
  accountType_fund: "- Fund Account (sub account is not supported temporarily)"

  # withdraw status
  withdrawStatus_securityCheck: ""
  withdrawStatus_pending: ""
  withdrawStatus_success: ""
  withdrawStatus_cancelByUser: ""
  withdrawStatus_Reject: ""
  withdrawStatus_Fail: ""
  withdrawStatus_BlockchainConfirmed: ""

  enableuniversaltransfer: Enable Universal Transfer
  row_comment_transferable_sub_ids: A comma-separated list of subaccount UIDs, for example "123,45,14,26,46"
  createuniversaltransfer: Create Universal Transfer
  row_comment_from_memberId: From UID
  row_comment_to_memberId: To UID
  row_comment_from_accountType: From account type
  transferCoinList_fromAccountType: From account type. Ensure from/to are different account type
  row_comment_to_accountType: To account type
  transferCoinList_toAccountType: To account type. Ensure from/to are different account type
  getSubmemberIdList: Get Submember Id List
  queryUniverseTransferList: Query Universal Transfer List
  queryUniverseTransferList_para: Only transfers made with the universal transfer API will be returned by this endpoint. Transfers made by other endpoints <i>will not</i> be returned.
  row_comment_sub_user_id_list: List of all subaccounts
  row_comment_transferable_sub_ids_list: List of subaccounts that are universal transfer-enabled
  row_comment_transfer_coin_list: The coins are enabled transfer between accounts
  row_comment_bonus: The bonus
  row_comment_withBonus: Whether query bonus or not. <code>0</code>：false; <code>1</code>：true; Not query is in default
  row_comment_balanceQuery_memberId: User Id. It is <b>required</b> when you use master api key to check sub account coin blance
  row_comment_spot_status: Spot account status. <code>1</code>：normal; <code>0</code>：forbidden
  row_comment_frozen: Freeze amount
  row_comment_free: Free balance
  row_comment_withdraw: Amount in withdrawing
  querytransfercoinlist: Transferable coin list
  queryaccountcoinbalance: Coin balance in account
  queryassetinfo: Asset info

  #Withdraw/Deposit API Data Endpoints -- start
  withdraw_and_deposit: Withdraw and Deposit Endpoints
  allowDepositList: Supported Deposit List Query Endpoints
  allowDepositListDesc: It is a public endpoints. Coin and chain must be paired in the input parameter. Otherwise, it is regarded as an unconditional query.
  coinShowName: Coin show name
  minDepositAmount: Minimum Deposit Amount
  allowDepositCoin: Deposit Coin. Coin and chain must be paired. Otherwise, it is regarded as an unconditional query
  allowDepositChain: Deposit Chain Name. Coin and chain must be paired. Otherwise, it is regarded as an unconditional query
  allowDepositPageIndex: |
    Page Index: used for pagination.  Default value: 1
  allowDepositPageSize: |
    Number of items per page. Default value: 10
  depositsrecordquery: Query Deposit Records
  depositsrecorddesc: |
    Rules:
    <ul>
      <li>Only query the deposit records of spot accounts order by id in reverse order.</li>
      <li>The maximum difference between the start time and the end time is 30 days.</li>
      <li>Support to get deposit records by Master or Sub Member Api Key</li>
    </ul>
  subDepositRecordDesc: |
    Rules: Query sub account deposit records by <b>master</b> account api key. If you want to use sub account api key to query, please use <a href="#t-depositsrecordquery">Query Deposit Records</a> endpoint
  subdepositRecordQueryByMaster: Query Sub Deposit Records By Master Key
  depositwithdrawstarttime: |
    start time (In Seconds).  Default value: 30 days before the current time
  depositwithdrawendtime: |
    end time (In Seconds). Default value: current time
  depositcursorinfo: |
    cursor infomation: used for pagination.  Default value: ""
  depositcurrencyinfo: |
    coin name: for example, BTC.  Default value: all
  depositlimitinfo: |
    Number of items per page, 0< limit <=50.  Default value: 50
  depositdirectioninfo: |
    prev page: Prev, next page: Next.  Default value: Next
  deposit_response_chainname: chain name
  deposit_response_amt: deposit amount
  deposit_response_txid : |
    transaction ID. It is <code>""</code> when deposit failed or deposit cancelled
  deposit_response_status: |
    <p>0=unknown<br>
    1=ToBeConfirmed <br>
    2=processing <br>
    3=success <br>
    4=deposit failed</p>
  deposit_target_addr: deposit target address
  deposit_response_tag: tag of deposit target address
  deposit_response_depositFee: deposit fee
  deposit_response_updateTime: last updated time
  deposit_confirmations: number of confirmation blocks
  deposit_tx_index: transaction sequence number
  deposit_block_hash: hash number on the chain
  deposit_response_cursor: |
    cursor information: used for pagination. Default value: ""
  deposit_response_currency_info: deposit coin

  withdrawrecordquery: Query Withdraw Records
  withdrawrecorddesc: |
    Rule: order by id in reverse order. The maximum difference between the start time and the end time is 30 days.
  withdraw_id: withdrawal id. (withdraw request ID in Response Parameters of Withdrawal endpoint)
  withdraw_response_amt: withdrawal quantity
  withdraw_response_chainname: chain name
  withdraw_response_txid : |
    transaction ID. It returns <code>""</code> when withdrawal failed, withdrawal cancelled or internal transfer
  withdraw_response_status: |
    <table border=1><tr><th>Return values</th><th>Status correspond to the client</th><th>status</th></tr>
    <tr><td>ToBeConfirmed</td><td></td><td>SecurityCheck</td></tr>
    <tr><td>UnderReview</td><td>SecurityCheck</td><td>SecurityCheck</td></tr>
    <tr><td>UnderFinalReview</td><td>SecurityCheck</td><td>SecurityCheck</td></tr>
    <tr><td>Pending</td><td>Pending</td><td>Pending</td></tr>
    <tr><td>Packed</td><td>Pending</td><td>Pending</td></tr>
    <tr><td>Download</td><td>Pending</td><td>Pending</td></tr>
    <tr><td>Broadcasted</td><td>Pending</td><td>Pending</td></tr>
    <tr><td>Success</td><td>success</td><td>success</td></tr>
    <tr><td>CancelByUser</td><td>cancelByUser</td><td>CancelByUser</td></tr>
    <tr><td>Reject</td><td>Reject</td><td>Reject</td></tr>
    <tr><td>Expire</td><td>Fail</td><td>Fail</td></tr>
    <tr><td>Processing</td><td>Pending</td><td>Pending</td></tr>
    <tr><td>Fail</td><td>Fail</td><td>Fail</td></tr>
    <tr><td>AutoReject</td><td>Reject</td><td>Reject</td></tr>
    </table>
  withdraw_resp_status: withdrawal status
  withdraw_target_addr: withdrawal target address. It shows email or mobile number for internal transfer
  withdraw_response_tag: tag of withdrawal target address
  withdraw_response_withdrawFee: withdrawal fee
  withdraw_response_updateTime: withdrawal status updated time
  withdraw_response_createTime: withdrawal create time
  withdraw_response_cursor: |
    cursor information: used for pagination. Default value: ""
  withdraw_response_currency_info: withdrawal coin

  coin_info_query: Query Coin Information
  coin_info_desc: |
    Rules: order by id in reverse order, no pagination required. The frequency limit is consistent with the current online interface.
  coin_info_coin: Coin
  coin_info_frozen_balance: frozen balance
  coin_info_name: Name
  coin_info_remain_amt: Current maximum withdrawal amount
  coin_info_chain_type: chain type
  coin_info_confirmation: deposit confirmation number
  coin_info_withdraw_fee: withdraw fee.  if withdraw fee is empty, It means that this coin does not support withdrawal
  coin_info_deposit_min: minimum deposit amount
  coin_info_withdraw_min: minimum withdrawal amount

  asset_info_query: Query Asset Information
  asset_info_account_type: |
    Account type. Default value: ACCOUNT_TYPE_SPOT
  asset_info_status: |
    <p>status: ACCOUNT_STATUS_NORMAL -- NORMAL <br>
    ACCOUNT_STATUS_UNSPECIFIED -- ABNORMAL </p>
  asset_info_frozen_balance: frozen balance
  asset_info_available_balance: available balance
  asset_info_withdraw: temporarily ""

  withdraw_info: Withdraw
  withdraw_info_para: <ul><li>Currently we are upgrading the fund account, if your funding account has been upgraded, the API will now be withdrawn via <b>funding account</b>, please transfer funds to the funding account first, and then withdraw cash.</li><li>If your funding account has not been upgraded, the API will still uses <b>spot account</b> to withdraw cash.</li><li>It is expected that in the next two weeks, all users' funding account upgrades will be completed.</li></ul>
  withdraw_addr: address. Address verification whether there is a whitelist of withdrawal addresses
  withdraw_tag: Need to fill in if there is a tag
  withdraw_amount: |
    withdraw amounts. Rules: Greater than or equal to the minimum withdrawal amount. The minimum withdrawal amount can be obtained from the Coin Info Query API
  withdraw_request_id: withdraw request ID

  cancel_withdraw: Cancel withdrawal
  cancel_withdraw_response: |
    result（cancel application result: <code>1</code> SUCCESS, <code>0</code> FAIL）

  deposit_addr_info: Query Master Acct Deposit Address Information
  sub_deposit_addr_info: Query Sub Acct Deposit Address Information
  deposit_addr_info_desc: |
    Rules: Use <b>master</b>'s api key to query sub acct deposit address
  deposit_addr_chain_info: |
    chain type: can be obtained from coin info query api; Default value: all type
  deposit_coin: deposit coin
  deposit_address: deposit address
  deposit_tag: deposit tag
  #Withdraw/Deposit API Data Endpoints -- start

  accountType_option: "- USDC Account"



  ###usdc contract
  usdc: USDC Contract
  usdcList: list
  usdcSymbol: Contract name
  usdcExecValue: order value of filled orders
  usdcPositionStatus: Position status
  usdcTickerInfo: Latest Symbol Info
  usdcAllTickerInfo: Latest Symbol Info By BaseCoin
  usdcAllTickerInfo_para: Return all ticker info by passed base coin
  usdcOrderBookSide: Direction.
  usdcPerpOrderBookSide: Direction, Buy or Sell
  usdcSize: size
  usdcOrderBook: OrderBook
  usdcPeriod: |
    <p>Data refresh frequency. Enum: 1 3 5 15 30 60 120 240 360 720 "D" "M" "W"</p>

  usdcStartTime: Start time, unit in seconds
  usdcStartTime_ms: Start time, unit in milliseconds
  usdcLimit: Number of data per page; the max. value is 200, and the default value is 200
  usdcLimit_max1000_default500: Number of data per page; the max. value is 1000, and the default value is 500
  usdcVolume: Trading volume

  usdcCategory: Type. OPTION or PERPETUAL
  usdcOptionType: Call or put, required for Options
  usdcOpen: Open price
  usdcOpenTime: Start time
  usdcTurnover: Turnover
  usdcLow: 24-hour low
  usdcHigh: 24-hour high
  usdcClose: 24-hour high
  usdcPrice: price
  category: Type of derivatives product. linear or option.
  usdcBid: Best bid price
  usdcBidIv: Implied volatility for best bid
  usdcBidSize: Bid quantity
  usdcAsk: Best ask price
  usdcAskIv: Implied volatility for best ask
  usdcAskSize: Ask quantity
  usdcLastPrice: Last traded price
  usdcOpenInterest: Open interest
  usdcOrderPnl: The total trade profit and loss for this order
  usdcIndexPrice: Index Price
  usdcMarkPrice: Mark Price
  usdcMarkPriceIv: Implied volatility for mark price
  usdcIv: iv. In extreme cases, due to abnormal data acquisition, the IV may be empty, which must be compatible with empty strings.
  usdcChange24h: 24-hour change
  usdcHigh24h: 24-hour high
  usdcLow24h: 24-hour low
  usdcVolume24h: 24-hour trading volume
  usdcTurnover24h: 24-hour turnover
  usdcTotalVolume: Total trading volume

  usdcTotalTurnover: Total turnover
  usdcPredictedDeliveryPrice: Est. delivery price. It has value only 30 mins before delivery.
  usdcUnderlyingPrice: Underlying price
  id: id
  side: Direction
  usdcOrderPrice: Order price
  usdcExecPrice: Order executed price
  usdcExecQty: Order executed size
  usdcPlaceOrderPrice: Order price.For Perpetual, order price can not be empty. For option, if placeType is 2, the final order price will be calculated by Implied volatility
  usdcOrderQty: Order quantity
  time: Timestamp, unit in milliseconds
  cursor: API pass-through
  usdcBaseCoin: Base currency
  usdcStatus: Symbol status
  usdcAccountInfo: Wallet Info
  usdcBaseCoin_new: Base coin. Returns all records with base coin. If not passed, it returns records with BTC by default
  usdcBaseCoin_transLog: Base coin.<li>When type=<code>TRANSFER_IN</code>or<code>TRANSFER_OUT</code>，<code>category</code> must be <b>null</b></li><li>When <code>type</code> is null or other types，<ol><li>If <code>category</code>is null，then baseCoin does not work</li><li>If category=<code>option</code>, it returns BTC by default without baseCoin passed</li><li>If category=<code>PERPETUAL</code>, It returns all coins without baseCoin passed</li></ol></li>
  usdcBaseCoin_cancel: Base coin. Cancel all base coin related orders. If not passed, it'll cancel all BTC related orders
  usdcBaseCoinUM_transLog: Base coin. <li>If<code>type</code>=TRANSFER_IN, TRANSFER_OUT, INTEREST, CURRENCY_BUY, CURRENCY_SELL, FEE_REFUND, BONUS OR INTEREST, this field is useless. If passed, then return null.</li> <li>If <code>type</code> is other enums, it returns all coins without baseCoin passed</p>
  usdcQuoteCoin: Quote currency
  usdcSettleCoin: Settle Coin
  usdcTakerFee: Taker fee
  usdcMakerFee: Maker fee
  minOrderSizeIncrement: Min. order size increment
  usdcBasicDeliveryFeeRate: Basic Delivery Fee Rate
  usdcTakerFeeRate: Taker fee rate
  usdcMakerFeeRate: Maker fee rate
  minLeverage: Min. leverage
  maxLeverage: Max. leverage
  leverageStep: Modification to leverage
  minPrice: Min. order price
  maxPrice: Max. order price
  tickSize: Tick size
  minTradingQty: Min. order quantity
  maxTradingQty: Max. order quantity
  qtyStep: Min. order quantity increment
  deliveryFeeRate: Delivery fee rate
  deliveryTime: Delivery time, unit in milliseconds
  timestamp: Timestamp, unit in milliseconds
  usdcValue: Order value

  buyRatio: Long position ratio
  sellRatio: Short position ratio

  direction: |
   <p>prev: prev page, next: next page.</p>
  deliveryPrice: Delivery price
  sessionAvgPrice: Settlement price
  perpSessionAvgPrice: Average entry price during session
  settlementTime: Settlement time, unit in milliseconds
  usdcDeliveryLimit: Number of data per page; the max. value is 200, and the default value is 50


  startTime:  Start time, unit in seconds
  openTime: Start time
  open: Open price
  high: 24-hour high
  low: 24-hour low
  close: Close price
  usdcOpenInterestPeriod: Data refresh frequency. 5min, 15min, 30min, 1h, 4h, 1d
  usdcOpenInterestLimit: Number of data per page; the max value 200, and the default value is 50
  usdcBigDealLimit: Number of data returned; the max. value is 100, and the default value is 500
  usdcAccountRatioLimit: Number of data returned; the max. value is 500, and the default value is 50
  usdcAccountRatioPeriod: Data refresh frequency. 5min, 15min, 30min, 1h, 4h, 1d

  delta: Delta value
  gamma: Delta value
  vega: Vega value
  theta: Theta value

  usdcPlaceOrder: Place Order
  usdcBatchOrders: Place Batch Orders
  usdcReplaceOrder: Modify Order
  usdcBatchReplaceOrders: Batch Modify Orders
  usdcCancelOrder: Cancel Order
  usdcBatchCancelOrders: Batch Cancel Orders
  usdcCancelAll: Cancel All Active Orders
  usdcQryUnOrPartFilled: Query Unfilled/Partially Filled Orders
  usdcQryUnOrPartFilled_new: Query Unfilled/Partially Filled Orders(real-time)
  usdcQryUnOrPartFilled_new_para: |
    <p>This is <code><b>GET</b></code> request, and pass <code>orderLinkId</code> could only query current active orders.<p>
    <p>It's able to query orders in last 7 days including fully/partial filled & cancelled orders if <code>orderId</code> is passed. We recommend to save the response into your database.<p>
    <p>Query priority: <code>orderId</code> > <code>orderLinkId</code> > <code>baseCoin</code> > both null.</p>
    <p><code>cursor</code> is not necessary when do first querying. However, it must be passed with the exact same value from response while getting next page.</p>
  usdcQryOrderHistory: Query Order History
  usdcFundingApi: Funding API

  account_wallet: Account API
  transactionLog: Transaction Log
  accountInfo: Account Info
  assetInfo: Asset Info
  setMarginMode: Set Margin Mode
  setMarginModeNotice: If USDC derivatives account balance is greater than X, you can open PORTFOLIO_MARGIN, and if it is less than Y, it will automatically close PORTFOLIO_MARGIN and change back to REGULAR_MARGIN. X and Y will be adjusted according to operational requirements.
  setMarginModeWarning: |
    Rest API returns the result of checking prerequisites. You could get the real status of margin mode change by subscribing <a href="#t-websocketservice">margin mode</a>.
  queryMarginMode: Query Margin Mode
  queryMMPState: Query MMP state

  accountPosition: Positions API
  queryPosition: Query My Positions
  setTakeProfitAndStopLoss: Set TP/SL
  changeTakeProfitAndStopLoss: Modify TP/SL
  setPositionLeverage: Set Leverage
  queryClosingProfitAndLoss: Query Closed P&L
  queryDeliveryLogs: Query Delivery History
  querySettleLogs: Query Settlement History
  queryPositionInfo: Query Positions Info Upon Expiry

  riskLimit: Risk Limit API
  queryRiskLimits: Query Risk Limit
  setRiskLimits: Set Risk Limit

  usdcFundingRate: Funding Rate API
  queryLastSessionFundingRate: Query Session Funding Rate
  queryLastSessionFundingInfo: Query Session Funding Fees
  predictedFundingRateAndFee: Query Est. Funding Rate and Funding Fees

  trans_in_out: Transfer In/Transfer Out

  websocket_codequote_auth_usdc: |
    Send auth request for authentication after establishing a connection.
  usdc_websocket_para_endpoint: |
    Base endpoints:
    <ul>
    <p>
      <li>Testnet Public:
        <ul>
          <li><span id="testnet_option_public_address">wss://stream-testnet.bybit.com/trade/option/usdc/public/v1</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet_option_public_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
        </ul>
      </li>
      <li>
        Testnet Private:
        <ul>
          <li><span id="testnet_option_private_address">wss://stream-testnet.bybit.com/trade/option/usdc/private/v1</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet_option_private_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
        </ul>
      </li>
    </p>
    <p>
      <li>Mainnet public (both endpoints are available):<br/>
        <ul>
          <li><span id="mainnet_option_public_address">wss://stream.bybit.com/trade/option/usdc/public/v1</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_option_public_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
          <li><span id="mainnet_option_public_address_2">wss://stream.bytick.com/trade/option/usdc/public/v1</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_option_public_address_2"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
        </ul>
      </li>
    </p>
    <p>
      <li>Mainnet private (both endpoints are available):<br/>
        <ul>
          <li><span id="mainnet_option_private_address">wss://stream.bybit.com/trade/option/usdc/private/v1</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_option_private_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
          <li><span id="mainnet_option_private_address_2">wss://stream.bytick.com/trade/option/usdc/private/v1</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_option_private_address_2"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
        </ul>
      </li>
    </p>
    <p>All requests made to the private API must be authenticated. Requests made to the public API do not require authentication.</p>
    </ul>

  usdc_rate_para_understanding: |
    The frequency limit for Options is no more than 20 requests per second.
  usdc_websocket_subscribe_desc: |
    <p>Subscribing:</p>
    <p>ws.send('{"op":"subscribe","id":"{uuid}","args":["topic1","topic2"]}');</p>
    <p>Response:</p>
    <p>{"id":"{uuid}","success":true,"conn_id":{conn_id},"data":{"successTopics":["topic1"],"failTopics":["topic2"]},"type":"COMMAND_RESP"}</p>
  usdc_websocket_unsubscribe_desc: |
    <p>Remove WebSocket Topic Subscriptions</p>
    <p>ws.send('{"op":"unsubscribe","id":"{uuid}","args":["topic1","topic2"]}')  </p>
    <p>Response: </p>
    <p>{"id":"{uuid}","success":true,"conn_id":{conn_id},"data":{"successTopics":["topic1"],"failTopics":["topic2"]},"type":"COMMAND_RESP"}</p>

    <p>Remove All WebSocket Topic Subscriptions</p>
    <p>{"op":"unSubAll","id":"{uuid}"}</p>
    <p>Response:</p>
    <p> {"id":"{uuid}","success":true,"conn_id":{conn_id},"type":"COMMAND_RESP"}</p>


  usdc_websocket_para_orderbook: |
    <p>Either 25 or 100 orders will be fetched from the bid and ask side of the order book.</p>
    <p>After a successful subscription, it will always provide the snapshot response.</p>
    <p>Topic format:</p>
    <p>Either orderbook25.{symbol} or orderbook100.{symbol} for Option.</p>
    <p>Such as orderbook25.BTC-5NOV21-30000-P or orderbook100.BTC-5NOV21-30000-P</p>

  usdc_websocket_para_orderbook_100: |
    <p>100 orders will be fetched from the bid and ask side of the order book.</p>
    <p>Topic format:</p>
    <p>delta.orderbook100.{symbol}</p>
    <p>Such as delta.orderbook100.BTC-5NOV21-30000-P</p>

  usdc_current_24_total: |
    <p>Fetch the transaction data on Bybit in the last 24 hours.</p>
    <p>After a successful subscription, any changes in the transaction data will be pushed in real-time or once every second. The number of pushes depends on the number of new transaction records within the time frame.</p>
    <p>Subscribe according to the dimension of the currency, such as BTC or ETH</p>
    <p>topic format:</p>
    <p>Option- recenttrades.{baseCoin}, such as: recenttrades.BTC</p>



  usdc_order_book_path: |
    Options: category=option, Perpetual: category=perpetual
  usdc_order_book_desc: Query order book info. Each side has a depth of 25 orders.
  usdc_tick_desc: (Options only)
  usdcExtMap: Map has specific error details when failed, else null.
  usdcErrorCode: Error code. <code>0</code> means success.
  usdcErrorDesc: Error description
  outRequestId: System internal param. Just ignore
  usdcLast500TradeDesc: Returned records are <b>Taker Buy</b> in default.




  usdcOrderType: refer to <a href="#order-type-ordertype">Order type</a> (MARKET is not supported currently for Options)
  usdcOptionOrderType: refer to <a href="#order-type-ordertype">Order type</a>
  usdcOptionPlaceOrderPrice: Order price. For option, if iv has value, the final order price will be calculated by Implied volatility. If orderType is Market, orderPrice is not required.
  optionIv_order: Implied volatility. If orderType is Market, iv is not required, otherwise the order will fail.
  usdcOption_timeInForce: For Market order, it must be <code>ImmediateOrCancel</code>

  optionIv: Implied volatility
  optionPlaceMode: Order mode, can be Advanced or Basic.For Perpetual, can be empty,But for Option, can not be empty.Number 1 is basic and number 2 is advanced.If 1, <code>orderQty</code> and <code>orderPrice</code> can not be empty. If 2, refer to <code>placeType</code>.
  optionPlaceType: Order type, can be price or implied volatility.Number 1 is price and number 2 is implied volatility. If 1,orderQty and orderPrice can not be empty. If 2, <code>iv</code> and <code>orderQty</code> can not be empty.
  optionPlaceType_comment: Place Order type of option
  optionOutRequestId: ID used for idempotence with a max. of 32 characters, required for Options
  orderLinkId: Custom ID used for cross-platform strategy remarks; a max. of 32 characters
  usdcFutureTakeProfit: Take-profit price (Perpetual)
  usdcFutureStopLoss: Stop-loss price (Perpetual)
  slTriggerBy: Price type for stop-loss triggering (Perpetual), default value is last traded price
  tptriggerby: Price type for take-profit triggering (Perpetual), default value is last traded price


  triggerPrice: Trigger price
  triggerBy: Trigger price type
  positionIdx: 0-One-Way Mode, 1-Buy side of both side mode, 2-Sell side of both side mode (Perpetual)
  mmp: Market maker protection; false not enabled (default) and true means enabled.
  reduceOnly: Reduce-only
  closeOnTrigger: Close on trigger, please set it to true for a close order
  takeProfit: Take-profit price (Perpetual)
  stopLoss: Stop-loss price (Perpetual)
  usdcOrderId: Order ID
  uscdOrderType: Order type
  usdcOrderFilter: refer to  <a href="#order-filter-orderfilter">Order Filter</a>
  usdcReplaceOrderId: Order ID, required for Options
  usdcOrderLinkId: Either orderId or orderLinkId is required
  cancelAllResponse: This is used to cancel all active orders. The real-time response indicates whether the request is successful, depending on retCode.
  usdcSymbolInfo: Query for all if blank.
  symbolStatus: Status, can be WAITING_ONLINE, ONLINE, DELIVERING, or OFFLINE

  placeOrderInfo: |
    <p>Place an order using the USDC Derivatives Account. </p>
    <p>The request status can be queried in real-time. </p>
    <p>The response parameters must be queried through a query or a WebSocket response.</p>
  replaceInfo: For Options, at least one of the three parameters — price, quantity or implied volatility — must be input.
  leavesValue: Est. order value of unfilled orders
  cumExecQty: Total filled quantity
  cumExecValue: Total order value of filled orders
  cumExecFee: Total trading fees
  im: Initial margin
  orderStatus: <a href="#order-status-status">Order status</a>
  usdcOptionOrderStatus: <a href="#order-status-orderstatus">orderStatus</a>
  lastExecPrice: Filled price
  lastExecQty: When the order is filled or partially filled, it is filled qty. When the order is canceled, it is unfilled qty.
  basePrice: Market price during order placement
  row_comment_basePrice_v3: It will be used to compare with the value of <code>triggerPrice</code>, to decide whether your conditional order will be triggered by crossing trigger price from upper side or lower side. Mainly used to identify the expected direction of the current conditional order.
  perpBasePrice: |
    When <code>OrderFilter</code> is StopOrder REQUIRED. It will be used to compare with the value of <code>triggerPrice</code>, to decide whether your stop order will be triggered by crossing trigger price from upper side or lower side. Mainly used to identify the expected direction of the current stop order.
  createdAt: Creation time
  cashFlow: The cash flow of the whole order actually occurred, fee is not included
  realisedPnl: Closed P&L
  updatedAt: Update time
  updatedAt_depreciate: Please ignore

  usdcEndTime: End time, unit in milliseconds
  usdcType: Default value is all
  transactionTime: Timestamp, unit in milliseconds

  uscdSize: Positions
  tradePrice: Filled price
  fee: Trading fees
  usdcChange: Change
  usdcFunding: Funding fees
  tradeId: Transaction ID
  feeRate: Taker or maker fee rate
  cashBalance: Cash balance
  blockTradeId: Block trade id


  equity: Equity
  bonus: Bonus
  availableBalance: Available balance
  marginBalance: Margin balance
  accountIm: Initial margin
  accountMm: Maintenance margin
  totalRpl: Total RPL
  assetTotalRpl: Total RPL of the position of the baseCoin
  walletTotalRpl: Cumulative total PNL
  totalSessionUpl: Session UPL
  totalSessionRpl: Session RPL

  totalDelta: Total delta
  totalGamma: Total gamma
  totalVega: Total vega
  totalTheta: Total theta
  usdcIm: Initial margin
  usdcImOption: Initial margin. It returns <code>""</code> when fail to get data
  usdcMm: Maintenance margin
  usdcMmOption: Maintenance margin. It returns <code>""</code> when fail to get data
  sessionUpl: Session UPL. Return null string <code>""</code>
  sessionRpl: Session RPL. Return null string <code>""</code>
  usdcOption_reminder: Please note that many numbers are returned as strings, and null values could be returned as <code>""</code>. You should check if the value is <code>""</code> before casting it from a string to a float.
  usdcMarginMode: Margin mode <a href="#margin-mode-marginmode">Margin Mode</a>
  usdcInfo: Symbol info of liquidated assets under Portfolio Margin

  usdcPositionLimit: Number of data per page; the max. value is 50, and the default value is 20
  usdcMax50Min20: Number of data per page; the max. value is 50, and the default value is 20
  entryPrice: Avg. entry price
  positionPnl: UPL derived from the avg. entry price
  roi: ROI
  tpSlMode: TP/SL settings
  positionValue: Position value
  liqPrice: Liquidation price
  trailingStop: Trailing stop
  bustPrice: Bankruptcy price
  occClosingFee: Position closing fees
  occFundingFee: Est. funding fees
  trakeProfit: Take-profit price
  positionStatus: Position status; can be normal, liquidating, and auto deleveraging
  deleverageIndicator: ADL indicators; can be 1,2,3,4,5
  orderMargin: Pre-occupied order margin
  unrealisedPnl: unrealised pnl
  cumRealisedPnl: Accumulated realised pnl (all-time total)
  cumCommission: Commission

  trailingActive: Trigger price for trailing stop
  slSize: Stop-loss order quantity
  tpSize: Take-profit order quantity

  tradingStopTakeProfit: Take-profit price, cannot be less than zero; zero means canceling TP
  tradingStopLoss: Stop-loss price, cannot be less than zero; zero means canceling SL
  tradingTrailingStop: Trailing stop, cannot be less than zero; zero means canceling TS
  userId: UID
  usdcId: Position ID
  positionMargin: Position margin
  walletBalance: Wallet balance

  usdcLeverage: Must be greater than zero and less than the max. leverage allowed
  endTime: End time, unit in seconds
  execType: <a href="#exec-type-exectype">Execution type</a>
  closedSize: Quantity to close
  cumEntryValue: Position value to close
  cumExitValue: Position value of the filled close order
  avgEntryPrice: Avg. entry price
  avgExitPrice: Avg. exit price
  closedPnl: Closed P&L
  fillCount: Filled quantity

  usdcExpDateRepsonse: |
    format: yyyyMMdd
  expDate: |
    Expiration date. format: yyyyMMdd
  pnl: P&L
  maintainMargin: Maintenance margin
  startingMargin: Initial margin
  section: Interval
  isLowestRisk: Whether it's the lowest risk limit; 0 indicates no and 1 means yes
  riskId: Risk ID
  usdcRiskLimit: Risk Limit
  fundingRateTimestamp: Timestamp
  usdcPreFundingRate: Session funding rate
  execFee: Trading fees
  execTimestamp: Trade time
  predictedFundingRate: Est. funding rate
  predictedFundingFee: Est. funding fees

  tradeTime: Timestamp, unit in milliseconds
  usdcCoin: Asset type
  bidPrice: Best bid price
  bidIv: Implied volatility for best bid
  bidSize: Bid quantity
  askPrice: Best ask price
  askIv: Implied volatility for best ask
  askSize: Ask quantity
  openInterest: Open interest
  markPriceIv: Implied volatility for mark price
  price24Pcnt: 24-hour change
  highPrice24h: 24-hour high
  lowPrice24h: 24-hour low
  volume24h: 24-hour trading volume
  turnover24h: 24-hour turnover
  totalVolume: Total trading volume
  totalTurnOver: Total turnover
  predictedDeliveryPrice: Est. delivery price
  underlying: Underlying

  usdcStart: Start time, unit in seconds
  usdcEnd: End time, unit in seconds
  usdcvolume: 24-hour trading volume
  usdcturnover: 24-hour turnover
  usdcconfirm: Confirmed or not
  usdcautoAddMargin: Whether auto margin replenishment has been enabled
  usdcInsuranceBalance: USDC Insurance Balance
  isIsolated: True means isolated margin, false means cross margin
  execValue: Position value
  excPrice: Filled price
  execQty: Filled quantity
  lastLiquidityInd:  <a href="#lastliquidityind-lastliquidityind">Liquidity</a>
  leavesQty: Unfilled quantity
  createType: Order placement
  cancelType: Order cancelation
  usdcCrossSeq: System internal param. Just ignore
  usdc2CancelType: The type/reason of cancellation. If it is active order, it returns <code>""</code>

  platFormOrderHistory: platform order history
  querySymbolInfo: Contract Info
  markKLine: Mark Price
  indexKLine: Index Price
  premiumKLine: Index Premium
  queryOpenInterest: Open Interest
  bigDealOrder: Large Orders
  accountRatio: Long-Short Ratio
  queryDeliveryPrice: Delivery Price
  querySettlePrice: Settlement Price
  queryDeliveryLog: Query Delivery History
  usdcDeliveryTime: Delivery time
  usdcPosition: position
  usdcDeliveryPrice: Delivery price
  usdcStrike: Strike price
  usdcDeliveryRpl: Delivery Rpl
#  platFormOrderLatest500: 平台歷史交易數據（最近500條）
  usdcLimitMax500: default 500

  websocket_aside_heartbeat_option: |
    <p>The client needs to periodically send a "ping" to Bybit, and the Bybit server returns a heartbeat "pong" to show that the connection between the client and the server is normal. It is recommended to send at least every <b>20s</b>. WSS will actively trigger to break the connection without heartbeat "ping" received in 30s.</p>
    <p>If the client does not receive the heartbeat feedback normally, it needs to check the network connection status and reconnect to the server.</p>

  usdc_disconnect_protection: Disconnection Protection
  usdc_disconnect_protection_para: ONLY VIP clients are allowed to turn on/off DCP
  websocket_aside_dcp_usdc: |
    <p>Based on the heartbeat mechanism, Bybit provides disconnection protection function. If you need to turn it on/off, you can contact your client manager for consultation and application.</p>
    <p>The timing starts from the first disconnection. If the Bybit server does not receive the reconnection from the client for more than <b>10 seconds</b> and resumes the heartbeat "ping", and the client is in the state of "disconnection protection", all the active orders of the client will be canceled all automatically.</p>
    <p>If within <b>10 seconds</b>, the client reconnects and resumes the heartbeat "ping", the timing will be reset and restarted at the next disconnection.</p>

  usdc_auth_para_construct1: <p>1.The parameters are in json format</p>
  resultTotalSize: length of dataList
  dataList: Return the result list, refer to the following fields
  usdcBatchOrdersDesc: Each request supports a max. of four orders. The reduceOnly parameter should be separate and unique for each order in the request.
  bybitTradeHistory: publictradingrecords
  latestSymbolInfo: latestsymbolinfo
  userPositionsInfo: myposition
  userFilledHistory: usertraderecords
  insuranceFund: Insurance Fund
  userOrderHistory: Order History
  userConditionalOrders: Conditional Order
  userGreeks: greeks
  userMmpEvent: mmpevent
  usdc_trade_codequote_snapshot: Snapshot Response Example - format of response
  usdcLastestSymbolInfo: |
    <p>Topic format:</p>
    <p>instrument_info.{symbol},such as: instrument_info.BTC-19NOV21-58000-P</p>
  usdcPositionDesc: |
    <p>topic:</p>
    <p>Option: user.openapi.option.position</p>
  usdcFilledHistory: |
    <p>topic:</p>
    <p>Option: user.openapi.option.trade</p>
  udscGeeksDesc: |
    <p>topic:</p>
    <p>Option: user.openapi.greeks</p>
  usdcMmpEventDesc: |
    <p>topic:</p>
    <p>Option: user.mmp.event</p>

  usdc_trading_symbol_comment: refer to <a href="#t-querysymbolinfo">Query Symbol</a> endpoint
  usdcPriceRule: |
    <ul>
    <li>Must be less than 10 million (<code>10000000</code>)</li>
    <li>Must be a positive number:
    <ul>
    <li><code>40</code> - allowed</li>
    <li><code>40.5</code> - allowed</li>
    <li><code>40.1</code> - not allowed</li>
    <li><code>-30.5</code> - not allowed</li>
    </ul>
    </li>
    </ul>
  usdcQuantity: |
    <ul>
    <li>Must be less than 1 thousand  (<code>1000</code>)</li>
    <li>Must be a positive number:
    <li>Must conform to the symbol's <code>qtyStep</code>.</li>
    <ul>
    <li><code>40</code> - allowed</li>
    <li><code>40.01</code> - allowed</li>
    <li><code>-30.5</code> - not allowed</li>
    </ul>
    </li>
    </ul>
  usdcTptriggerby: Price type for take-profit triggering (Perpetual), Default <code>MarkPrice</code>
  usdcSlTriggerBy: Price type for stop-loss triggering (Perpetual), Default <code>MarkPrice</code>
  usdcTriggerBy: Trigger price type. Default <code>MarkPrice</code>
  usdcSettleLogsDesc: Only for Perpetual
  riskLimitDesc: Only for Perpetual
  usdcQty: order quanty

  usdcStopOrderPrice: |
    <ul>
    <li>Active order<ul>
    <li>Must be an integral multiple of <code>tickSize</code><ul>
    <li>Information about current trading pair (e.g. <code>tickSize</code>) can be queried with the <a href="#t-querysymbol">Query Symbol endpoint</a>.</li>
    <li>Modulo (<code>%</code>) can be used to calculate whether the price will be accepted:<pre class="center-column">
      <ul>
      <pre>
      IF price % tick_size = 0
          // send request
      ELSE
          // do not send request as the price will not be accepted by the system
      </pre>
      </ul>
    </li>
    <li>Must be less than the symbol's <code>max_price</code></li>
    <li>If the user has no open position, the order price must be higher than 10% of the last traded price<ul>
    <li>For example, if the last traded price (market price) is <code>10314</code>, the min. order price will be <code>1031.5</code>.</li>
    <li>Pseudocode (assuming the price is a multiple of 0.5):<pre class="center-column">
    IF price > (marketPrice * 0.1)
        // send request
    ELSE
        // do not send request as the price will not be accepted by the system
    </pre></li>
    </ul>
    </li>
    <li>If the user has an open position, the order price must be better than the liquidation price.<ul>
    <li>For example, if the liquidation price of a long position is <code>5176.5</code>, the min. order price will be <code>5177</code>. For short position, the order price must be less than the liquidation price.</li>
    </ul>
    </li>
    </ul>
    </li>
    <li>Conditional order<ul>
    <li>Must be greater than or equal to <code>1</code></li>
    </ul>
    </li>
    </ul>
  orderAllSize: size of order.
  orderFilledSize: filled size of order.
  usdcTradeApi: Order API
  queryLatest500Trades: Query Last 500 Trades
  usdcTradeHistory: Trade History
  usdcTransactionType: refer to <a href="#transaction-type-type">Transaction type</a>
  usdcOrderDesc: |
    <p>topic:</p>
    <p>Option: user.option.orderHistory</p>
  activeOrders: orders
  activeOrders_new: orders(delta only)
  usdcActiveOrder: |
    <p>topic:</p>
    <p>Option: user.openapi.option.order</p>

  queryHistoricalVolatility: Query historical volatility
  historicalVolatilityPara: |
    <p>The data is in hourly.</p>
    <p>If time field is not passed, it returns the recent 1 hour data by default.</p>
    <p>It could be any timeframe by inputting startTime & endTime, but it must satisfy [endTime - startTime] <= 30 days.</p>
  historicalVolatilityNotice: |
    <p>It returns all data in 2 years when startTime & endTime are not passed.</p>
    <p>Both <b>startTime</b> & <b>endTime</b> entered together or both are left blank</p>
  baseCoin: Base coin. If not passed, BTC returned by default
  usdcPeriod_2: Period. if not passed, it returns 7 days by default
  usdcVolatility: Volatility
  usdcCommonDesc: |
    <p>When the link is established successfully, a full package will be added first. If you place an order again, you will receive an incremental data package.</p>
    <p>-If the dataType is NEW, full data will be pushed  </p>
    <p>-if the dataType is CHANGE, incremental data will be pushed  </p>

  usdc_websocket_orders_warning: |
    <b>DEPRECIATED</b>, no more maintainence. It is recommended to <a href="#t-activeorders_new">use orders(delta only)</a>

  usdcWssOrderNew: |
    <p>topic: user.order</p>

  usdcWssOrderNewDesc: |
    <p>This topic reflects an order lifecycle.</p>
    <p>It only pushes delta data packages. So make sure you've subscribed the topic before placing an order</p>
    <p>It sometimes might push duplicate messages, so please ensure idempotent process.

  usdc_websocket_orderDelta_notice: |
    There is only <b>delta</b> stream available. It is recommended to call <a href="#t-usdcqryunorpartfilled_new">Real-time Unfilled/Partially Filled Orders</a> to get snapshot data in advance.

  usdcPerpCategory: Type. PERPETUAL
  usdcPerpOrderType: <a href="#order-type-ordertypes">Order Type</a>
  usdc_perp_order_price: Order Price
  usdc_perp_websocket_subscribe_desc: |
    <p>Subscribing:</p>
    <p>Public:</p>
    <p>ws.send('{"op": "subscribe", "args": ["orderBook_200.100ms.BTCPERP"]}')</p>
    <p>Response:</p>
    <p>{"success":true,"ret_msg":"","conn_id":"6808c806-6fe5-4001-9355-816babba3fcd","request":{"op":"subscribe","args":["orderBook_200.100ms.BTCPERP"]}}</p>

    <p>Private:</p>
    <p>ws.send('{"method":"private/subscribe","id":"{uuid}","params":{"channels":["user.option.order"]}}')</p>
    <p>Response:</p>
    <p>{"id":"requestId","success":true,"data":{"successChannels":["user.option.order"]},"usIn":1638415789932,"usOut":1638415789932,"usDiff":0,"type":"COMMAND_RESP"}</p>
  usdc_perp_websocket_unsubscribe_desc: |
    <p>Understanding</p>
     <p>Public:</p>
    <p>ws.send('{"op": "unsubscribe", "args": ["orderBook_200.100ms.BTCPERP"]}'); </p>
    <p>Response:</p>
    <p>{"success":true,"ret_msg":"","conn_id":"c53a9a5c-ff3a-443a-b56d-2cbd8552566f","request":{"op":"unsubscribe","args":["orderBook_200.100ms.BTCPERP"]}}</p>

    <p>Private:</p>
    <p>ws.send('{"method":"private/unsubscribe","id":"{uuid}","params":{"channels":["topic1","topic2"]}}') </p>
    <p>{"id":"{uuid}","success":true,"data":{"successChannels":["topic1"],"failChannels":["topic2"]},"type":"COMMAND_RESP"}</p>
    <p>Cancel All Private Topics</p>
    <p>{"method":"public/unSubAll","id":"requestId"}</p>
    <p>Response:</p>
    <p> {"id":"requestId","success":true,"type":"COMMAND_RESP"}</p>
  usdc_perp_websocket_para_orderbook: |
    <p>Either 25 or 200 orders will be fetched from the bid and ask side of the order book.</p>
    <p>After a successful subscription,  the first response will be a snapshot data, then provide the delta data</p>
    <p>topic format: orderBookL2_25.{symbol} or orderBook_200.100ms.{symbol}</p>
    <p>orderBookL2_25.BTCPERP or orderBook_200.100ms.BTCPERP</p>
  usdc_current_24_total_perp: |
    <p>Fetch the transaction data on Bybit in the last 24 hours.</p>
    <p>topic format: trade.{symbol}</p>
    <p>trade.BTCPERP</p>


  usdc_perp_lastest_symbol_info: |
    <p>topic format: instrument_info.100ms.{symbol}</p>
    <p>instrument_info.100ms.BTCPERP</p>
  usdc_perp_position_desc: |
    <p>topic:</p>
    <p>user.openapi.perp.position</p>
  usdc_perp_trade_history: |
    <p>topic:</p>
    <p>user.openapi.perp.trade</p>
  usdc_perp_active_order: |
    <p>Subscribe to stay updated on active orders.</p>
    <p>topic:</p>
    <p>user.openapi.perp.order</p>
  usdc_perp_order_desc: |
    <p>topic:</p>
    <p>user.perp.orderHistory</p>
  usdc_platform_insurance: |
    <p>topic:</p>
    <p>platform.insurance.USDC</p>
  usdc_perp_price_rule: |
    <ul>
    <li>Must be less than 1 million (<code>1000000</code>)</li>
    <li>Must be a positive number:
    <ul>
    <li><code>40</code> - allowed</li>
    <li><code>40.5</code> - allowed</li>
    <li><code>40.1</code> - not allowed</li>
    <li><code>-30.5</code> - not allowed</li>
    </ul>
    </li>
    </ul>
  usdc_perp_quantity: |
    <ul>
    <li>Must be less than 1 thousand (<code>1000</code>)</li>
    <li>Must be a positive number:
    <ul>
    <li><code>40</code> - allowed</li>
    <li><code>40.001</code> - allowed</li>
    <li><code>-30.5</code> - not allowed</li>
    </ul>
    </li>
    </ul>
  usdc_perp_websocket_para_endpoint: |
    Base endpoints:
    <ul>
    <p>
      <li>Testnet Public:
        <ul>
          <li><span id="testnet_address">wss://stream-testnet.bybit.com/perpetual/ws/v1/realtime_public</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
        </ul>
      </li>
      <li>
        Testnet Private:
        <ul>
          <li><span id="testnet_address_2">wss://stream-testnet.bybit.com/trade/option/usdc/private/v1</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#testnet_address_2"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
        </ul>
      </li>
    </p>
    <p>
      <li>Mainnet public (both endpoints are available):<br/>
        <ul>
          <li><span id="mainnet_perpetual_public_address">wss://stream.bybit.com/perpetual/ws/v1/realtime_public</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_perpetual_public_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
          <li><span id="mainnet_perpetual_public_address_2">wss://stream.bytick.com/perpetual/ws/v1/realtime_public</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_perpetual_public_address_2"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
        </ul>
      </li>
    </p>
    <p>
      <li>Mainnet private (both endpoints are available):<br/>
        <ul>
          <li><span id="mainnet_perpetual_private_address">wss://stream.bybit.com/trade/option/usdc/private/v1</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_perpetual_private_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
          <li><span id="mainnet_perpetual_private_address_2">wss://stream.bytick.com/trade/option/usdc/private/v1</span>
          <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#mainnet_perpetual_private_address_2"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button></li>
        </ul>
      </li>
    </p>
    <p>All requests made to the private API must be authenticated. Requests made to the public API do not require authentication.</p>
    </ul>
  usdc_perp_order_type: refer to <a href="#order-type-type-ordertypes">Order Type</a>
  usdc_perp_active_order_delta_topic: |
    <p>Subscribe to stay updated on new and partially filled active orders.</p>
    <p>topic:</p>
    <p>user.perp.order.t</p>
  usdc_unfilled_order_size: unfilled size of order
  usdcMmp: Market Maker Protection
  whatIsUsdcMmp: What is MMP
  whatIsUsdcMmpDesc: |
    <p>Market Maker Protection (MMP) is an automated mechanism designed to protect market makers (MM) against liquidity risks and over-exposure in the market. </p>
    <p>It prevents simultaneous trade executions on quotes provided by the MM within a short time span. </p>
    <p>The MM can automatically pull their quotes if the number of contracts traded for an underlying asset exceeds the configured threshold within a certain time frame. Once MMP is triggered,</p>
    <p>any pre-existing MMP orders will be automatically canceled,</p>
    <p>and new orders tagged as MMP will be rejected for a specific duration — known as the frozen period — so that MM can reassess the market and modify the quotes.</p>
  enableMmp: How to Enable MMP
  enableMmpDesc: |
    <p>Send an email to Bybit (financial.inst@bybit.com) or contact your business development (BD) manager to apply for MMP.</p>
  setUpMmp: How to Set Up MMP
  setUpMmpDesc: |
    <p>The configuration parameters are as follows</p>
  usdcCurrency: Currency
  usdcMmpEnabled: Whether MMP is enabled
  usdcMmpUserConfigurable: Whether the user can modify the MMP configuration
  usdcWindowMs: Time Window(Millisecond)
  usdcFrozenPeriodMs: Frozen Period(Millisecond). (0 means the account will remain frozen until manually reset)
  usdcQtyLimit: Quantity Limit. (positive number, up to two decimal places)
  usdcDeltaLimit: Delta Limit. (positive number, up to two decimal places)
  usdcMmpFrozenUntilMs: Timestamp of when the freeze is expected to be automatically unfrozen (Millisecond)
  usdcMmpFrozen: whether to freeze
  modifyMmp: Modify
  resetMmp: Reset
  usdcMmpDefault: The default settings are as follows
  usdcMmpTriggerStatus: MMP trigger status
  usdcMmpTriggerTimestamp: MMP trigger timestamp
  column_default: default value
  usdcStopOrderType: refer to <a href="#stop-order-type-stopordertype">Stop Order Type</a>
  usdcCancelType: refer to <a href="#cancel-type-canceltype">Cancel Type</a>
  usdcTradeId: Trade Id
  usdcQueryLimit: The endpoint only supports up to 30 days of queried records
  usdcQueryLimitWithInput: The endpoint only supports up to 30 days of queried records. An error will be returned if startTime is more than 30 days.
  usdc_margin_mode: |
    <p>This topic pushes message when your have the margin mode changed.<p>
    <b>topic</b>: <code>user.service</code><br>
    <b>frequency</b>: real-time

  lt: Leveraged Token Endpoints
  lt_notice: Not fully released
  lt_para: The following Leveraged Token endpoints require authentication.
  ltInfo: Asset Info
  ltInfos: All Asset Infos
  row_parameter_etpCode: ETP Asset name
  spotLtCode: Abbreviation of the LT.
  spotResLtCode: Abbreviation of the LT
  spotResLtName: Full name of the LT
  spotResMaxPurchase: Max. purchase amount per transaction
  spotResMinPurchase: Min. purchase amount per transaction
  spotResMaxPurchaseDaily: Max. purchase amount per day
  spotResMaxRedeem: Max. redemption amount per transaction
  spotResMinRedeem: Min. redemption amount per transaction
  spotResMaxRedeemDaily: Max. redemption amount per day
  spotResPurchaseFee: Purchase fees
  spotResRedeemFee: Redemption fees
  spotResLtStatus: Whether the LT can be purchased or redeemed; 1. LT can be purchased and redeemed; 2. LT can be purchased, but not redeemed; 3. LT can be redeemed, but not purchased; 4. LT cannot be purchased nor redeemed
  spotResFundFee: Funding fees charged daily to users who hold LT
  spotResFundFeeTime: Timestamps when funding fees are charged
  spotResManageFee: Management fees
  spotResManageFeeTime: Timestamps when management fees are charged
  spotResCirculation: Circulating supply in the secondary market
  spotResValue: Internal used parameter, please ignore
  spotResTotal: Application uplimit
  spotResNetValue: Net asset value

  ltPurchase: Purchase
  spotLtAmount: Purchase amount
  spotResOrderStatus: Order status; 1. Completed; 2. In progress; 3. Failed
  spotResRiskRate: Risk Rate
#  spotResOrderQuantity: Actual purchase quantity of the ETP
#  spotResOrderAmount: Actual redeem amount of the ETP
  spotResAmount: amount of LT

  spotResPurchaseOrderQuantity: Order quantity of the LT
  spotResPurchaseOrderAmount: Order value of the LT
  spotResPurchaseAmount: Actual purchase value of the LT
  spotResRedeemQuantity: Quantity
  spotV3ResRedeemQuantity: Quantity. Normally returns <code>""</code>
  spotResRedeemOrderQuantity: Order quantity of the LT
  spotResRedeemOrderAmount: Order value of the LT
  spotV3ResRedeemOrderAmount: Order value of the LT. Normally returns <code>""</code>
  spotResOrderQuantity: Order quantity of the LT

  spotResId: Transaction ID
  spotResValueCoin: Quote asset
  spotLtSerialNo: Serial number

  ltRedeem: Redeem
  spotLtQuantity: Redeem quantity

  ltRecord: Purchase/Redemption History
  spotLtOrderId: Order ID
  spotLtStartTime: Start time
  spotLtEndTime: End time
  spotLtOrderType: Order type; 1. Purchase; 2. Redemption
  spotResOrderTime: Order time
  spotResExcTime: Last update time of the order status
  spotResStatus: Order status; 1. Completed; 2. In progress; 3. Failed
  spotResFee: Trading fees
  spotResRecordValue: Filled value


  ltQuoteReference: Market Info
  ltQuoteReference_para: This endpoint does not require authentication.
  spotLtQuoteNav: Net asset value
  spotLtQuoteNavTime: Update time for net asset value (in milliseconds and UTC time zone)
  spotLtQuoteBasket: Basket value


  perpUsdcReplaceOrderDesc: Active order parameters (such as quantity, price) and stop order parameters cannot be modified in one request at the same time. Please request modification separately.



  #copytrade
  copy_trading: Copy Trading
  copy_trading_user_notice: Bybit's Copy Trading API is only available to <a href="https://www.bybit.com/en-US/help-center/bybitHC_Article?language=en_US&id=000001554">principal traders</a>. Currently, there is no API for followers.
  ct_symbol_list: Symbol List
  ct_order: Order
  ct_order_list: Order List
  ct_create_order: Create Order
  ct_trading_stop: Set Trading Stop
  ct_close_order: Close Order
  ct_cancel_order: Cancel Order
  ct_positon_list: Position List
  ct_positon_close: Close Position
  ct_wallet_balance: Get Wallet Balance
  ct_wallet_transfer: Transfer
  ct_set_leverage: Set Leverage
  ct_set_leverage_desc: Only integers can be set to set the leverage
  ct_parentOrderId: Parent orderId
  ct_parentOrderLinkId: Parent orderLinkid
  ct_tradingStopTakeProfit: Take profit price. Pass <code>0</code>, it means remove take profit; Pass <code>""</code>, it means no modification
  ct_tradingStopStopLoss: Stop Loss price. Pass <code>0</code>, it means remove stop loss; Pass <code>""</code>, it means no modification

  accountType_copytrade: ""
  copy_trade_row_comment_parentOrderIdNotparentOrderLinkId:  <b>Required</b> if not passing <code>parent_order_link_id</code>
  copy_trade_row_comment_parentOrderLinkIdNotOrderId:  <b>Required</b> if not passing <code>parent_order_id</code>
  copy_trade_row_comment_order_type: Copy trade order type
  copy_trade_comment_leverage: The value of <code>buy_leverage</code> must be equal to <code>sell_leverage</code>.
  copy_trade_row_comment_position_idx: |
     Position idx, used to identify positions in different position modes<span>:</span> <br/>1-Buy side of both side mode <br/> 2-Sell side of both side mode
  copy_trade_rate_para_limits: |
    <p>Max. number of unfilled orders supported for each leader:</p>
    <ul>
    <li>Active orders: 50</li>
    </ul>

  # Cross Margin Trading
  spotCrossMarginTradingDesc: All Cross Margin Trading endpoints require authentication.
  CrossMarginTrading: Cross Margin Trading Endpoints
  borrowmarginloan: Borrow Margin Loan
  spotCrossMarginTradingEndpoint: |
    Cross Margin Trading Endpoints support below currency:
  spotCrossMarginCoins: |
    You could find all supported coins of margin trade <a href="https://www.bybit.com/en-US/trade/spot/leverage/vip">here</a>.
  spotCurrency: currency
  spotBorrowQty: Amount To Borrow
  spotResult: Loan order id
  spotV3RepayId: Repay id
  RepayMarginLoan: Repay Margin Loan
  spotRepayQty: Repayment Amount
  QueryBorrowingInfo: Query Borrowing Info
  req_spotCrossMarginOrderStatus: Status. <code>0</code> by default<li><code>0</code>：get all kinds of status</li><li><code>1</code>：uncleared</li><li><code>2</code>：cleared</li>
  resp_spotCrossMarginOrderStatus: Status. <code>1</code>：uncleared, <code>2</code>：cleared
  spotCrossMarginLimit: Default is 500; Maximum is 500
  spotBorrowingId: Borrowing Id
  spotLoanAmount: Principal Amount
  spotLoanBalance: Outstanding Principal
  spotInterestAmount: Total Interest
  spotInterestBalance: Outstanding Interest
  spotCrossMarginCreatedTime: Timestamp (Borrowing), unit in millisecond
  spotCrossMarginType: Order Type (1. Manual 2. Auto)
  QueryAccountInfo: Query Account Info
  spotCrossMarginAccountStatus: Status (1. Normal 2. Withdrawal/Transfer Restricted 3. Liquidation Alert Triggered 4. Liquidated 5. Negative Equity)
  spotAcctBalanceSum: Total Equity (BTC)
  spotDebtBalanceSum: Total Liability (BTC)
  spotTokenId: Token Id
  spotTotal: Total
  spotFree: Available
  spotLocked: Locked
  spotLiability: Total Liability
  spotInterest: Interest Left
  QueryInterestQuota: Query Interest & Quota
  spotInterestRate: Daily Interest Rate
  spotMaxLoanAmount: Please ignore
  spotLoanableAmount: Available Amount to Borrow
  QueryRepaymentHistory: Query Repayment History
  spotRepayMarginOrderId: Repay Margin Order Id
  spotRepayId: Repay Id
  spotRepayTime: Timestamp, unit in millisecond
  spotRepaidAmount: Total Amount Repaid
  spotRepaidSerialNumber: Repayment No. (Borrowing Order)
  spotTransactId: Transaction ID (Borrowing)
  spotRepaidPrincipal: Total Principal Repaid
  spotRepaidInterest: Total Interest Repaid

  #testnet only
  futuresV2: Futures v2

  # 统保 Derivatives V3 interface define
  derivativesV3: Derivatives v3
  dv_unifiedMargin: Unified Margin
  dv_contract: Contract
  unified_margin_account_data: Unified Margin Account
  order: Order
  unified_margin_account_para: <ul><li>Unified margin account supports to trade USDT perpetual, USDC perpetual and option.</li><li>The following account data endpoints require authentication.</li></ul>
  dv_placeOrder: Place Order
  dv_replaceOrder: Replace Order
  dv_cancelOrder: Cancel Order
  dv_queryOrderRealtime: Get Open Orders
  dv_getOrder: Get Orders
  dv_myposition: Get Position (real-time)
  dv_setleverage: Modify Leverage
  dv_setrisklimit: Set Risk Limit
  dv_tradingstop: Set TP/SL
  dv_userTradeRecords7Day: Get 7-day Trading History
  dv_queryOptionDeliveryLog : Get Settlement History (Options)
  dv_querySettleLogs: Get Settlement History (Perpetual)
  dv_balance: Get Wallet Balance
  dv_upgradeUnifiedAccount: Upgrade to Unified Margin Account
  dv_queryTransactionLogs: Transaction Log
  dv_transfer: Transfer Funds (V2)
  dv_queryExchangeRecords: Exchange Coins
  dv_interestBillStatement: Get Borrow History
  dv_queryLoanInterest: Get Borrow Rate
  dv_batchPlaceOrder: Batch Place Orders
  dv_batchReplaceOrders: Batch Replace Orders
  dv_batchCancelOrders: Batch Cancel Orders
  dv_cancelAllOrders: Cancel All Orders
  dv_setMarginMode: Set Margin Mode
  dv_queryAccountInfo: Query Account Info

  queryOrderRealtime: Get Order(real-time)
  getOrder: Get Order
  batchPlaceOrder: Batch Place Orders
  batchReplaceOrders: Batch Replace Orders
  batchCancelOrders: Batch Cancel Orders
  cancelAllOrders: Cancel All Orders
  userTradeRecords7Day: User Trade Records(7 days)
  queryOptionDeliveryLog: Query Option Delivery Log
  account: Account
  upgradeUnifiedAccount: Upgrade Unified Margin Account
  queryTransactionLogs: Query Transaction Logs
  transferV2: Transfer v2
  queryExchangeRecords: Query Coin Exchange Records
  interestBillStatement: Bill Of Interest
  queryLoanInterest: Query Loan Interest Rate
  websocketfilters_unified: Understanding Websocket Filters (Unified Account)
  websocketfilters_notice: <code>req_id</code> does not work for <b>private</b> channel and <b>option</b> public channel
  websocketunsubfilters_unified: Unsubscribing From Websocket Topics (Unfied Account)
  websocketOrderBookDepth: orderbook
  privatetopics_unified: Private Topics
  websocketOrder: order
  greeksOption: greeks
  user_info_um: info
  user_data: User Data Endpoints
  api_key_info: Api Key Info
  create_sub_members: Create Sub Member Account
  create_sub_members_api_key: Create Sub Member Api Key
  delete_sub_members_api_key: Delete Sub Member Api Key
  asset_data: Asset Data Endpoints
  exchange_history: Asset Exchange History
  transfer: Transfer
  # public param comment used in v3
  dv_category: Derivatives products category. If category is not passed, then return <code>""</code>
  dv_categorySuffix_1: For now, <code>linear</code> <code>inverse</code> including inverse futures are available
  dv_categorySuffix_2: For now, <code>linear</code> <code>inverse</code> <code>option</code> are available
  dv_categorySuffix_3: For now, <code>linear</code> <code>inverse</code> are available
  dv_categorySuffix_4: For now, <code>linear</code> <code>option</code> are available
#  dv_categorySuffix_5: 目前僅支持正向合約: linear; 期權: option。只能傳一個參數
#  dv_categorySuffix_6: 目前僅支持正向合約: linearUSDC, linearUSDT; 反向合約: inverse; 期權: option
  dv_categorySuffix_7: For now, <code>linear</code> is available
  dv_categorySuffix_8: For now, <code>option</code> is available
  dv_categorySuffix_9: For now, <code>linear</code> is available and ONLY for USDC perp

  ## Market
  # kline
  # reqParam
  dv_klineInterval: |
    Kline interval. enum: 1 3 5 15 30 60 120 240 360 720 "D" "M" "W"

  # respParam

  dv_klineRespStart: Open time(ms)
  dv_klineRespClose: Close price. It becomes latest price if candle is not over.
  dv_klineRespVolume: Trade volume. unit is qty of pieces of contracts
  dv_klineRespTurnover: Trade turnover. unit is qty of quote currency

  # markPriceKline
  # reqParam

  # respParam

  # indexPriceKline
  # reqParam
  # respParam


  # orderbook
  # reqParam
  dv_orderbookPara: Enable 500 orders for orderbook API
  dv_orderbookLimit: 25 by default, 500 is max. If <b>option</b>, only 25 is available
  # respParam

  dv_orderbookBids: Buyer. Order by price asc
  dv_orderbookAsks: Seller. Order by price asc
  dv_orderbookUpdateId: Id for continuity of data. Corresponding to "u" in the wss 200 level orderbook
  dv_orderbookTimeStamp: Timestamp(ms)

  # instrumentsInfo
  dv_instrHead: Get Instrument Info
  dv_marketInstrPara: Query launched instruments info list
  # reqParam

  dv_pageDirection: |
    Search direction. <code>prev</code>prev page, <code>next</code>: next page. Defaults to <code>next</code>
  dv_cursor: API pass-through
  # respParam
  dv_instrContractType: Contract type. Future or Perpetual only
  dv_instrBaseCoin: Base coin. Like 'BTC' in BTC-USDT.
  dv_instrQuoteCoin: Quote coin. Like 'USDT' in BTC-USDT.
  dv_instrSettleCoin: Settle coin. Like 'BTC' in BTCUSD
  dv_OptionType: Call/Put Trading type of option. <code>Call</code>/<code>Put</code>
  dv_instrLaunchTime: Launch time
  dv_instrDeliveryTime: Expired date/Delivery time/Exercise time. For perpetual, returns <code>"0"</code>
  dv_instrPriceScale: Price scale

  dv_instrMaxOrderQty: Max trade quantity per order
  dv_instrMinOrderQty: Min trade quantity per order


  # tickers
  dv_tickerHead: Get Latest Information For Symbol
  dv_marketTickerPara: Get all latest information for symbol
  # reqParam:
  dv_tickerSymbol: Symbol name. If category is <code>option</code> REQUIRED, and if symbol belongs to option, category=option is REQUIRED
  # respParam

  dv_tickPredictedDeliveryPrice: Predicted delivery price. Applicable to inverse future and option. There will be value 30 mins before delivery

  dv_openInterestRespValue: The value of open Interest.

  dv_tickDeliveryFeeRate: Delivery fee rate. Futures only.

  dv_tickBasisRate: Basis rate for futures.

  # historyFundingRate
  dv_historyFundingRateHead: Get Funding Rate History
  # reqParam

  # respParam


  # rateLimit
  # reqParam
  dv_riskLimitHead: Get Risk Limit

  # respParam

  dv_riskInitialMargin: Initial margin


  # optionDeliveryPrice
  dv_optionDeliveryHead: Get Option Delivery Price
  dv_market_option_para: Get option delivery price
  # reqParam

  # respParam


  # recentTrade
  # reqParam

  # respParam
  dv_recentExecId: Latest data id
  dv_recentPrice: Trade price
  dv_recentSide: Side. <code>Buy</code> <code>Sell</code>
  dv_recentTime: Executed timestamp(ms)
  dv_recentBlockTradeId: The batch id from paradigm. It is null if normal trade.
  dv_recentIsBlockTrade: True means that it is BlockTrade.

  # openInterest
  # reqParam
  dv_openInterInterval: Interval. 5min 15min 30min 1h 4h 1d
  dv_openInterStartTime: Start time
  dv_openInterEndTime: End time
  # respParam
  dv_openInterTimestamp: Timestamp(ms) of data generation.
  # websocket
  websocket_para_endpoint_v3: |
    <p><b>WebSocket public channel</b>:</p>
    <ul>
    <p>
    <li><b>Mainnet</b>:<br/>
        USDT contract: <span id="usdt_mainnet_address">wss://stream.bybit.com/contract/usdt/public/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#usdt_mainnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
        <br/>
        USDC contract: <span id="usdc_mainnet_address">wss://stream.bybit.com/contract/usdc/public/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#usdc_mainnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
        <br/>
        USDC Options: <span id="option_mainnet_address">wss://stream.bybit.com/option/usdc/public/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#option_mainnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
    </li>
    <li><b>Testnet</b>:<br/>
        USDT contract: <span id="usdt_testnet_address">wss://stream-testnet.bybit.com/contract/usdt/public/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#usdt_testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
        <br/>
        USDC contract: <span id="usdc_testnet_address">wss://stream-testnet.bybit.com/contract/usdc/public/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#usdc_testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
        <br/>
        USDC Options: <span id="option_testnet_address">wss://stream-testnet.bybit.com/option/usdc/public/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#option_testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
    </li>
     </p>
    </ul>
    <p><b>WebSocket private channel</b>:</p>
    <ul>
    <p>
    <li><b>Mainnet</b>:<br/>
        Unified margin account: <span id="uma_mainnet_address">wss://stream.bybit.com/unified/private/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#uma_mainnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
    </li>
    <li><b>Testnet</b>:<br/>
        Unified margin account: <span id="uma_testnet_address">wss://stream-testnet.bybit.com/unified/private/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#uma_testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
    </li>
     </p>
    </ul>

  websocket_para_endpoint_contract: |
    <p><b>WebSocket public channel</b>:</p>
    <ul>
    <p>
    <li><b>Mainnet</b>:<br/>
        USDT contract: <span id="usdt_2_mainnet_address">wss://stream.bybit.com/contract/usdt/public/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#usdt_2_mainnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
        <br/>
        Inverse contract: <span id="inverse_mainnet_address">wss://stream.bybit.com/contract/inverse/public/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#inverse_mainnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
    </li>
    <li><b>Testnet</b>:<br/>
        USDT contract: <span id="usdt_2_testnet_address">wss://stream-testnet.bybit.com/contract/usdt/public/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#usdt_2_testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
        <br/>
        Inverse contract: <span id="inverse_testnet_address">wss://stream-testnet.bybit.com/contract/inverse/public/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#inverse_testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
    </li>
    </p>
    </ul>
    <p><b>WebSocket private channel</b>:</p>
    <ul>
    <p>
    <li><b>Mainnet</b>:<br/>
        Contract account: <span id="ca_mainnet_address">wss://stream.bybit.com/contract/private/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#ca_mainnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
    </li>
    <li><b>Testnet</b>:<br/>
        Contract account: <span id="ca_testnet_address">wss://stream-testnet.bybit.com/contract/private/v3</span>
        <button class="clipboard_button" data-clipboard-action="copy" data-clipboard-target="#ca_testnet_address"><img src="/images/copy_to_clipboard.png" height=15 width=15></img></button>
    </li>
     </p>
    </ul>

  websocketOrderBook_v3: |
    <b>instruction: </b>
    Get different depth.<br>
    Once subscribe successfully, you will receive a snapshot. The data is ordered by order price, which from lowest buy order to highest sell order.
    Websocket will keep pushing delta message when orderbook is changed. If you receive a new snapshot data, it's necessary to reset your local orderbook.<br><br>
    <b>type</b>: <code>snapshot</code>=Full orderbook, <code>delta</code>=delta orderbook<br>
    If there is a problem in bybit end, it will re-send a snapshot, which is promised the latest and accurate.<br><br>
    <b>Linear perpetual:</b><br/>
    1 level data, push frequency: <b>10ms</b> <br>
    50 level data, push frequency: <b>20ms</b> <br>
    200 level data, push frequency: <b>100ms</b> <br>
    500 level data, push frequency: <b>100ms</b> <br>
    <br>
    <b>Option:</b><br/>
    25 level data <br/>
    100 level data<br/>
    <br>
    <b>Topic: (note. option has 25 & 100 level only)</b><br>
    <code>orderbook.1.{symbol}</code><br>
    <code>orderbook.25.{symbol}</code><br>
    <code>orderbook.50.{symbol}</code><br>
    <code>orderbook.100.{symbol}</code><br>
    <code>orderbook.200.{symbol}</code><br>
  websocketOrderBook_contract: |
    <b>instruction: </b>
    Get different depth.<br>
    Once subscribe successfully, you will receive a snapshot. The data is ordered by order price, which bids is from highest to lowest and asks is from lowest to highest.
    Websocket will keep pushing delta message when orderbook is changed. If you receive a new snapshot data, it's necessary to reset your local orderbook.<br><br>
    <b>type</b>: <code>snapshot</code>=Full orderbook, <code>delta</code>=delta orderbook<br>
    If there is a problem in bybit end, it will re-send a snapshot, which is promised the latest and accurate.<br><br>
    1 level data, push frequency: <b>10ms</b> <br>
    50 level data, push frequency: <b>20ms</b> <br>
    200 level data, push frequency: <b>100ms</b> <br>
    500 level data, push frequency: <b>100ms</b> <br>
    <br>
    <b>Topic: </b><br>
    <code>orderbook.1.{symbol}</code><br>
    <code>orderbook.50.{symbol}</code><br>
    <code>orderbook.200.{symbol}</code><br>
    <code>orderbook.500.{symbol}</code><br>

  predicatedFundingRate_v3: Predicated funding rate. usdt perp, inverse perp and inverse futures is <code>""</code>
  row_comment_resp_next_funding_time_v3: Next settlement time of capital cost (ms). Inverse futures is <code>""</code>
  row_comment_resp_funding_rate_v3: <a href="https://help.bybit.com/hc/en-us/articles/360039261114-What-is-funding-rate-and-predicted-rate-">Funding rate</a>. Inverse futures is <code>""</code>
  futuresResponseParameters: Future response parameters
  optionResponseParameters: Option response parameters
  codequote_option: Option snapshot data
  basisRate_v3: Basis rate. Inverse futures only
  row_comment_resp_delivery_fee_rate_v3: Delivery fee rate of Futures contract. Inverse futures only
  row_comment_resp_prev_price_1h_v3: Hourly market price an hour ago
  deliveryTime_v3: Delivery time. Inverse futures only
  predicatedDeliveryPrice_v3: Predicated delivery price. Inverse futures only

  # contract account
  contract_order_para: |
    <p>Market price active order: A traditional market price order which will be filled at the best available price. <code>price</code> is not required for this type of order.</p>
    <p>Limit price active order: You can set an execution price for your order. Only when the last traded price reaches the order price will the system will fill your order.</p>
    <p><b>Take profit/Stop loss</b>: You may only set a TP/SL conditional order upon opening the position. Once you hold a position, any new active order requests which contain TP/SL data will be accepted but TP/SL data will be ignored. <code>tpTriggerBy</code>/<code>slTriggerBy</code> default to LastPrice. Passing values to the <code>takeProfit</code> or <code>stopLoss</code> parameters in this endpoint will create conditional orders managed by the system, which will be be automatically cancelled if the position is closed.</p>
    <p>Order quantity: This parameter indicates the quantity of perpetual contracts you want to buy or sell. For the minimum unit of qty increase or decrease, please refer to the <code>lotSizeFilter</code> field in the <a href="#t-dv_instrhead">Query Symbol</a> endpoint. Note: The allowed max trade quantity of <code>PostOnly</code> is 5 times bigger than normal orders.</p>
    <p>Order price: If it is a stop order, this parameter is required. When there is no position, the long should be higher than 10% of the market price and less than 1 million. For the minimum unit of price movement, please refer to the <code>priceFilter</code> field in the <a href="#t-dv_instrhead">Query Symbol</a> endpoint.</p>
    <p>Custom order ID: You may customise order IDs for active orders. We will link it to the system order ID, and return the unique system order ID to you after the active order is created successfully. You may use this order ID or your custom order ID to cancel your active order. The customised order ID should be unique, with a maximum length of 36 characters.</p>
    <p><b>Each account can hold up to 500 active orders yet to be filled entirely simultaneously. This is per instrument, so it's possible to have, for example, 300 active orders on the BTCUSDT instrument and 280 active orders on the ETHUSDT instrument.</b></p>


  # Contract Account >> Account
  contract_account: Account
  contract_accountPara: The following account data endpoints require authentication.
  contract_accountCoin: |
    <code>currency</code> alias. Returns all wallet balances if not passed. Multiple coins are allowed, separated by comma, like: <code>USDT,USDC</code>
  contract_accountCoin_resp: Coin name
  contract_accountStatTime: Start timestamp in milliseconds
  contract_accountEndTime: End timestamp in milliseconds. <b>The past year records ONLY</b>
  contract_accountCursor: Cursor
  contract_accountNextPageCursor: Next page cursor
  tradingFeeRate: Get Trading Fee Rate
  contract_tradingFeeRate_para: |
    <p><b>Instruction:</b></p>
    <P>Get user trading fee rate</p>
  contract_feeRate_warning: |
    API rate limit: 5 requests in 1 minute.
  contract_accountTakerFeeRate: Taker fee rate
  contract_accountMakerFeeRate: Maker fee rate
  # Contract >> Private topics
  contract_privateTopic: Private Topics
  contract_websocketPosition: |
    <p><p><b>instruction:</b></p>
    <p>Pushing the incremental volume only</p>
    <p>Accessing personal position list. Current user's position holding information can be accessed through this interface, such as the quantity of position owned and wallet balance.</p>
    <p><b>Topic: </b></p>
    <p>user.position.contractAccount</p></p>
  contract_position_riskLimitValue: Position upper limit corresponding to the current risk limit ID
  contract_position_tradeMode: |
    Trade mode: <code>0</code>: cross margin; <code>1</code>: isolated margin
  contract_position_autoAddMargin: |
    Auto add margin mode. <code>0</code>: turn off, <code>1</code>: turn on. It is invalid under <b>cross margin</b> mode
  contract_position_positionBalance: Position balance
  contract_position_liqPrice: Liquidation price
  contract_position_bustPrice: <a href="https://help.bybit.com/hc/en-us/articles/360039749813-What-is-Bankruptcy-Price-Inverse-Contract-">Bankruptcy price</a>
  contract_websocketExecution: |
    <p><b>Instruction:</b></p>
    <p>Get the user's filled history ranked by time in ascending order.</p>
    <p><b>Topic: </b></p>
    <p>user.execution.contractAccount</p></p>
  contract_executionClosedSize: Closed size
  contract_websocketOrder: |
    <p><p><b>Instruction:</b></p>
    <p>Pushing incremental orders only. Merge active order with conditional order into one topic.</p>
    <p><b>Topic: </b></p>
    <p>user.order.contractAccount</p></p>
  contract_param_executionTpTriggerBy: <a href="#trigger-price-type-triggerby">tpTriggerBy</a>
  contract_parm_executionSlTriggerBy: <a href="#trigger-price-type-triggerby">slTriggerBy</a>
  contract_param_executionTriggerBy: <a href="#trigger-price-type-triggerby">triggerBy</a>
  contract_websocketWallet: |
    <p><b>Topic: </b></p>
    <p>user.wallet.contractAccount</p></p>
  contract_walletAvailableBalance: Available balance
  contract_walletPositionMargin: Position margin
  contract_walletOrderMargin: Margin occupied by the current order
  # contract order endpoints
  contract_param_orderType: <a href="#order-type-ordertype">orderType</a>
  contract_comment_qty: Quantity. If <b>USDT perp</b>, qty is in cryptocurrency, else like <b>Inverse perp/futures</b>, qty is in USD.
  contract_comment_price: Order price. <b>Required</b> if you submit a limit order
  contract_comment_triggerDirection: |
    Trigger direction. Mainly used in conditional order. Trigger the order when market price rises to <b>triggerPrice</b> or falls to <b>triggerPrice</b>. <code>1</code>: rise; <code>2</code>: fall
  contract_comment_triggerPrice: Trigger price
  contract_getOrder: Get Order List
  contract_para_getOrder: |
    <p><p><b>Interface:</b></p>
    <p>Access my order list.</p>
    <p>As order creation/cancellation is asynchronous, the data returned from the interface may be delayed. To access order information in real-time, call the interface enquiring information on open orders in real-time.</p></p>
  contract_comment_tpTriggerBy: Trigger type of take profit. <code>LastPrice</code> in default. If it is USDC order, type is <code>MarkPrice</code> in default.
  contract_comment_slTriggerBy: Trigger type of stop loss. <code>LastPrice</code> in default. If it is USDC order, type is <code>MarkPrice</code> in default.
  contract_comment_nextPageCursor: Next page cursor
  contract_comment_getOrderTriggerPrice: If <code>stopOrderType</code> is <b>TrailingProfit</b>, triggerPrice means activate price. Otherwise, it is trigger price.
  contract_cancelOrder: Cancel order
  contract_para_cancelOrder: |
    <p><b>Interface:</b></p>
    <p>Cancel order. <code>orderId</code> or <code>orderLinkId</code> is required. </p>
    <p>orderId - Once you have successfully created an order, the system will send you the unique 36-character order ID.</p>
    <p>You can cancel only cancel the order not filled or not completely filled. You cannot cancel orders that are completely filled.</p>
  contract_cancelAllOrders: Cancel all orders
  contract_para_cancelAllOrders: |
    <p>Cancel all orders that are unfilled or partially filled. Fully filled orders cannot be cancelled.</p>
  contract_replaceOrder: Replace order
  contract_para_replaceOrder: |
    <p>Replace order can modify/amend your orders.</p>
  contract_getRealtimeOrder: Get Order (real-time)
  contract_para_getRealtimeOrder: |
    <p>Query real-time order information. If only <code>orderId</code> or <code>orderLinkId</code> are passed, a single order will be returned; otherwise, <b>returns up to <a href="#t-orderlimits">500</a> unfilled orders</b></p>.
    <p>Ordered by <code>createdTime</code> in descending order.</p>
  contract_comment_realtimeOrderSymbol: Symbol name.
  contract_comment_positionSettleCoin: Settle coin. Either <code>symbol</code> or <code>settleCoin</code> is required. If both are passed, <code>symbol</code> is used first.
  contract_para_position: |
    <p><b>Interface:</b></p>
    <p>Accessing personal list of positions. Users can access information about their open positions through this interface, such as the quantity and wallet balance.</p>
  contract_notice_position: |
    If symbol is passed in single, rate limit is counted as 1 per request. If symbol is passed in multiple, rate limit is counted as 10 per request.
  contract_comment_dataFilter: |
    Only work when <code>settleCoin</code> is passed. <code>full</code>: get all positions regardless zero or not based on settle coin. <code>valid</code>: get valid positions based on settle coin
  contract_comment_riskId: <a href="#t-dv_risklimithead">Risk limit ID</a>
  contract_comment_positionBalance: Position balance
  contract_comment_tradeMode: |
    Cross/isolated mode. <code>0</code>: cross margin mode; <code>1</code>: isolated margin mode
  contract_para_switchIsolated: Switch cross margin mode/isolated margin mode
  contract_comment_buyLeverage: The value must be equal to <code>sellLeverage</code> value
  contract_comment_sellLeverage: The value must be equal to <code>buyLeverage</code> value
  contract_comment_mode: |
    Position mode. <code>0</code>: One-Way mode. <code>3</code>: Hedge mode
  contract_comment_tpSlMode: |
    TP/SL mode. <code>Full</code>: set TP/SL to full mode; <code>Partial</code>: set TP/SL to partial mode
  contract_comment_orderId: Order ID. If null, all executed orders are returned
  contract_comment_startTime: Start timestamp in millisecond
  contract_comment_endTime: End timestamp in millisecond
  contract_comment_lastLiqInd: Only valid while <code>execType</code> is <code>Trade</code>, <code>AdlTrade</code>, <code>BustTrade</code>
  contract_comment_autoAddMargin: Turn on/off auto add margin. <code>0</code>：off. <code>1</code>：on
  dv_enum_comment_getSymbol: You can get all symbols with the <a href="#t-dv_instrhead">Get Instrument Info</a> endpoint.
  # open interest limit info
  OILimitInfo: Get Open Interest Limit Info
  OILimitInfo_para: |
    Get the information of open interest limit.
    <p>
    <b>Note:</b></br>
    <ul>
      <li>Only the api key of master account is applicable.</li>
      <li>Unified Margin Account is applicable to this endpoint as well.</li>
      <li>Only USDT PERPETUAL is supported currently.</li>
      <li>Future v2 authentication way is applicable.</li>
    </ul>
    </p>
  row_resp_comment_currentLimitPcnt: The current limit percentage of the position under user group. The value is like <code>0.0000</code>
  row_resp_comment_totalBuyPositionSize: The total position size of <code>Buy</code> side under user group
  row_resp_comment_totalSellPositionSize: The total position size of <code>Sell</code> side under user group
  row_resp_comment_estMaxPositionSize: The estimated maximum position size. Calculation：<code>The latest Open Interest * currentLimitPcnt</code>. Single side max(long position size, short position size)
  row_resp_comment_openInterest: The open interest of the recent 5 mins
  row_resp_comment_userId: User ID
  row_resp_comment_positionSize: The position size of this user id. <b>Note</b>：the data might be latency
  row_resp_comment_side: The position side. <code>Buy</code>, <code>Sell</code>
  row_resp_comment_updateTime: Update timestamp

  # spot
  spotV1: v1

  spotV3: v3
  getSymbols: Get All Symbols
  spotV3_auth_codequote_construct: |
    Different requests need different message formats. Message format for <b>GET</b> requests:
  spotV3_comment_innovation: <code>1</code> indicates that the price of this currency is relatively volatile
  spotV3_comment_showStatus: <code>1</code> indicates that the symbol open for trading
  spotV3_comment_side: Side. <code>Buy</code>, <code>Sell</code>
  spotV3_comment_isWorking: Is working. <code>0</code>：valid, <code>1</code>：invalid
  spotV3_comment_cummulativeQuoteQty: Total order quantity. For some historical data, it might less than 0, and that means it is not applicable
  spotV3_comment_orderLinkId: Unique user-set order ID. <b>Required</b> if not passing <code>orderId</code>
  spotV3_comment_orderId: Order ID. <b>Required</b> if not passing <code>orderLinkId</code>
  spotV3_comment_orderTypes: Order type. <code>LIMIT</code> in default. It allows multiple types, separated by comma, e.a LIMIT,LIMIT_MAKER
  spotV3_comment_success: Batch cancel successfully or not. <code>0</code>：fail, <code>1</code>：success
  spotV3_comment_isBuyer: <code>0</code>：Buyer, <code>1</code>：Seller
  spotV3_comment_isMaker: <code>0</code>：Maker, <code>1</code>：Taker
  spotV3_comment_isBuyerMaker: <code>0</code>：buy order, <code>1</code>：sell order
  spotV3_comment_t: 時間戳(毫秒) Timestamp(ms)

  # account asset
  assetV1: v1
  assetV3: v3

  allowDepositPageCursor: |
    cursor information: used for pagination.  Default value: ""
  DWstarttimeMS: |
    start time (In Millisecond).  Default value: 30 days before the current time
  DWendtimeMS: |
    end time (In Millisecond). Default value: current time
  assetWithdraw_timestamp: timestamp. Allowed timeframe is 5 mins before and after based on current timestamp
  accountAssetV3_chainType: |
    Chain name. Return all if not passed. <br/>
    <b>Note</b>, pass chain name, e.g. <code>ETH</code> instead of <Code>ERC20</code>
  accountAssetV3_sub_chainType: |
    Chain. <b>Note</b>, pass chain name, e.g. <code>ETH</code> instead of <Code>ERC20</code>
  accountAssetV3_bizType: Account business subtype
  accountAsseV3_assetInfo_accountType: Account type, <b>SPOT</b> in default. For now, only <code>SPOT</code> is available.
  accountCoinBalance_para: |
    You could get coin balance under the master account, and those sub account coin balance of master account.<br>
    <b>Notice</b>: It's not allowed to get master account coin balance via sub account api key.
  usdc_isBlockTrade: Is block trade
  usdc_side: Buy or Sell of taker
  unified_baseCoin_param: Base coin. Only valid when <code>category</code>=option. If not passed, BTC by default.
  unified_baseCoin_param_2: Base coin. When <code>category</code>=option. If not passed, BTC by default; when <code>category</code>=linear, if <b>BTC</code> passed, BTCPERP & BTCUSDT returned.
  unified_baseCoin_param_3: Base coin. When <code>category</code>=option. If not passed, BTC by default.

  # websocket USDC option underlying price
  websocketunderlyingPrice: Underlying Price
  websocketunderlyingPrice_um: underlying price(option)
  usdc_wss_underlyingPrice_para: |
    Get the stream of underlying price for those symbols deliveried at the same day.<br/>
    <br/>
    Push frequency: <b>1000ms</b><br/>
    <br/>
    <b>Topic</b>: <code>underlying.{baseCoin}_USD.{deliveryDate}</code> e.g. underlying.BTC_USD.19OCT22
  usdc_expireTime: Delivery time
  usdc_underlyingPrice: The underlying price. This value will become <b>estimated delivery price</b> when it comes to 30 mins before delivery, otherwise it is the same value as <code>underlyingOriginPrice</code>
  usdc_timestamp: The timestamp calculate the price
  usdc_underlyingOriginPrice: The underlying price
  usdc_reqId: The traceId of the message. Internal used ONLY
  websocketEstimatedDeliveryPrice: Estimated Delivery Price
  websocketEstimatedDeliveryPrice_note: There is no stream pushed until 30 minutes before the delivery time.
  websocketEstimatedDeliveryPrice_para: |
    Get the stream of estimated delivery price for those symbols deliveried at the same day.<br/>
    <br/>
    <b>Topic</b>:<br/> <code>estimated_delivery_price.{baseCoin}_USD.{deliveryDate}</code><br/> e.g. estimated_delivery_price.BTC_USD.19OCT22
  usdc_estimatedDeliveryPrice: Estimated delivery price

  # coin-info v3
  coin_info_chain: chain name
  coin_info_chainDeposit: The chain status of deposit. <code>0</code>：suspend; <code>1</code>：normal
  coin_info_chainWithdraw: The chain status of withdraw. <code>0</code>：suspend; <code>1</code>：normal
  coin_info_minAccuracy: The precision of withdraw or deposit
  assetRateLimitNotice: Each endpoint has its own rate limit.

  # account asset - user
  user_apikey_api: Master-Sub User Endpoints
  user_apikey_para: The following API data endpoints require authentication.
  user_apikey_notice: |
    The API key of user id must own one of permissions will be allowed to call following API endpoints.
    <li>SUB UID: "Account Transfer"</li>
    <li>MASTER UID: "Account Transfer", "Subaccount Transfer", "Withdrawal"</li>
  create_sub_uid: Create Sub UID
  createSubUid_para: Create a new sub user id. Use <b>master</b> user's api key ONLY.
  user_uid_resp_comment: Sub user Id
  user_username_req_comment: |
    Give a username of the new sub user id.
    <li>6-16 characters, must include both numbers and letters. </li>
    <li>cannot be the same as the exist or deleted one. </li>
  user_username_resp_comment: Username
  user_memberType_req_comment: |
    <code>1</code>: normal sub account, <code>6</code>: custodial sub account
  user_switch_req_comment: |
    <code>0</code>: turn off quick login, <code>1</code>: turn on quick login. <b>0</b> by default
  user_note_req_comment: Set a remark
  user_remark_resp_comment: The remark
  create_subuser_apikey: Create Sub UID API key
  create_subuser_apikey_para: To create new API key for those newly created sub UID. Use <b>master</b> user's api key ONLY.
  user_readOnly_comment: <code>0</code>：Read and Write. <code>1</code>：Read only
  user_ips_req_comment: |
    Set the IP bind. example: ["192.168.0.1,192.168.0.2"]<br/>
    <b>note</b>: <li>don't pass <code>ips</code> or pass with ["*"] means no bind</li><li>No ip bound api key will be invalid after <b>90 days</b></li><li>api key will be invalid after <b>7 days</b> once the account password is changed</li>
  user_sub_permissions_req_comment: |
    Tick the types of permission.<br/>
    <b>note</b>: one of blew types must be passed, otherwise the error is thrown
  user_permissions_ContractTrade_comment: Contract Trade. <code>["Order","Position"]</code>
  user_permissions_Spot_comment: Spot Trade. <code>["SpotTrade"]</code>
  user_permissions_Wallet_comment: Wallet. <code>["AccountTransfer"]</code>
  user_permissions_Options_comment: USDC Contract. <code>["OptionsTrade"]</code>
  user_permissions_Derivatives_comment: Derivatives v3. <code>["DerivativesTrade"]</code>
  user_permissions_Exchange_comment: Exchange. <code>["ExchangeHistory"]</code>
  user_id_resp_comment: Unique id. Internal used
  user_apiKey_resp_comment: Api key
  user_secret_resp_comment: |
    The secret paired with api key.<br/>
    <b>note</b>: The secret can't be queried by GET api. Please keep it properly
  user_permissions_resp_comment: The types of permission
  user_permissions_ContractTrade_resp_comment: Permisson of contract trade
  user_permissions_Spot_resp_comment: Permisson of spot
  user_permissions_Wallet_resp_comment: Permisson of wallet
  user_permissions_Options_resp_comment: Permission of USDC Contract. It supports trade option and usdc perpetual.
  user_permissions_Derivatives_resp_comment: Permission of derivatives
  user_sub_permissions_CopyTrading_resp_comment: Permission of copytrade. Not applicable to sub account, always <code>[]</code>
  user_sub_permissions_BlockTrade_resp_comment: Permission of blocktrade. Not applicable to sub account, always <code>[]</code>
  user_sub_permissions_NFT_resp_comment: Permission of NFT. Not applicable to sub account, always <code>[]</code>
  user_permissions_Exchange_resp_comment: Permission of exchange

  get_sub_members_list: Get Sub UID List
  get_sub_members_list_parap: Get all sub uid of master account. Use <b>master</b> user's api key ONLY.
  user_status_resp_comment: |
    The status of the user account<br/>
    <li><code>1</code>: normal</li>
    <li><code>2</code>: login banned</li>
    <li><code>4</code>: frozen</li>

  froze_sub_uid: Froze Sub UID
  froze_sub_uid_para: Froze sub uid. Use <b>master</b> user's api key ONLY.
  user_froze_req_comment: <code>0</code>：unfroze, <code>1</code>：froze

  get_api_key_info: Get API Key Information
  get_api_key_info_para: Get the information of the api key. Use the api key pending to be checked to call the endpoint.</br> Both <b>master</b> and <b>sub</b> user's api key are applicable.
  user_apiKeyInfo_secret_resp_comment: Always <code>""</code>
  user_type_resp_comment: The type of api key. <code>1</code>：personal, <code>2</code>：connected to the third-party app
  user_apiKeyInfo_ips_resp_comment: IP bound
  user_deadLineDay_resp_comment: The remaining valid days of api key. Only for those api key with no IP bound or the password has been changed
  user_expiredAt_resp_comment: The expiry day of the api key. Only for those api key with no IP bound or the password has been changed
  user_createdAt_resp_comment: The create day of the api key
  user_unified_resp_comment: Whether the account to which the account upgrade to unified margin account. <code>0</code>：regular account; <code>1</code>：unified margin account
  user_unified_trade_resp_comment: Whether the account to which the account upgrade to unified trade account. <code>0</code>：regular account; <code>1</code>：unified trade account

  modify_master_api_key: Modify Master API Key
  modify_master_api_key_para: Modify the settings of master api key. Use the api key pending to be modified to call the endpoint. Use <b>master</b> user's api key ONLY.
  user_master_permissions_Wallet_comment: Wallet. <code>["AccountTransfer","SubMemberTransfer"]</code>
  user_master_permissions_CopyTrading_req_comment: Copytrade. <code>["CopyTrading"]</code>
  user_master_permissions_BlockTrade_req_comment: Blocktrade. <code>["BlockTrade"]</code>
  user_master_permissions_NFT_req_comment: NFT. <code>["NFTQueryProductList"]</code>
  user_master_permissions_CopyTrading_resp_comment: Permission of copy trade
  user_master_permissions_BlockTrade_resp_comment: Permission of block trade
  user_master_permissions_NFT_resp_comment: Permission of NFT

  delete_master_api_key: Delete Master API Key
  delete_master_api_key_para: Delete the api key of master account. Use the api key pending to be delete to call the endpoint. Use <b>master</b> user's api key ONLY.
  modify_sub_api_key: Modify Sub API Key
  modify_sub_api_key_para: Modify the settings of sub api key. Use the api key pending to be modified to call the endpoint. Use <b>sub</b> user's api key ONLY.
  delete_sub_api_key: Delete Sub API Key
  delete_sub_api_key_para: Delete the api key of sub account. Use the api key pending to be delete to call the endpoint. Use <b>sub</b> user's api key ONLY.

  userApikeyEndpoints: Rate Limits For Master-Sub User Endpoints
  delete_api_key_warning: BE CAREFUL! The API key used to call this interface will be invalid immediately.
  modify_api_key_notice: Only the api key that calls this interface can be modified
  subMember_desposit_para: Get the deposit address information of sub account. Use <b>master</b> user's api key ONLY.

  updateAt_usdc_orderHistory: Depreciated. Please ignore

  # websocket USDC option underlying price by base coin
  websocketunderlyingPriceByBasecoin: Underlying Price By Base Coin
  usdc_wss_underlyingPrice_baseCoin_para: |
    Get the stream of underlying price for those symbols with the same base coin.<br/>
    <br/>
    Push frequency: <b>1000ms</b><br/>
    <br/>
    <b>Topic</b>: <code>underlying_price.{baseCoin}</code> e.g. underlying_price.BTC
  usdc_deliveryDate: The specific date time of delivery date
  usdc_isEstimated: Whether the price is an estimated delivery price
  usdc_price: The underlying price. This value will become <b>estimated delivery price</b> when it comes to 30 mins before delivery
  usdc_seconds: Number of seconds till finalizing the instrument
  # websocket USDC option instumentinfo by base coin
  websocketIntrumentInfoBaseCoin: Latest Intrument Info By Base Coin
  usdcLatestSymbolInfoBaseCoin: |
    Get latest symbol info by base coin
    <p>Topic format:</p>
    <p>instrument_info.all.{baseCoin},such as: instrument_info.all.BTC</p>


  # Tax API
  tax: Tax
  taxEndpoint: Tax Endpoints
  registerDate: Get User Register Date
  requestExportRepot: Request Export Report
  exportReportStatus: Get Export Report Status
  retrieveDataExport: Retrieve Data Export
  dataExplanation: Data Explanation
  tradeHistoryType: Trade History
  spotTradeHistory: 1. Get Spot Trade History
  contractTradeHistory: 2. Get Contract Trade History
  usdcOptionTradeHistory: 3. Get USDC Options Trade History
  nftTradeHistory: 4. Get NFT Trade History
  savingsYieldHistory: 1. Get BybitSavings Yield History
  liquidityMiningLiquidityHistory: 2. Get LiquidityMining Liquidity History
  liquidityMiningYieldHistory: 3. Get LiquidityMining Yield History
  liquidityMiningSwapHistory: 4. Get LiquidityMining Swap History
  dualAssetSwapHistory: 5. Get DualAsset Swap History
  defiMiningYieldHistory: 6. Get DeFiMining Yield History
  lauchpoolYieldHistory: 7. Get Launchpool Yield History
  sharkfinYieldHistory: 8. Get Sharkfin Yield History
  cryptoDepositHistory: 1. Get Crypto Deposit History
  p2pDepositHistory: 2. Get P2P Deposit History
  fiatDepositWithdrawHistory: 3. Get Fiat Deposit and Withdraw History
  expressOrderDepositHistory: 4. Get Express Order Deposit History
  thirdPartyDepositHistory: 5. Get Third Party Deposit History
  cryptoWithdrawHistory: 6. Get Crypto Withdraw History
  nftDepositWithdrawalHistory: 7. Get NFT Deposit and Withdrawal History
  couponHistory: 1. Get Coupon History
  bonusHistory: 2. Get Bonus History
  PNLHistoryType: P&L History
  earnHistoryType: Earn History
  depositNWithdrawHistoryType: Deposit And Withdraw History
  bonusHistoryType: Bonus History
  airdropHistoryType: Airdrop History
  taxRegisterDate: UNIX Time. This is in milleseconds. Date that the specific user registers on the platform
  taxStartTime: UNIX Time. This is in seconds. TimeStamp for Report Start Time. The StartTime is included in the Time range for the Data Export.
  taxEndTime: UNIX Time. This is in seconds. TimeStamp for Report End Time. The EndTime is not included in the Time range for the Data Export. Do note that for each request, we will only allow up to 2 months time range search from the StartTime.
  taxQueryId: Report Request ID
  taxExportStatus: -1 Failed;0 Queued;1 Processing;2 Processed;3 Expired
  taxReportUrl: URL of files (Basepath+Files). To shorten the time it takes to generate the report, it could generate multiple files. Do take note of this and combine the several files using the same basepath when requesting the data export

  taxOrderId: Order ID of the closing order.
  taxTradeId: Trade ID of the closing order.
  taxSymbol: Name of the trading pair in the form of <QuoteCoin><BaseCoin>
  taxSide: Side. Either Buy or Sell direction
  taxQuoteCoin: Symbol of the Quote Coin
  taxBaseCoin: Symbol of the Executed Coin
  taxExecValue: Transacted volume
  taxTradingFee: Trading fee for a single fill
  taxFeeToken: Token of the Trading Fee
  taxTradeTime: UNIX Time. This is in milliseconds. Time when the trade was executed
  taxContractType: Types of Contract. Inverse Contracts, Linear Contracts, Future Contracts
  taxClosedSize: Closed Size
  taxCumEntryValue: Closed position value
  taxAvgEntryPrice: Average entry price
  taxCumExitValue: Cumulative trading value of position closing orders
  taxAvgExitPrice: Average exit price
  taxClosedPNL: Closed Profit and Loss
  taxFillCount: The number of fills in a single order
  taxAssetStakedCoin: Coin that was used to staked in the Bybit Savings Product
  taxStakingType: Type of Staking. Flexible and Fixed Term
  taxAssetEarnedCoin: Coin that the Interest is given out in
  taxEffectiveStakingAmount: Total amount staked with the Asset Staked coin
  taxYield: Amount of the Interest coin that was given out based on
  taxExecPrice: Execution Price
  taxExecQty: Transaction Quantity
  taxExecType: Execution Types. Trade, ADL, BustTrade
  taxFeeRate: Rates for Maker or taker fee
  taxNetwork: Name of Network.
  taxNftId: ID of the NFT collection
  taxPlatformFee: Fees for Platform, Fee is as per Base coin
  taxShareFee: Fees for Sharing, Fee is as per Base coin
  taxOrderType: Includes the different types of liquidity mining. Add, Remove, Reduce Leverage, Reinvest
  taxEntryPrice: Entry price of principal coin pair at time of order
  taxLeverage: Leverage Multiples
  taxSlippage: Difference between price of an order and the price when the order actually executes
  taxLiquidity: Liquidity = Principal Change multiplied by Leverage
  taxInitialCoin: The coin in the pair that you are trying to swap from.
  taxDepositAmount: Quantity of the selected coin in the pair that you are trying to swap from
  taxSwapCoin: The coin in the pair that you are trying to swap into.
  taxSwapAmount: Quantity of the selected coin in the pair that you are trying to swap to
  taxSwapFeeToken: Fee will be in the swap coin.
  taxSwapFee: Fee incurred after the swap was successfully performed. Fee will be in the swap coin
  taxOrderTime: UNIX Time. This is in milliseconds. Time which the order was ordered
  taxTxid: TransactionID
  taxDepositType: Type of Deposit. On-chain Deposit
  taxChainType: Chain name
  taxFinalAmount: Quantity of Crypto
  taxCompletedTime: UNIX Time. This is in milliseconds. Time that the Crypto is received in Bybit platform.
  taxP2PSide: For P2P Buyer, this represents the buyer bought the respective Coin and using Fiat currency. For P2P Seller, this represents the buyer sold the respective Coin and receive Fiat currency in return.
  taxFiat: Fiat type
  taxFiatAmount: Fiat deposited
  taxCoin: Symbol of coin purchased
  taxCoinPrice: Price of coin purchased
  taxCoinAmount: Quantity of coin that is purchased
  taxType: Type. DEPOSIT, WITHDRAW
  taxFee: Fee for Fiat Deposit
  taxPaymentMethods: Different payment methods
  taxExpressOrderDepositSide: Type of Order. Buy
  taxExpressOrderDepositAmount: Fiat deposited via Credit card.
  taxDestinationCoin: Symbol of coin purchased
  taxExpressOrderDepositFee: Any fees in fiat involved when depositing via Credit card
  taxPlatform: Payment Platform methods
  taxCryptoWithdrawFee: Withdrawal fee as per the withdrawal coin
  taxTxHash: Unique IDs recording each NFT transaction
  taxTokenId: All NFTs have a uint256 variable that identifies different NFT
  taxTransferType: Type. Deposit, Withdrawal
  taxTradingNftFee: Any fee incurred using the transaction of the NFT
  taxCouponCoin: Coin that is given to user as coupon
  taxCouponFinalAmount: Amount of the coin given to user
  taxBonusCoin: Coin that is given to user as bonus
  taxBonusFinalAmount: Amount of the coin given to user
  taxAirdropCoin: Coin that is airdropped to user
  taxAirdropFinalAmount: Amount of the airdrop given to user
  taxAirdropTransferType: Type of Airdrop. Airdrop Deposit, Airdrop Withdrawal
  taxTransferDescription: Description of the Transfer
  taxSettleCoin: Settle Coin. Coin for Profit and Loss
  taxBonusAndCoupon: <br/><b>Bonus</b> - The experience bonus can be used to open a position and deduct the handling fee and the funding rate fee because it is paid directly to the user's asset account. All bonuses shown are already applied by the users.<br/> <b>Coupon</b> - Money from coupons are deductible will only be used to offset the handling fee. It will not be added to the user's asset account. It will be refunded to the user's asset account following the deduction. All coupons shown are already applied by the users.
  exportReportStatusDesc: The time to generate the file depends on the length of your query time interval and the amount of data. It may take a long time to generate the file, so you don’t need to call this endpoints all the time to get the status.
  convertFileToCsv: Convert S3 Files To CSV
  convertFileToCsvDesc: The file downloaded according to the url provided by the endpoint is a S3 file and needs to be converted into a csv file. You can refer to the python code on the right for conversion

  contract_cancelAll_settleCoin: |
    Cancel orders by settle coin. <li>If <code>settleCoin</code>=USDT, then cancel all USDT perp orders</li><li>if <code>settleCoin</code>=BTC, then cancel BTCUSD/BTCUSDH23</li>

  option_wss_lengthLimit_warning: Be careful of the length of message should be up to 25k characters.

  # openAPI v3 - orderStatus
  orderStatus_v3: Query list of orders in designated states. If this parameter is not passed, the orders in all states shall be enquired by default.

  # derivatives v3 - category enum
  dv3_category_future: Future, including linear perp, USDC perp, inverse perp & inverse futures
  dv3_category_linear: Linear perpetual, including USDC perp.
  dv3_category_inverse: Inverse futures, including inverse perpetual, inverse futures.
  dv3_category_option: USDC Option

  dv3_orderbook_symbol: Symbol name. <code>category</code>=option is <b>required</b> when symbol is option
  dv3_orderbook_category: Derivatives products category
  dv3_kline_category: Derivatives products category. <code>option</code> is not supported
  dv3_ticker_category: Derivatives products category. If both <code>category</code> and <code>symbol</code> are not passed，it returns all futures data by default
  dv3_instrument_category: Derivatives products category. If both <code>category</code> and <code>symbol</code> are not passed，it returns all futures data by default
  dv3_instrument_symbol: Symbol name. If symbol belongs to option, then category=option is required
  dv3_instrument_unifiedMarginTrade: Weather support unified margin trade or not. This param is for future data ONLY
  dv3_riskLimit_category: Derivatives products category. <code>option</code> is not supported.
  dv3_deliveryPrice_category: Derivatives products category. <code>option</code> ONLY
  dv3_recentTrade_category: |
    Derivatives products category. <li>If <code>category</code> not passed, or passed with <code>linear</code>,<code>inverse</code>, then <code>symbol</code> is <b>required</b></li><li>If <code>category</code>=option, then <code>symbol</code> is optional</li>
  premium_index_price_kline: Get Premium Index Price Kline
  dv3_trade_category: Products category. <code>linear</code>,<code>inverse</code>, <code>option</code>：USDC option. default：<code>linear</code>
  dv3_queryOrder_baseCoin: Base coin. <code>option</code> ONLY
  dv3_realtimeOrder_baseCoin: Base coin
  contract_comment_realtimeSettleCoin: Settle coin. Either <code>symbol</code>, <code>settleCoin</code> or <code>baseCoin</code> is required. Query priority：symbol > baseCoin > settleCoin.
  contract_comment_triggerBy: Trigger price type. <code>LastPrice</code> in default. If it is USDC order, type is <code>MarkPrice</code> in default.
  contract_comment_cancelType: The cancel type of the order
  contract_executionList_orderLinkId: User customised order id. <code>option</code> ONLY
  contract_executionList_orderFilter: Order filter. <code>future</code> ONLY
  contract_executionList_symbol: Symbol name. <li>if category=linear or inverse, then symbol is required</li><li>If category=option, then symbol is optional</li>
  contract_wallet_accountIM: USDC account initial margin
  contract_wallet_accountMM: USDC account maintainence margin
  contract_translog_category: Product category. <code>linear</code>：USDC PERP; <code>option</code>
  contract_translog_para: Query transaction logs of <b>USDC</b> account
  contract_accountInfo_updateTime: Account info update time (ms)
  accountConfig: Get Account Config
  accountConfig_para: Get USDC account margin mode
  contract_setMarginMode_reasons: If requested successfully, no object returns.
  contract_setMarginMode_reasonCode: Fail reason code. Only valid when fail to request
  contract_setMarginMode_reasonMsg: Fail reason message. Only valid when fail to request
  setMarginMode_para: If not set, the USDC account is regular margin mode by default.
  account_withdraw_forceChain: Force to withdraw on chain or not. <code>0</code>：If parsed as internal address, then internal transfer (by default)；<code>1</code>：Force withdraw on chain
  otcLoan: Institutional Loan Endpoints
  otcLoanNotice: Below endpoints are provided to institutional clients.
  marginProductInfo: Get Margin Product Info
  otcLoan_req_productId: Product Id. If not passed, then return all products info
  otcLoan_productId: Product Id
  otcLoan_leverage: leverage
  otcLoan_supportSpot: Whether to support spot. <code>0</code>:false; <code>1</code>:true
  otcLoan_supportContract: Whether to support contract . <code>0</code>:false; <code>1</code>:true
  otcLoan_withdrawLine: Restrict line for withdrawal
  otcLoan_transferLine: Restrict line for transfer
  otcLoan_spotBuyLine: Restrict line for SPOT <b>buy</b>
  otcLoan_spotSellLine: Restrict line for SPOT <b>sell</b>
  otcLoan_contractOpenLine: Restrict line for CONTRACT open position
  otcLoan_liquidationLine: Line for liquidation
  otcLoan_stopLiquidationLine: Line for stop liquidation
  otcLoan_contractLeverage: Allowed max leverage of opening contract position
  otcLoan_transferRatio: Available transfer ratio of loan funds
  otcLoan_spotSymbols: The whitelist of spot trading pairs
  otcLoan_contractSymbols: The whitelist of contract trading pairs
  marginCoinInfo: Margin Coin Info
  marginCoinInfo_req_productId: ProductId. If not passed, then return all product margin coin. For spot, it returns coin that convertRation greater than 0.
  otcLoan_spotToken: Spot margin coin
  token: Margin coin
  convertRatio: Margin coin convert ratio
  otcLoan_contractToken: Contract margin coin

  loanInfo: Get Loan Info
  loanInfo_para: Get those loan orders information. Authentication needed.
  loanInfo_req_orderId: Loan order id. If not passed, then return all orders, sort by <code>loanTime</code> in descend
  loanInfo_limit: Limit for data size per page. 10 by default, the max is 100
  otcLoan_orderId: Loan order id
  otcLoan_parentUid: User parent UID
  otcLoan_loanTime: Loan timestamp, in milliseconds
  otcLoan_loanCoin: Loan coin
  otcLoan_loanAmount: Loan amount
  otcLoan_unpaidAmount: Unpaid principal
  otcLoan_unpaidInterest: Unpaid interest
  otcLoan_repaidAmount: Repaid principal
  otcLoan_repaidInterest: Repaid interest
  otcLoan_interestRate: Daily interest rate
  otcLoan_status: <code>1</code>：outstanding; <code>2</code>：paid off
  repayInfo: Get Repay Info
  repayInfo_para: Get repaid order information. Authentication needed.
  otcLoan_repayOrderId: Repaid order Id
  otcLoan_repaidTime: Repaid timetstamp, in milliesconds
  otcLoan_token: Repaid coin
  otcLoan_quantity: Repaid principle
  otcLoan_interest: Repaid interest
  otcLoan_businessType: Repaid type. <code>1</code>：normal repayment; <code>2</code>：repaid by liquidation
  otcLoan_repay_status: Repaid status. <code>1</code>：success; <code>2</code>：fail

  ltv: Get LTV
  ltv_para: Get LTV. Authentication needed.
  ltv_notice: If user only binds spot, <code>contractBalanceInfo</code> is []

  otcLoan_ltv: Risk rate
  otcLoan_ltv_parentUid: User id
  otcLoan_subAccountUids: Bound user id
  otcLoan_ltv_unpaidAmount: Total debt(USDT)
  otcLoan_unpaidInfo: Debt details
  otcLoan_ltv_token: coin
  otcLoan_unpaidQty: Unpaid principle
  otcLoan_Interest: Unpaid interest
  otcLoan_balance: Total asset. (margin coins converted to USDT)
  otcLoan_spotBalanceInfo: Spot asset details
  otcLoan_ltv_spot_token: Spot margin coin
  otcLoan_ltv_spot_price: Spot margin coin price
  otcLoan_ltv_spot_qty: Spot margin coin quantity
  otcLoan_contractInfo: Contract asset details
  otcLoan_ltv_contract_token: Contract margin coin
  otcLoan_ltv_contract_price: Contract margin coin index price
  otcLoan_ltv_contract_qty: Contract margin coin quantity
  withdrawType: Withdraw type. <code>0</code>：on chain; <code>1</code>：internal address transfer
  position_ability_para: <b>The position-switch ability for current contract：</b>
  mode_1: Regular account
  mode_2: Unified margin account
  product_1: USDT perpetual
  product_2: USDC perpetual
  product_3: Inverse perpetual
  product_4: Inverse future
  ability_1: <b>Support one-way & hedge-mode</b>
  ability_2: Support one-way ONLY
  ability_3: N/A
  dv_insurance: Get Insurance Data
  insurance_para: Query Bybit insurance data, including all insurance coins. Data is updated at UTC 00:00
  insurance_resp_updatedTime: Data updated time (ms)
  insurance_resp_coin: coin
  insurance_resp_balance: Quantity of coin in the insurance pool
  insurance_resp_value: USD value of coin, formula：the snapshot index price(USD) of the coin * qty of coin
  row_comment_set_margin_mode: REGULAR_MARGIN, PORTFOLIO_MARGIN
  websocketliquidation_para: |
    Query recent liquidation orders in Bybit. Support：USDT Perpetual, Inverse Perpetual, Inverse Future, USDC Perpetual<br/>
    <br/>
    Push frequency：<b>real-time</b><br/>
    <br/>
    <b>Topic:</b><br/>
    <code>liquidation.{symbol}</code>
  liquidation_side: Order side. <code>Buy</code> <code>Sell</code>
  liquidation_positionSide: Position side. <code>long</code>, <code>short</code>. Combined with <code>side</code>, e.g If <code>positionSide</code>=long, <code>side</code>=Sell, then it means long order is liquidated.
  contract_position_markPrice: Real-time mark price
  contract_position_positionStatus: Position status
  dv_instrument_postOnlyMaxOrderQty: The max order qty allowed when timeInforce=PostOnly
  dv_instrument_fundingInterval: Funding fee interval
  spotTradesHisotryTips_tradeId: |
    The rule of <code>fromTradeId</code> and <code>toTradeId</code>:<br/>
    <li><code>orderId</code> is not passed: <br/>1. Only <code>fromTradeId</code> is passed, fromTradeId will not be included in the response. <br/>2. Only <code>toTradeId</code> is passed, toTradeId will not be included in the response. <br/>3. Both <code>fromTradeId</code> and <code>toTradeId</code> are passed, fromTradeId is not included but toTradeId is if toTradeId is an existing tradeId.</li>
    <li><code>orderId</code> is passed: Both <code>fromTradeId</code> and <code>toTradeId</code> are included in the repsonse, if they are existing trade id.</li>
  asset_withdrawType: <code>0</code>(default)：on chain. <code>1</code>：off chain. <code>2</code>：on and off chain
  spot_wssv2_trade_type: Trade type. <code>0</code>：Spot trade. <code>1</code>：Paradigm block trade
  spotV1DataStructureExplain: Common Response Parameters
  ret_code: Success/Error code
  ret_msg: Success/Error msg. Can be <code>success</code>,<code>""</code>,<code>OK</code> for success msg
  result: It might be array<code>[]</code>,object<code>{}</code> depend on business data
  ext_info: Value is <code>null</code>
  ext_code: For market data, it returns <code>null</code>. Others return <code>""</code>
  time_now: Current timestamp
  unified_position_limit: Limit size per page. Max limit is 200, and default value is 20
  ticker_wss_openInterestValue: Open interest value
  websocket_aside_orderbook_L1: Linear & inverse level 1 data：if 3 seconds have elapsed without a change in the orderbook, a snapshot message will be pushed again.
  spot_usdIndexPrice: USD index price. It can be <code>""</code>
  unified_position_riskId: Risk ID. For portfolio margin mode, it returns 0, which means risk limit rules are invalid
  unified_position_leverage: Leverage. For portfolio margin mode, it returns "", which means leverage rules are invalid
  unified_position_positionIM: Position initial margin. For portfolio margin mode, it returns ""
  unified_position_positionMM: Position maintenance margin. For portfolio margin mode, it returns ""
  contract_position_limit: Limit for data size per page. [<code>1</code>, <code>50</code>]. Default：20
  user_getApiKey_notice: With any permission of API key, you can access this endpoint.
  usdcDcp: Disconnection Protection
  setDcp: Set DCP Time Window
  getDcp: Get DCP Setting
  getDcp_retCode: Success/Error Code
  getDcp_retMsg: Success/Error Message
  getDcp_dcpStatus: Dcp status. <code>ON</code>, <code>OFF</code>
  getDcp_timeWindow: The time window to trigger DCP

